<?xml version="1.0" encoding="UTF-8"?><svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mcviz="http://mcviz.net" id="whole_document" onload="mcviz_init(evt)">
<rect id="background" x="0" y="0" width="64.9" height="29.4" style="fill:white;" />
<defs>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg2" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M11.40,20.30 v7.80 l17.70,-0.60 v-4.70 c-6.20,0.00,-6.90,0.00,-6.90,-3.80 v-36.30 l-18.20,0.80 v4.70 c6.10,0.00,6.80,0.00,6.80,3.80 v19.00 c0.00,8.20,-5.00,13.50,-12.30,13.50 c-7.70,0.00,-8.00,-2.50,-8.00,-7.90 v-33.90 l-18.20,0.80 v4.70 c6.20,0.00,6.90,0.00,6.90,3.80 v23.20 c0.00,10.70,8.00,12.90,17.90,12.90 c2.60,0.00,9.80,0.00,14.30,-7.80 z" fill="black" stroke-width="0"/><ellipse cx="0.700" cy="5.400" fill="red" opacity="0" rx="68.160" ry="54.480"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-2" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><line stroke-width="3.98" x1="-27.80" x2="35.80" y1="-32.00" y2="-32.00"/><path d="M11.40,20.30 v7.80 l17.70,-0.60 v-4.70 c-6.20,0.00,-6.90,0.00,-6.90,-3.80 v-36.30 l-18.20,0.80 v4.70 c6.10,0.00,6.80,0.00,6.80,3.80 v19.00 c0.00,8.20,-5.00,13.50,-12.30,13.50 c-7.70,0.00,-8.00,-2.50,-8.00,-7.90 v-33.90 l-18.20,0.80 v4.70 c6.20,0.00,6.90,0.00,6.90,3.80 v23.20 c0.00,10.70,8.00,12.90,17.90,12.90 c2.60,0.00,9.80,0.00,14.30,-7.80 z" fill="black" stroke-width="0"/><ellipse cx="4.000" cy="-1.950" fill="red" opacity="0" rx="76.320" ry="72.120"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg1" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M9.40,23.20 v4.90 l18.30,-0.60 v-4.70 c-6.20,0.00,-6.90,0.00,-6.90,-3.80 v-60.60 l-17.60,0.70 v4.70 c6.20,0.00,6.80,0.00,6.80,3.90 v19.50 c-4.90,-3.90,-10.10,-4.50,-13.40,-4.50 l1.00,3.60 c5.70,0.00,9.70,3.20,11.80,6.00 h0.00 v24.90 c-1.20,1.80,-5.40,7.30,-12.90,7.30 c-12.20,0.00,-12.20,-12.00,-12.20,-19.00 c0.00,-4.80,0.00,-10.20,2.60,-14.00 c2.90,-4.20,7.60,-5.20,10.70,-5.20 l-1.00,-3.60 c-14.50,0.00,-25.00,8.80,-25.00,22.80 c0.00,13.10,9.20,22.60,23.90,22.60 c6.10,0.00,10.90,-2.40,13.90,-4.90 z" fill="black" stroke-width="0"/><ellipse cx="-0.350" cy="-6.750" fill="red" opacity="0" rx="67.320" ry="83.640"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg5" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M-10.90,-12.50 v-29.10 l-17.60,0.70 v4.70 c6.10,0.00,6.80,0.00,6.80,3.90 v59.80 h4.70 l4.90,-5.60 c0.80,0.80,5.70,6.20,14.60,6.20 l-0.90,-3.60 c-7.00,0.00,-10.90,-5.40,-11.90,-6.80 h0.00 v-25.10 c2.70,-3.50,7.50,-6.30,13.00,-6.30 c12.10,0.00,12.10,12.00,12.10,19.00 c0.00,4.70,0.00,10.10,-2.60,14.00 c-2.80,4.10,-7.40,5.20,-10.60,5.20 l0.90,3.60 c14.80,0.00,25.10,-9.00,25.10,-22.80 c0.00,-13.30,-9.40,-22.60,-23.80,-22.60 c-7.30,0.00,-12.30,2.80,-14.70,4.80 z" fill="black" stroke-width="0"/><ellipse cx="-0.450" cy="-6.750" fill="red" opacity="0" rx="67.320" ry="83.640"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-1" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><line stroke-width="3.98" x1="-27.80" x2="35.80" y1="-56.90" y2="-56.90"/><path d="M9.40,23.20 v4.90 l18.30,-0.60 v-4.70 c-6.20,0.00,-6.90,0.00,-6.90,-3.80 v-60.60 l-17.60,0.70 v4.70 c6.20,0.00,6.80,0.00,6.80,3.90 v19.50 c-4.90,-3.90,-10.10,-4.50,-13.40,-4.50 l1.00,3.60 c5.70,0.00,9.70,3.20,11.80,6.00 h0.00 v24.90 c-1.20,1.80,-5.40,7.30,-12.90,7.30 c-12.20,0.00,-12.20,-12.00,-12.20,-19.00 c0.00,-4.80,0.00,-10.20,2.60,-14.00 c2.90,-4.20,7.60,-5.20,10.70,-5.20 l-1.00,-3.60 c-14.50,0.00,-25.00,8.80,-25.00,22.80 c0.00,13.10,9.20,22.60,23.90,22.60 c6.10,0.00,10.90,-2.40,13.90,-4.90 z" fill="black" stroke-width="0"/><ellipse cx="3.700" cy="-14.400" fill="red" opacity="0" rx="77.040" ry="102.000"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-3" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><line stroke-width="3.98" x1="-18.60" x2="26.60" y1="-32.00" y2="-32.00"/><path d="M-1.20,-1.80 l-0.30,-0.10 l-0.40,0.00 l-0.40,-0.10 l-0.40,-0.10 l-0.40,-0.10 l-0.40,-0.10 l-0.80,-0.10 l-0.90,-0.30 l-0.40,-0.10 l-0.40,-0.10 l-0.40,-0.20 l-0.40,-0.10 l-0.40,-0.20 l-0.40,-0.10 l-0.40,-0.20 l-0.40,-0.20 l-0.40,-0.20 l-0.30,-0.30 l-0.30,-0.20 l-0.30,-0.20 l-0.30,-0.30 l-0.30,-0.30 l-0.20,-0.30 l-0.20,-0.30 l-0.20,-0.30 l-0.10,-0.20 l-0.10,-0.20 l0.00,-0.20 l-0.10,-0.20 l0.00,-0.10 l-0.10,-0.20 l0.00,-0.20 l0.00,-0.30 l0.00,-0.20 l0.00,-0.20 c0.00,-6.20,9.20,-6.20,11.10,-6.20 c7.50,0.00,11.30,2.90,11.80,8.50 c0.10,1.40,0.20,1.90,2.30,1.90 c2.30,0.00,2.30,-0.50,2.30,-2.80 v-7.90 c0.00,-1.90,0.00,-2.80,-1.70,-2.80 c-0.50,0.00,-0.60,0.00,-4.50,1.90 c-2.60,-1.30,-6.10,-1.90,-10.10,-1.90 c-3.00,0.00,-18.30,0.00,-18.30,13.00 c0.00,4.00,2.00,6.70,4.00,8.40 c4.00,3.50,7.70,4.10,15.40,5.50 c3.60,0.60,11.10,1.90,11.10,7.70 c0.00,7.50,-9.20,7.50,-11.40,7.50 c-10.60,0.00,-13.10,-7.30,-14.30,-11.50 c-0.50,-1.40,-1.00,-1.40,-2.40,-1.40 c-2.40,0.00,-2.40,0.60,-2.40,2.90 v10.80 c0.00,1.90,0.00,2.80,1.80,2.80 c0.70,0.00,0.90,0.00,3.00,-1.50 c0.10,0.00,2.30,-1.50,2.60,-1.70 c4.50,3.20,9.70,3.20,11.70,3.20 c3.10,0.00,18.40,0.00,18.40,-14.60 c0.00,-4.20,-2.00,-7.70,-5.40,-10.50 c-3.90,-2.90,-7.10,-3.50,-14.90,-4.80 z" fill="black" stroke-width="0"/><ellipse cx="4.000" cy="-1.950" fill="red" opacity="0" rx="54.240" ry="72.120"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg13" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M-39.20,-7.50 l0.10,-0.20 l0.00,-0.20 l0.10,-0.20 l0.00,-0.20 l0.10,-0.30 l0.00,-0.20 l0.20,-0.50 l0.10,-0.50 l0.10,-0.50 l0.10,-0.50 l0.10,-0.20 l0.00,-0.30 l0.10,-0.20 l0.10,-0.20 l0.00,-0.20 l0.10,-0.30 l0.00,-0.20 l0.00,-0.20 l0.10,-0.20 l0.00,-0.10 l0.10,-0.20 l0.00,-0.10 l0.00,-0.20 l0.00,-0.10 l0.10,-0.10 l0.00,-0.10 l0.00,-0.10 l0.00,0.00 l0.00,0.00 c0.00,-1.70,-1.20,-2.70,-2.90,-2.70 c-0.30,0.00,-3.10,0.00,-4.00,3.60 l-14.30,57.60 c-0.30,1.20,-0.30,1.40,-0.30,1.60 c0.00,1.50,1.10,2.70,2.80,2.70 c2.10,0.00,3.30,-1.80,3.50,-2.10 c0.30,-0.90,1.70,-6.00,5.40,-21.40 c3.20,2.70,7.70,3.10,9.70,3.10 c7.00,0.00,10.90,-4.50,13.30,-7.30 c0.90,4.50,4.50,7.30,8.90,7.30 c3.50,0.00,5.80,-2.30,7.40,-5.50 c1.70,-3.60,3.00,-9.70,3.00,-9.90 c0.00,-0.90,-0.90,-0.90,-1.20,-0.90 c-1.00,0.00,-1.10,0.40,-1.40,1.80 c-1.70,6.40,-3.50,12.30,-7.60,12.30 c-2.70,0.00,-3.00,-2.60,-3.00,-4.60 c0.00,-2.10,1.20,-6.80,2.00,-10.30 l2.80,-10.80 c0.30,-1.50,1.30,-5.30,1.70,-6.70 c0.50,-2.40,1.50,-6.20,1.50,-6.70 c0.00,-1.80,-1.40,-2.70,-2.90,-2.70 c-0.50,0.00,-3.10,0.10,-3.90,3.40 l-4.60,18.70 c-1.30,4.90,-2.40,9.20,-2.60,10.10 c-0.10,0.50,-4.90,9.60,-13.00,9.60 c-5.00,0.00,-7.40,-3.30,-7.40,-8.70 c0.00,-2.90,0.70,-5.60,1.40,-8.40 z" fill="black" stroke-width="0"/><path d="M49.70,-28.20 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.30,-0.10 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.20,0.00 l0.10,-0.10 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,-0.10 l0.00,-0.10 l0.10,0.00 l0.00,0.00 l0.00,-0.10 l0.10,0.00 l0.00,-0.10 l0.00,0.00 l0.10,-0.10 l0.00,0.00 l0.00,-0.10 l0.00,-0.10 l0.00,0.00 l0.00,-0.10 l0.10,-0.10 l0.00,0.00 l0.00,-0.10 l0.00,-0.10 l0.00,0.00 l0.00,-0.10 c0.00,-1.80,-1.60,-1.80,-2.80,-1.80 h-41.60 c-1.10,0.00,-2.80,0.00,-2.80,1.70 c0.00,1.80,1.60,1.80,2.80,1.80 z" fill="black" stroke-width="0"/><ellipse cx="-3.350" cy="8.650" fill="red" opacity="0" rx="134.040" ry="96.840"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-14" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><line stroke-width="3.98" x1="-50.40" x2="5.10" y1="-30.60" y2="-30.60"/><path d="M-29.90,-15.40 l0.00,0.00 l0.00,-0.10 l0.00,0.00 l0.00,0.00 l0.00,0.00 l0.00,-0.10 l0.00,0.00 l0.00,-0.10 l0.00,0.00 l0.00,0.00 l-0.10,-0.10 l0.00,0.00 l0.00,-0.10 l0.00,0.00 l0.00,-0.10 l-0.10,0.00 l0.00,-0.10 l0.00,0.00 l-0.10,-0.10 l0.00,0.00 l0.00,0.00 l-0.10,0.00 l0.00,-0.10 l0.00,0.00 l0.00,0.00 l-0.10,0.00 l0.00,0.00 l0.00,-0.10 l-0.10,0.00 l0.00,0.00 l0.00,0.00 l-0.10,0.00 l0.00,0.00 l-0.10,-0.10 l0.00,0.00 l-0.10,0.00 l0.00,0.00 l-0.10,0.00 l0.00,0.00 l-0.10,0.00 l0.00,0.00 l-0.10,0.00 l0.00,0.00 l-0.10,0.00 c-2.30,0.00,-9.60,0.80,-12.10,1.00 c-0.80,0.10,-1.90,0.20,-1.90,2.00 c0.00,1.20,0.90,1.20,2.40,1.20 c4.70,0.00,4.90,0.70,4.90,1.60 c0.00,0.70,-1.10,5.40,-1.80,8.10 l-6.10,24.40 c-0.40,1.50,-1.10,4.30,-1.10,4.50 c0.00,1.10,1.00,1.20,1.60,1.20 h1.40 c6.90,-1.20,17.80,-5.10,28.10,-14.70 c13.10,-12.20,15.80,-25.70,15.80,-26.60 c0.00,-1.70,-1.20,-2.70,-2.90,-2.70 c-0.80,0.00,-3.10,0.40,-3.90,3.30 c-6.30,22.60,-21.50,33.70,-32.90,37.40 z" fill="black" stroke-width="0"/><path d="M11.60,48.70 l-0.10,0.10 l0.00,0.10 l0.00,0.10 l0.00,0.10 l-0.10,0.10 l0.00,0.00 l0.00,0.10 l0.00,0.10 l0.00,0.00 l0.00,0.10 l0.00,0.10 l-0.10,0.00 l0.00,0.10 l0.00,0.00 l0.00,0.10 l0.00,0.00 l0.00,0.10 l0.00,0.00 l0.00,0.00 l0.00,0.10 l0.00,0.00 l0.00,0.00 l0.00,0.10 l0.00,0.00 l0.00,0.00 l0.00,0.00 l0.00,0.00 l0.00,0.10 l0.00,0.00 l0.00,0.00 l0.00,0.00 l0.00,0.00 c0.00,1.50,1.20,2.20,2.40,2.20 c2.50,0.00,3.00,-2.30,3.30,-3.40 c0.10,-0.40,1.50,-6.00,3.20,-12.80 c2.20,1.50,5.00,2.00,7.50,2.00 c6.00,0.00,9.90,-4.90,10.00,-5.00 c1.30,4.80,6.20,5.00,7.20,5.00 c2.50,0.00,4.30,-1.50,5.50,-3.70 c1.50,-2.70,2.40,-6.70,2.40,-7.00 c0.00,-0.90,-0.90,-0.90,-1.10,-0.90 c-0.90,0.00,-1.00,0.30,-1.50,2.20 c-0.80,3.40,-2.20,7.50,-5.10,7.50 c-1.80,0.00,-2.30,-1.60,-2.30,-3.50 c0.00,-1.20,0.50,-3.70,1.10,-5.50 c0.40,-1.90,1.10,-4.70,1.50,-6.30 l1.60,-6.20 c0.40,-1.70,1.20,-4.80,1.20,-5.10 c0.00,-1.40,-1.10,-2.20,-2.30,-2.20 c-0.80,0.00,-2.10,0.30,-2.90,1.60 c-0.20,0.40,-0.70,2.70,-1.10,4.10 l-1.40,5.80 l-2.20,8.70 c-0.50,1.70,-0.50,1.80,-1.10,2.80 c-2.20,3.00,-5.30,5.80,-9.20,5.80 c-5.70,0.00,-5.70,-5.00,-5.70,-6.30 c0.00,-1.80,0.10,-2.70,1.10,-6.50 c0.70,-3.00,0.80,-3.50,1.50,-6.20 l1.00,-3.90 c0.40,-1.50,1.10,-4.10,1.10,-4.40 c0.00,-1.30,-1.00,-2.20,-2.40,-2.20 c-2.50,0.00,-3.10,2.40,-3.30,3.20 z" fill="black" stroke-width="0"/><ellipse cx="1.200" cy="10.900" fill="red" opacity="0" rx="123.840" ry="99.600"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg2212" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M-40.30,23.60 l0.40,0.30 l0.40,0.40 l0.40,0.20 l0.40,0.30 l0.40,0.30 l0.40,0.20 l0.40,0.30 l0.40,0.20 l0.40,0.20 l0.50,0.20 l0.40,0.20 l0.40,0.20 l0.40,0.10 l0.40,0.20 l0.40,0.10 l0.40,0.20 l0.40,0.10 l0.40,0.10 l0.80,0.20 l0.80,0.20 l0.80,0.10 l0.80,0.10 l0.70,0.00 l0.80,0.10 l0.80,0.00 l-1.10,-3.60 c-1.40,0.00,-6.10,0.00,-10.60,-5.40 c-1.10,-1.30,-1.10,-1.40,-1.10,-3.20 v-21.20 c0.00,-1.90,0.10,-2.00,1.50,-3.40 c4.00,-4.00,9.20,-4.70,11.40,-4.70 c6.60,0.00,12.20,6.10,12.20,18.70 c0.00,14.00,-7.00,19.20,-13.40,19.20 l1.10,3.60 c14.90,0.00,25.10,-9.00,25.10,-22.80 c0.00,-13.30,-9.10,-22.60,-23.40,-22.60 c-7.50,0.00,-12.80,3.00,-15.10,4.80 v-4.80 l-17.60,0.80 v4.70 c6.10,0.00,6.80,0.00,6.80,3.80 v50.20 h-6.80 v4.60 h25.10 v-4.60 h-6.90 z" fill="black" stroke-width="0"/><path d="M40.10,-28.20 h21.30 c0.90,0.00,2.60,0.00,2.60,-1.70 c0.00,-1.80,-1.60,-1.80,-2.60,-1.80 h-21.30 v-21.40 c0.00,-0.90,0.00,-2.60,-1.70,-2.60 c-1.70,0.00,-1.70,1.60,-1.70,2.60 v21.40 h-21.40 c-0.90,0.00,-2.60,0.00,-2.60,1.70 c0.00,1.80,1.60,1.80,2.60,1.80 h21.40 v21.40 c0.00,0.90,0.00,2.50,1.60,2.50 c1.80,0.00,1.80,-1.60,1.80,-2.50 z" fill="black" stroke-width="0"/><ellipse cx="2.750" cy="-4.450" fill="red" opacity="0" rx="147.000" ry="123.000"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg6" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M-11.90,-12.10 v27.30 c0.00,10.70,8.60,12.90,15.70,12.90 c7.60,0.00,12.00,-5.70,12.00,-12.90 v-5.30 h-4.60 v5.10 c0.00,6.70,-3.20,9.10,-6.00,9.10 c-5.80,0.00,-5.80,-6.40,-5.80,-8.70 v-27.50 h14.60 v-4.60 h-14.60 v-19.10 h-4.60 c-0.20,10.00,-5.00,19.90,-14.90,20.20 v3.50 z" fill="black" stroke-width="0"/><ellipse cx="-2.150" cy="-3.850" fill="red" opacity="0" rx="43.080" ry="76.680"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-6" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><line stroke-width="3.98" x1="-18.30" x2="26.30" y1="-50.90" y2="-50.90"/><path d="M-11.90,-12.10 v27.30 c0.00,10.70,8.60,12.90,15.70,12.90 c7.60,0.00,12.00,-5.70,12.00,-12.90 v-5.30 h-4.60 v5.10 c0.00,6.70,-3.20,9.10,-6.00,9.10 c-5.80,0.00,-5.80,-6.40,-5.80,-8.70 v-27.50 h14.60 v-4.60 h-14.60 v-19.10 h-4.60 c-0.20,10.00,-5.00,19.90,-14.90,20.20 v3.50 z" fill="black" stroke-width="0"/><ellipse cx="3.100" cy="-11.400" fill="red" opacity="0" rx="55.680" ry="94.800"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-5" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><line stroke-width="3.98" x1="-27.80" x2="35.80" y1="-56.90" y2="-56.90"/><path d="M-10.90,-12.50 v-29.10 l-17.60,0.70 v4.70 c6.10,0.00,6.80,0.00,6.80,3.90 v59.80 h4.70 l4.90,-5.60 c0.80,0.80,5.70,6.20,14.60,6.20 l-0.90,-3.60 c-7.00,0.00,-10.90,-5.40,-11.90,-6.80 h0.00 v-25.10 c2.70,-3.50,7.50,-6.30,13.00,-6.30 c12.10,0.00,12.10,12.00,12.10,19.00 c0.00,4.70,0.00,10.10,-2.60,14.00 c-2.80,4.10,-7.40,5.20,-10.60,5.20 l0.90,3.60 c14.80,0.00,25.10,-9.00,25.10,-22.80 c0.00,-13.30,-9.40,-22.60,-23.80,-22.60 c-7.30,0.00,-12.30,2.80,-14.70,4.80 z" fill="black" stroke-width="0"/><ellipse cx="3.650" cy="-14.400" fill="red" opacity="0" rx="77.160" ry="102.000"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg24" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M14.30,-33.80 l0.00,-0.10 l0.10,-0.20 l0.00,-0.10 l0.10,-0.20 l0.00,-0.10 l0.10,-0.10 l0.10,-0.10 l0.00,-0.10 l0.10,-0.10 l0.00,-0.10 l0.10,-0.10 l0.00,0.00 l0.10,-0.10 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.20,-0.10 l0.10,0.00 l0.20,0.00 l0.10,-0.10 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,-0.10 l0.20,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.20,0.00 l0.10,-0.10 l0.10,0.00 l0.20,0.00 c2.00,-0.20,4.10,-0.20,5.70,-0.20 v-4.70 h-24.20 v4.70 c2.50,0.00,7.20,0.00,10.10,1.10 l-17.10,44.60 l-17.70,-45.70 h9.60 v-4.70 h-32.70 v4.70 h8.60 l4.10,10.60 l-13.60,35.10 l-17.60,-45.70 h9.60 v-4.70 h-32.70 v4.70 h8.60 l23.90,61.90 c0.60,1.60,1.00,2.60,3.50,2.60 c2.50,0.00,2.80,-1.00,3.40,-2.60 l17.40,-44.80 l17.30,44.80 c0.60,1.60,1.00,2.60,3.50,2.60 c2.50,0.00,2.90,-1.00,3.50,-2.60 z" fill="black" stroke-width="0"/><path d="M60.10,-28.20 h21.30 c0.90,0.00,2.60,0.00,2.60,-1.70 c0.00,-1.80,-1.60,-1.80,-2.60,-1.80 h-21.30 v-21.40 c0.00,-0.90,0.00,-2.60,-1.70,-2.60 c-1.70,0.00,-1.70,1.60,-1.70,2.60 v21.40 h-21.40 c-0.90,0.00,-2.60,0.00,-2.60,1.70 c0.00,1.80,1.60,1.80,2.60,1.80 h21.40 v21.40 c0.00,0.90,0.00,2.50,1.60,2.50 c1.80,0.00,1.80,-1.60,1.80,-2.50 z" fill="black" stroke-width="0"/><ellipse cx="-2.900" cy="-13.700" fill="red" opacity="0" rx="208.560" ry="100.800"/></g>
<g fill="none" fill-opacity="1" fill-rule="evenodd" font-size-adjust="none" font-stretch="normal" font-style="normal" font-variant="normal" font-weight="normal" id="pdg-24" letter-spacing="normal" stroke="black" stroke-dasharray="none" stroke-dashoffset="0" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10.433" stroke-opacity="1" text-anchor="start" transform="scale(0.009596)" word-spacing="normal" xml:space="preserve"><path d="M14.30,-33.80 l0.00,-0.10 l0.10,-0.20 l0.00,-0.10 l0.10,-0.20 l0.00,-0.10 l0.10,-0.10 l0.10,-0.10 l0.00,-0.10 l0.10,-0.10 l0.00,-0.10 l0.10,-0.10 l0.00,0.00 l0.10,-0.10 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.20,-0.10 l0.10,0.00 l0.20,0.00 l0.10,-0.10 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,-0.10 l0.20,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.20,0.00 l0.10,-0.10 l0.10,0.00 l0.20,0.00 c2.00,-0.20,4.10,-0.20,5.70,-0.20 v-4.70 h-24.20 v4.70 c2.50,0.00,7.20,0.00,10.10,1.10 l-17.10,44.60 l-17.70,-45.70 h9.60 v-4.70 h-32.70 v4.70 h8.60 l4.10,10.60 l-13.60,35.10 l-17.60,-45.70 h9.60 v-4.70 h-32.70 v4.70 h8.60 l23.90,61.90 c0.60,1.60,1.00,2.60,3.50,2.60 c2.50,0.00,2.80,-1.00,3.40,-2.60 l17.40,-44.80 l17.30,44.80 c0.60,1.60,1.00,2.60,3.50,2.60 c2.50,0.00,2.90,-1.00,3.50,-2.60 z" fill="black" stroke-width="0"/><path d="M79.70,-28.20 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.30,-0.10 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.20,0.00 l0.10,-0.10 l0.10,0.00 l0.10,0.00 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,0.00 l0.10,-0.10 l0.10,-0.10 l0.00,-0.10 l0.10,0.00 l0.00,0.00 l0.00,-0.10 l0.10,0.00 l0.00,-0.10 l0.00,0.00 l0.10,-0.10 l0.00,0.00 l0.00,-0.10 l0.00,-0.10 l0.00,0.00 l0.00,-0.10 l0.10,-0.10 l0.00,0.00 l0.00,-0.10 l0.00,-0.10 l0.00,0.00 l0.00,-0.10 c0.00,-1.80,-1.60,-1.80,-2.80,-1.80 h-41.60 c-1.10,0.00,-2.80,0.00,-2.80,1.70 c0.00,1.80,1.60,1.80,2.80,1.80 z" fill="black" stroke-width="0"/><ellipse cx="-3.650" cy="-6.300" fill="red" opacity="0" rx="206.760" ry="83.040"/></g>
</defs>
<g id="everything">
<mcviz:cmdline>
./mcv myinputs/ttbar_POWHEG_PYTHIA.dat:8 --units=GeV -lFeynman -lFixHad -sFancyLines -sSimpleColors -sLineWidthPt:0.2:0.005 -tCut -tGluballs -tNoKinks -tClusters -tChainmail -lFixFinal
</mcviz:cmdline>
<g fill="none" mcviz:r="P264_VN226_VN1000" stroke-linecap="round" stroke-width="0.0230806067303" transform="scale(1.000)"><path d="M3.7396 15.8140 C3.7289 15.8795 3.7289 15.8795 3.7182 15.9450" stroke="rgb(255,0,0)"/><path d="M3.7182 15.9450 C3.7075 16.0105 3.7075 16.0105 3.6968 16.0760" stroke="rgb(255,12,12)"/><path d="M3.6968 16.0760 C3.6861 16.1415 3.6861 16.1415 3.6754 16.2070" stroke="rgb(255,25,25)"/><path d="M3.6754 16.2070 C3.6647 16.2725 3.6647 16.2725 3.6540 16.3380" stroke="rgb(255,38,38)"/><path d="M3.6540 16.3380 C3.6433 16.4035 3.6433 16.4035 3.6326 16.4690" stroke="rgb(255,51,51)"/><path d="M3.6326 16.4690 C3.6219 16.5345 3.6219 16.5345 3.6112 16.6000" stroke="rgb(255,63,63)"/><path d="M3.6112 16.6000 C3.6005 16.6655 3.6005 16.6655 3.5898 16.7310" stroke="rgb(255,76,76)"/><path d="M3.5898 16.7310 C3.5791 16.7965 3.5791 16.7965 3.5684 16.8620" stroke="rgb(255,89,89)"/><path d="M3.5684 16.8620 C3.5577 16.9275 3.5577 16.9275 3.5470 16.9930" stroke="rgb(255,102,102)"/><path d="M3.5470 16.9930 C3.5363 17.0585 3.5363 17.0585 3.5256 17.1240" stroke="rgb(255,114,114)"/><path d="M3.5256 17.1240 C3.5149 17.1895 3.5149 17.1895 3.5042 17.2550" stroke="rgb(255,127,127)"/><path d="M3.5042 17.2550 C3.4935 17.3205 3.4935 17.3205 3.4828 17.3860" stroke="rgb(255,140,140)"/><path d="M3.4828 17.3860 C3.4721 17.4515 3.4720 17.4515 3.4613 17.5170" stroke="rgb(255,153,153)"/><path d="M3.4613 17.5170 C3.4506 17.5825 3.4506 17.5825 3.4399 17.6480" stroke="rgb(255,165,165)"/><path d="M3.4399 17.6480 C3.4292 17.7135 3.4292 17.7135 3.4185 17.7790" stroke="rgb(255,178,178)"/><path d="M3.4185 17.7790 C3.4078 17.8445 3.4078 17.8445 3.3971 17.9100" stroke="rgb(255,191,191)"/><path d="M3.3971 17.9100 C3.3864 17.9755 3.3864 17.9755 3.3757 18.0410" stroke="rgb(255,204,204)"/><path d="M3.3757 18.0410 C3.3650 18.1065 3.3650 18.1066 3.3543 18.1721" stroke="rgb(255,216,216)"/><path d="M3.3543 18.1721 C3.3436 18.2376 3.3436 18.2375 3.3329 18.3030" stroke="rgb(255,229,229)"/><path d="M3.3329 18.3030 C3.3222 18.3685 3.3436 18.2375 3.3329 18.3030" stroke="rgb(255,242,242)"/></g>
<g fill="none" mcviz:r="P733_VN622_VN1001" stroke-linecap="round" stroke-width="0.0172508590398" transform="scale(1.000)"><path d="M55.5580 5.3620 C55.6117 5.3773 55.6117 5.3773 55.6645 5.3953" stroke="rgb(255,0,0)"/><path d="M55.6645 5.3953 C55.7173 5.4133 55.7173 5.4133 55.7691 5.4340" stroke="rgb(255,12,12)"/><path d="M55.7691 5.4340 C55.8209 5.4548 55.8210 5.4547 55.8714 5.4785" stroke="rgb(255,25,25)"/><path d="M55.8714 5.4785 C55.9219 5.5024 55.9220 5.5023 55.9706 5.5296" stroke="rgb(255,38,38)"/><path d="M55.9706 5.5296 C56.0192 5.5570 56.0194 5.5569 56.0653 5.5885" stroke="rgb(255,51,51)"/><path d="M56.0653 5.5885 C56.1113 5.6202 56.1116 5.6200 56.1535 5.6568" stroke="rgb(255,63,63)"/><path d="M56.1535 5.6568 C56.1954 5.6936 56.1948 5.6944 56.2327 5.7353" stroke="rgb(255,76,76)"/><path d="M56.2327 5.7353 C56.2706 5.7763 56.2706 5.7764 56.3058 5.8197" stroke="rgb(255,89,89)"/><path d="M56.3058 5.8197 C56.3410 5.8629 56.3409 5.8630 56.3737 5.9082" stroke="rgb(255,102,102)"/><path d="M56.3737 5.9082 C56.4064 5.9534 56.4064 5.9534 56.4368 6.0001" stroke="rgb(255,114,114)"/><path d="M56.4368 6.0001 C56.4673 6.0469 56.4673 6.0469 56.4957 6.0949" stroke="rgb(255,127,127)"/><path d="M56.4957 6.0949 C56.5242 6.1429 56.5241 6.1430 56.5507 6.1920" stroke="rgb(255,140,140)"/><path d="M56.5507 6.1920 C56.5773 6.2411 56.5772 6.2411 56.6021 6.2911" stroke="rgb(255,153,153)"/><path d="M56.6021 6.2911 C56.6269 6.3410 56.6269 6.3410 56.6502 6.3917" stroke="rgb(255,165,165)"/><path d="M56.6502 6.3917 C56.6734 6.4425 56.6734 6.4425 56.6952 6.4938" stroke="rgb(255,178,178)"/><path d="M56.6952 6.4938 C56.7170 6.5452 56.7170 6.5452 56.7374 6.5972" stroke="rgb(255,191,191)"/><path d="M56.7374 6.5972 C56.7577 6.6491 56.7577 6.6491 56.7768 6.7015" stroke="rgb(255,204,204)"/><path d="M56.7768 6.7015 C56.7959 6.7540 56.7959 6.7540 56.8137 6.8068" stroke="rgb(255,216,216)"/><path d="M56.8137 6.8068 C56.8315 6.8597 56.8315 6.8597 56.8480 6.9130" stroke="rgb(255,229,229)"/><path d="M56.8480 6.9130 C56.8645 6.9663 56.8315 6.8597 56.8480 6.9130" stroke="rgb(255,242,242)"/></g>
<g fill="green" mcviz:r="P1115_VN924_VN1002" stroke="green" stroke-linecap="round" stroke-width="0.0474990922935" transform="scale(1.000)"><path d="M24.20 13.03 C24.20 13.03 23.98 12.89 23.79 13.39 C23.61 13.90 24.14 13.96 24.20 13.79 C24.26 13.62 23.82 13.34 23.63 13.84 C23.45 14.35 23.98 14.41 24.04 14.24 C24.10 14.07 23.65 13.78 23.47 14.29 C23.29 14.80 23.82 14.86 23.88 14.69 C23.94 14.52 23.49 14.23 23.31 14.74 C23.13 15.25 23.39 15.28 23.39 15.28" fill="none"/></g>
<g fill="none" mcviz:r="P1017_VN708_VN1002" stroke-linecap="round" stroke-width="0.0189006835846" transform="scale(1.000)"><path d="M53.3420 3.1120 C52.2415 3.1218 52.2416 3.1221 51.1412 3.1343" stroke="rgb(0,0,255)"/><path d="M51.1412 3.1343 C50.0407 3.1466 50.0416 3.1466 48.9412 3.1606" stroke="rgb(12,12,255)"/><path d="M48.9412 3.1606 C47.8407 3.1746 47.8401 3.1746 46.7396 3.1904" stroke="rgb(25,25,255)"/><path d="M46.7396 3.1904 C45.6392 3.2062 45.6394 3.2061 44.5390 3.2237" stroke="rgb(38,38,255)"/><path d="M44.5390 3.2237 C43.4386 3.2413 43.4384 3.2413 42.3380 3.2609" stroke="rgb(51,51,255)"/><path d="M42.3380 3.2609 C41.2376 3.2805 41.2374 3.2805 40.1371 3.3024" stroke="rgb(63,63,255)"/><path d="M40.1371 3.3024 C39.0368 3.3243 39.0366 3.3242 37.9364 3.3488" stroke="rgb(76,76,255)"/><path d="M37.9364 3.3488 C36.8361 3.3734 36.8359 3.3733 35.7357 3.4012" stroke="rgb(89,89,255)"/><path d="M35.7357 3.4012 C34.6355 3.4291 34.6353 3.4289 33.5353 3.4609" stroke="rgb(102,102,255)"/><path d="M33.5353 3.4609 C32.4352 3.4930 32.4353 3.4927 31.3354 3.5302" stroke="rgb(114,114,255)"/><path d="M31.3354 3.5302 C30.2355 3.5678 30.2349 3.5673 29.1353 3.6129" stroke="rgb(127,127,255)"/><path d="M29.1353 3.6129 C28.0357 3.6586 28.0359 3.6572 26.9370 3.7164" stroke="rgb(140,140,255)"/><path d="M26.9370 3.7164 C25.8380 3.7756 25.8368 3.7701 24.7400 3.8605" stroke="rgb(153,153,255)"/><path d="M24.7400 3.8605 C23.6432 3.9509 22.6810 3.2029 22.6810 4.3035" stroke="rgb(165,165,255)"/><path d="M22.6810 4.3035 C22.6810 5.4040 22.6810 5.4039 22.6810 6.5044" stroke="rgb(178,178,255)"/><path d="M22.6810 6.5044 C22.6810 7.6050 22.6810 7.6051 22.6810 8.7056" stroke="rgb(191,191,255)"/><path d="M22.6810 8.7056 C22.6810 9.8062 22.6810 9.8056 22.6810 10.9062" stroke="rgb(204,204,255)"/><path d="M22.6810 10.9062 C22.6810 12.0067 22.6508 12.0077 22.6830 13.1078" stroke="rgb(216,216,255)"/><path d="M22.6830 13.1078 C22.7152 14.2079 22.7626 14.2123 23.0700 15.2690" stroke="rgb(229,229,255)"/><path d="M23.0700 15.2690 C23.3774 16.3257 22.7626 14.2123 23.0700 15.2690" stroke="rgb(242,242,255)"/></g>
<g fill="none" mcviz:r="P1019_VN709_VN1003" stroke-linecap="round" stroke-width="0.0331699535225" transform="scale(1.000)"><path d="M2.1213 3.1650 C2.1111 3.1875 2.1111 3.1875 2.1009 3.2101" stroke="rgb(255,0,0)"/><path d="M2.1009 3.2101 C2.0907 3.2326 2.0907 3.2326 2.0805 3.2551" stroke="rgb(255,12,12)"/><path d="M2.0805 3.2551 C2.0703 3.2777 2.0703 3.2777 2.0601 3.3002" stroke="rgb(255,25,25)"/><path d="M2.0601 3.3002 C2.0499 3.3228 2.0499 3.3228 2.0397 3.3453" stroke="rgb(255,38,38)"/><path d="M2.0397 3.3453 C2.0295 3.3679 2.0295 3.3679 2.0193 3.3904" stroke="rgb(255,51,51)"/><path d="M2.0193 3.3904 C2.0091 3.4129 2.0092 3.4129 1.9990 3.4355" stroke="rgb(255,63,63)"/><path d="M1.9990 3.4355 C1.9888 3.4580 1.9888 3.4580 1.9786 3.4806" stroke="rgb(255,76,76)"/><path d="M1.9786 3.4806 C1.9684 3.5031 1.9684 3.5031 1.9582 3.5257" stroke="rgb(255,89,89)"/><path d="M1.9582 3.5257 C1.9480 3.5482 1.9480 3.5482 1.9378 3.5708" stroke="rgb(255,102,102)"/><path d="M1.9378 3.5708 C1.9276 3.5933 1.9276 3.5933 1.9174 3.6158" stroke="rgb(255,114,114)"/><path d="M1.9174 3.6158 C1.9072 3.6384 1.9072 3.6384 1.8970 3.6609" stroke="rgb(255,127,127)"/><path d="M1.8970 3.6609 C1.8869 3.6835 1.8869 3.6835 1.8767 3.7060" stroke="rgb(255,140,140)"/><path d="M1.8767 3.7060 C1.8665 3.7286 1.8665 3.7286 1.8563 3.7511" stroke="rgb(255,153,153)"/><path d="M1.8563 3.7511 C1.8461 3.7736 1.8461 3.7736 1.8359 3.7962" stroke="rgb(255,165,165)"/><path d="M1.8359 3.7962 C1.8257 3.8187 1.8257 3.8187 1.8155 3.8413" stroke="rgb(255,178,178)"/><path d="M1.8155 3.8413 C1.8053 3.8638 1.8053 3.8638 1.7952 3.8864" stroke="rgb(255,191,191)"/><path d="M1.7952 3.8864 C1.7850 3.9089 1.7850 3.9089 1.7748 3.9315" stroke="rgb(255,204,204)"/><path d="M1.7748 3.9315 C1.7646 3.9540 1.7646 3.9540 1.7544 3.9766" stroke="rgb(255,216,216)"/><path d="M1.7544 3.9766 C1.7442 3.9991 1.7442 3.9991 1.7340 4.0216" stroke="rgb(255,229,229)"/><path d="M1.7340 4.0216 C1.7238 4.0442 1.7488 4.0018 1.7386 4.0243" stroke="rgb(255,242,242)"/><path d="M2.1213 3.1650 C2.1066 3.1849 2.1066 3.1849 2.0918 3.2047" stroke="rgb(255,0,0)"/><path d="M2.0918 3.2047 C2.0771 3.2246 2.0771 3.2246 2.0624 3.2445" stroke="rgb(255,12,12)"/><path d="M2.0624 3.2445 C2.0476 3.2644 2.0476 3.2644 2.0329 3.2842" stroke="rgb(255,25,25)"/><path d="M2.0329 3.2842 C2.0182 3.3041 2.0182 3.3041 2.0034 3.3240" stroke="rgb(255,38,38)"/><path d="M2.0034 3.3240 C1.9887 3.3439 1.9887 3.3439 1.9740 3.3637" stroke="rgb(255,51,51)"/><path d="M1.9740 3.3637 C1.9592 3.3836 1.9592 3.3836 1.9445 3.4035" stroke="rgb(255,63,63)"/><path d="M1.9445 3.4035 C1.9298 3.4234 1.9298 3.4234 1.9150 3.4433" stroke="rgb(255,76,76)"/><path d="M1.9150 3.4433 C1.9003 3.4631 1.9003 3.4631 1.8856 3.4830" stroke="rgb(255,89,89)"/><path d="M1.8856 3.4830 C1.8709 3.5029 1.8709 3.5029 1.8561 3.5228" stroke="rgb(255,102,102)"/><path d="M1.8561 3.5228 C1.8414 3.5426 1.8414 3.5426 1.8267 3.5625" stroke="rgb(255,114,114)"/><path d="M1.8267 3.5625 C1.8119 3.5824 1.8119 3.5824 1.7972 3.6023" stroke="rgb(255,127,127)"/><path d="M1.7972 3.6023 C1.7825 3.6222 1.7825 3.6222 1.7677 3.6420" stroke="rgb(255,140,140)"/><path d="M1.7677 3.6420 C1.7530 3.6619 1.7530 3.6619 1.7383 3.6818" stroke="rgb(255,153,153)"/><path d="M1.7383 3.6818 C1.7236 3.7017 1.7236 3.7017 1.7088 3.7216" stroke="rgb(255,165,165)"/><path d="M1.7088 3.7216 C1.6941 3.7414 1.6941 3.7414 1.6794 3.7613" stroke="rgb(255,178,178)"/><path d="M1.6794 3.7613 C1.6647 3.7812 1.6647 3.7812 1.6499 3.8011" stroke="rgb(255,191,191)"/><path d="M1.6499 3.8011 C1.6352 3.8210 1.6352 3.8210 1.6205 3.8408" stroke="rgb(255,204,204)"/><path d="M1.6205 3.8408 C1.6057 3.8607 1.6057 3.8607 1.5910 3.8806" stroke="rgb(255,216,216)"/><path d="M1.5910 3.8806 C1.5763 3.9005 1.5763 3.9005 1.5616 3.9204" stroke="rgb(255,229,229)"/><path d="M1.5616 3.9204 C1.5468 3.9402 1.5718 3.8978 1.5570 3.9177" stroke="rgb(255,242,242)"/></g>
<g fill="green" mcviz:r="P1118_VN926_VN1004" stroke="green" stroke-linecap="round" stroke-width="0.0496292601689" transform="scale(1.000)"><path d="M26.86 18.62 C26.86 18.62 26.60 18.53 26.55 19.18 C26.50 19.83 27.03 19.73 27.04 19.51 C27.06 19.29 26.56 19.11 26.50 19.76 C26.45 20.41 26.98 20.31 27.00 20.09 C27.01 19.87 26.51 19.69 26.45 20.34 C26.40 20.99 26.93 20.89 26.95 20.67 C26.97 20.45 26.46 20.26 26.41 20.92 C26.35 21.57 26.88 21.47 26.90 21.25 C26.92 21.03 26.41 20.84 26.36 21.50 C26.31 22.15 26.84 22.04 26.85 21.83 C26.87 21.61 26.37 21.42 26.31 22.07 C26.26 22.73 26.79 22.62 26.81 22.41 C26.83 22.19 26.32 22.00 26.27 22.65 C26.21 23.30 26.74 23.20 26.76 22.99 C26.78 22.77 26.27 22.58 26.22 23.23 C26.16 23.88 26.43 23.83 26.43 23.83" fill="none"/></g>
<g fill="green" mcviz:r="P1142_VN942_VN1004" stroke="green" stroke-linecap="round" stroke-width="0.0307603207727" transform="scale(1.000)"><path d="M25.70 21.45 C25.70 21.45 25.43 21.45 25.56 21.99 C25.69 22.53 26.16 22.29 26.12 22.11 C26.08 21.93 25.54 21.93 25.67 22.47 C25.80 23.01 26.28 22.77 26.24 22.59 C26.19 22.41 25.66 22.41 25.79 22.95 C25.92 23.49 26.39 23.24 26.35 23.06 C26.31 22.89 25.77 22.89 25.90 23.43 C26.03 23.96 26.27 23.84 26.27 23.84" fill="none"/></g>
<g fill="none" mcviz:r="P1059_VN887_VN1004" stroke-linecap="round" stroke-width="0.0394783310915" transform="scale(1.000)"><path d="M40.8820 15.7960 C40.5642 16.0953 40.5634 16.0940 40.2384 16.3856" stroke="rgb(0,0,255)"/><path d="M40.2384 16.3856 C39.9134 16.6771 39.9132 16.6770 39.5835 16.9632" stroke="rgb(12,12,255)"/><path d="M39.5835 16.9632 C39.2538 17.2494 39.2538 17.2494 38.9199 17.5306" stroke="rgb(25,25,255)"/><path d="M38.9199 17.5306 C38.5859 17.8118 38.5860 17.8118 38.2479 18.0881" stroke="rgb(38,38,255)"/><path d="M38.2479 18.0881 C37.9099 18.3643 37.9099 18.3644 37.5678 18.6356" stroke="rgb(51,51,255)"/><path d="M37.5678 18.6356 C37.2257 18.9068 37.2257 18.9069 36.8794 19.1728" stroke="rgb(63,63,255)"/><path d="M36.8794 19.1728 C36.5331 19.4386 36.5331 19.4388 36.1825 19.6990" stroke="rgb(76,76,255)"/><path d="M36.1825 19.6990 C35.8320 19.9592 35.8320 19.9592 35.4770 20.2133" stroke="rgb(89,89,255)"/><path d="M35.4770 20.2133 C35.1219 20.4673 35.1220 20.4674 34.7622 20.7148" stroke="rgb(102,102,255)"/><path d="M34.7622 20.7148 C34.4025 20.9621 34.4025 20.9623 34.0378 21.2022" stroke="rgb(114,114,255)"/><path d="M34.0378 21.2022 C33.6731 21.4421 33.6731 21.4423 33.3030 21.6739" stroke="rgb(127,127,255)"/><path d="M33.3030 21.6739 C32.9330 21.9055 32.9330 21.9057 32.5573 22.1280" stroke="rgb(140,140,255)"/><path d="M32.5573 22.1280 C32.1815 22.3503 32.1816 22.3505 31.7997 22.5621" stroke="rgb(153,153,255)"/><path d="M31.7997 22.5621 C31.4178 22.7736 31.4179 22.7740 31.0294 22.9731" stroke="rgb(165,165,255)"/><path d="M31.0294 22.9731 C30.6409 23.1723 30.6410 23.1727 30.2454 23.3573" stroke="rgb(178,178,255)"/><path d="M30.2454 23.3573 C29.8498 23.5419 29.8509 23.5462 29.4385 23.6896" stroke="rgb(191,191,255)"/><path d="M29.4385 23.6896 C29.0261 23.8329 29.0250 23.8309 28.6022 23.9397" stroke="rgb(204,204,255)"/><path d="M28.6022 23.9397 C28.1794 24.0484 28.1789 24.0474 27.7503 24.1302" stroke="rgb(216,216,255)"/><path d="M27.7503 24.1302 C27.3216 24.2130 27.3214 24.2130 26.8890 24.2731" stroke="rgb(229,229,255)"/><path d="M26.8890 24.2731 C26.4566 24.3332 27.3214 24.2130 26.8890 24.2731" stroke="rgb(242,242,255)"/></g>
<g fill="none" mcviz:r="P1111_VN922_VN1005" stroke-linecap="round" stroke-width="0.0264930197402" transform="scale(1.000)"><path d="M26.1840 15.8090 C26.1567 15.8747 26.1567 15.8747 26.1293 15.9404" stroke="rgb(255,0,0)"/><path d="M26.1293 15.9404 C26.1020 16.0061 26.1020 16.0061 26.0747 16.0718" stroke="rgb(255,12,12)"/><path d="M26.0747 16.0718 C26.0473 16.1375 26.0473 16.1375 26.0200 16.2032" stroke="rgb(255,25,25)"/><path d="M26.0200 16.2032 C25.9927 16.2689 25.9927 16.2689 25.9653 16.3346" stroke="rgb(255,38,38)"/><path d="M25.9653 16.3346 C25.9380 16.4003 25.9380 16.4003 25.9107 16.4660" stroke="rgb(255,51,51)"/><path d="M25.9107 16.4660 C25.8833 16.5317 25.8833 16.5317 25.8560 16.5974" stroke="rgb(255,63,63)"/><path d="M25.8560 16.5974 C25.8287 16.6631 25.8287 16.6631 25.8014 16.7288" stroke="rgb(255,76,76)"/><path d="M25.8014 16.7288 C25.7740 16.7945 25.7740 16.7946 25.7467 16.8603" stroke="rgb(255,89,89)"/><path d="M25.7467 16.8603 C25.7194 16.9260 25.7194 16.9260 25.6921 16.9917" stroke="rgb(255,102,102)"/><path d="M25.6921 16.9917 C25.6647 17.0574 25.6647 17.0574 25.6374 17.1231" stroke="rgb(255,114,114)"/><path d="M25.6374 17.1231 C25.6101 17.1888 25.6101 17.1888 25.5828 17.2545" stroke="rgb(255,127,127)"/><path d="M25.5828 17.2545 C25.5555 17.3202 25.5555 17.3202 25.5281 17.3859" stroke="rgb(255,140,140)"/><path d="M25.5281 17.3859 C25.5008 17.4517 25.5008 17.4517 25.4735 17.5174" stroke="rgb(255,153,153)"/><path d="M25.4735 17.5174 C25.4462 17.5831 25.4462 17.5831 25.4189 17.6488" stroke="rgb(255,165,165)"/><path d="M25.4189 17.6488 C25.3916 17.7145 25.3916 17.7145 25.3643 17.7802" stroke="rgb(255,178,178)"/><path d="M25.3643 17.7802 C25.3370 17.8460 25.3370 17.8460 25.3097 17.9117" stroke="rgb(255,191,191)"/><path d="M25.3097 17.9117 C25.2824 17.9774 25.2824 17.9774 25.2551 18.0431" stroke="rgb(255,204,204)"/><path d="M25.2551 18.0431 C25.2278 18.1088 25.2278 18.1089 25.2005 18.1746" stroke="rgb(255,216,216)"/><path d="M25.2005 18.1746 C25.1732 18.2403 25.1733 18.2403 25.1460 18.3060" stroke="rgb(255,229,229)"/><path d="M25.1460 18.3060 C25.1187 18.3717 25.1733 18.2403 25.1460 18.3060" stroke="rgb(255,242,242)"/></g>
<g fill="red" mcviz:r="P1169_VN967_VN1006" stroke="red" stroke-linecap="round" stroke-width="0.0687838579475" transform="scale(1.000)"><path d="M23.23 18.62 C23.24 19.18 23.36 23.13 22.89 26.28 C22.88 26.37 22.86 26.46 22.84 26.55" fill="none"/><path d="M23.20 22.79L23.10 22.39C23.15 22.43 23.27 22.44 23.34 22.40Z" stroke="none"/></g>
<use mcviz:r="P1169_VN967_VN1006" x="23.653" y="22.754" transform="scale(1.000)" xlink:href="#pdg2" />
<g fill="green" mcviz:r="P1222_VN1002_VN1006" stroke="green" stroke-linecap="round" stroke-width="0.0590007178369" transform="scale(1.000)"><path d="M23.07 16.23 C23.07 16.23 22.82 16.10 22.67 16.76 C22.52 17.43 23.07 17.39 23.11 17.17 C23.16 16.95 22.66 16.70 22.55 17.37 C22.43 18.05 22.98 17.98 23.01 17.75 C23.05 17.53 22.53 17.31 22.46 17.99 C22.40 18.67 22.95 18.56 22.96 18.33 C22.97 18.11 22.43 17.94 22.43 18.63 C22.43 19.31 22.95 19.16 22.95 18.93 C22.95 18.70 22.43 18.55 22.43 19.23 C22.43 19.92 22.95 19.76 22.95 19.54 C22.95 19.31 22.43 19.16 22.43 19.84 C22.43 20.52 22.95 20.37 22.95 20.14 C22.95 19.92 22.43 19.76 22.43 20.45 C22.43 21.13 22.95 20.98 22.95 20.75 C22.95 20.52 22.43 20.37 22.43 21.06 C22.43 21.74 22.95 21.59 22.95 21.36 C22.95 21.13 22.43 20.98 22.43 21.66 C22.43 22.35 22.95 22.20 22.95 21.97 C22.95 21.74 22.43 21.59 22.43 22.27 C22.43 22.96 22.95 22.80 22.95 22.58 C22.95 22.35 22.43 22.20 22.43 22.88 C22.43 23.56 22.95 23.41 22.95 23.18 C22.95 22.96 22.43 22.80 22.43 23.49 C22.43 24.17 22.95 24.02 22.95 23.79 C22.95 23.56 22.43 23.41 22.43 24.09 C22.43 24.78 22.95 24.63 22.95 24.40 C22.95 24.17 22.43 24.02 22.43 24.70 C22.43 25.39 22.95 25.23 22.95 25.01 C22.95 24.78 22.43 24.63 22.43 25.31 C22.43 25.99 22.95 25.84 22.95 25.61 C22.95 25.39 22.43 25.23 22.43 25.92 C22.43 26.60 22.69 26.53 22.69 26.53" fill="none"/></g>
<g fill="green" mcviz:r="P1223_VN1004_VN1006" stroke="green" stroke-linecap="round" stroke-width="0.0468899745344" transform="scale(1.000)"><path d="M26.11 24.75 C26.11 24.75 25.96 24.54 25.58 25.00 C25.20 25.46 25.67 25.69 25.80 25.54 C25.93 25.39 25.65 24.95 25.24 25.39 C24.83 25.83 25.29 26.08 25.43 25.94 C25.57 25.80 25.32 25.35 24.88 25.75 C24.43 26.15 24.86 26.44 25.01 26.31 C25.17 26.19 24.98 25.72 24.49 26.06 C24.00 26.40 24.37 26.74 24.54 26.64 C24.71 26.54 24.60 26.04 24.06 26.30 C23.52 26.56 23.85 26.96 24.03 26.88 C24.22 26.81 24.16 26.29 23.60 26.50 C23.04 26.71 23.18 26.91 23.18 26.91" fill="none"/></g>
<g fill="blue" mcviz:r="P1141_VN942_VN1006" stroke="blue" stroke-linecap="round" stroke-width="0.0463507750564" transform="scale(1.000)"><path d="M25.66 21.45 C25.45 21.95 24.04 25.36 23.42 26.28 C23.32 26.42 23.19 26.57 23.07 26.69" fill="none"/><path d="M24.42 24.33L24.47 23.92C24.51 23.98 24.62 24.03 24.69 24.01Z" stroke="none"/></g>
<use mcviz:r="P1141_VN942_VN1006" x="25.115" y="24.352" transform="scale(1.000)" xlink:href="#pdg-2" />
<g fill="none" mcviz:r="P1145_VN944_VN1006" stroke-linecap="round" stroke-width="0.0455140136616" transform="scale(1.000)"><path d="M27.6150 15.8150 C27.5631 16.1774 27.5638 16.1775 27.5226 16.5413" stroke="rgb(0,0,255)"/><path d="M27.5226 16.5413 C27.4813 16.9050 27.4810 16.9050 27.4503 17.2698" stroke="rgb(12,12,255)"/><path d="M27.4503 17.2698 C27.4196 17.6346 27.4187 17.6346 27.4023 18.0003" stroke="rgb(25,25,255)"/><path d="M27.4023 18.0003 C27.3859 18.3660 27.3890 18.3661 27.3890 18.7322" stroke="rgb(38,38,255)"/><path d="M27.3890 18.7322 C27.3890 19.0982 27.3890 19.0983 27.3890 19.4644" stroke="rgb(51,51,255)"/><path d="M27.3890 19.4644 C27.3890 19.8305 27.3890 19.8303 27.3890 20.1963" stroke="rgb(63,63,255)"/><path d="M27.3890 20.1963 C27.3890 20.5624 27.3890 20.5623 27.3890 20.9284" stroke="rgb(76,76,255)"/><path d="M27.3890 20.9284 C27.3890 21.2945 27.3890 21.2945 27.3890 21.6605" stroke="rgb(89,89,255)"/><path d="M27.3890 21.6605 C27.3890 22.0266 27.3890 22.0266 27.3890 22.3927" stroke="rgb(102,102,255)"/><path d="M27.3890 22.3927 C27.3890 22.7588 27.3890 22.7587 27.3890 23.1247" stroke="rgb(114,114,255)"/><path d="M27.3890 23.1247 C27.3890 23.4908 27.3890 23.4910 27.3890 23.8570" stroke="rgb(127,127,255)"/><path d="M27.3890 23.8570 C27.3890 24.2231 27.4238 24.2264 27.3707 24.5886" stroke="rgb(140,140,255)"/><path d="M27.3707 24.5886 C27.3176 24.9508 27.3112 24.9603 27.1117 25.2672" stroke="rgb(153,153,255)"/><path d="M27.1117 25.2672 C26.9123 25.5742 26.9016 25.5729 26.6159 25.8017" stroke="rgb(165,165,255)"/><path d="M26.6159 25.8017 C26.3301 26.0305 26.3250 26.0270 25.9997 26.1949" stroke="rgb(178,178,255)"/><path d="M25.9997 26.1949 C25.6744 26.3629 25.6723 26.3605 25.3282 26.4855" stroke="rgb(191,191,255)"/><path d="M25.3282 26.4855 C24.9841 26.6104 24.9831 26.6090 24.6292 26.7024" stroke="rgb(204,204,255)"/><path d="M24.6292 26.7024 C24.2752 26.7957 24.2746 26.7949 23.9150 26.8632" stroke="rgb(216,216,255)"/><path d="M23.9150 26.8632 C23.5553 26.9315 23.5552 26.9315 23.1920 26.9774" stroke="rgb(229,229,255)"/><path d="M23.1920 26.9774 C22.8288 27.0233 23.5552 26.9315 23.1920 26.9774" stroke="rgb(242,242,255)"/></g>
<g fill="green" mcviz:r="P246_VN214_VN1073" stroke="green" stroke-linecap="round" stroke-width="0.0638302408962" transform="scale(1.000)"><path d="M7.00 21.46 C7.00 21.46 6.74 21.40 6.74 21.93 C6.74 22.46 7.26 22.35 7.26 22.17 C7.26 21.99 6.74 21.87 6.74 22.41 C6.74 22.94 7.26 22.82 7.26 22.64 C7.26 22.46 6.74 22.35 6.74 22.88 C6.74 23.41 7.26 23.30 7.26 23.12 C7.26 22.94 6.74 22.82 6.74 23.35 C6.74 23.89 7.00 23.83 7.00 23.83" fill="none"/></g>
<g fill="green" mcviz:r="P863_VN709_VN1082" stroke="green" stroke-linecap="round" stroke-width="0.0331699535225" transform="scale(1.000)"><path d="M2.20 3.14 C2.20 3.14 2.03 3.34 2.37 3.54 C2.70 3.74 2.89 3.26 2.78 3.19 C2.67 3.12 2.33 3.51 2.65 3.72 C2.98 3.93 3.19 3.45 3.08 3.38 C2.97 3.31 2.61 3.68 2.93 3.90 C3.25 4.13 3.36 3.90 3.36 3.90" fill="none"/></g>
<g fill="green" mcviz:r="P307_VN267_VN1085" stroke="green" stroke-linecap="round" stroke-width="0.0157415812208" transform="scale(1.000)"><path d="M5.09 18.62 C5.09 18.62 4.84 18.53 4.78 19.12 C4.72 19.71 5.25 19.64 5.27 19.44 C5.29 19.24 4.79 19.06 4.73 19.65 C4.67 20.24 5.20 20.16 5.22 19.96 C5.24 19.77 4.73 19.58 4.67 20.18 C4.61 20.77 5.14 20.69 5.16 20.49 C5.18 20.29 4.68 20.11 4.62 20.70 C4.56 21.29 5.09 21.22 5.11 21.02 C5.13 20.82 4.63 20.64 4.57 21.23 C4.51 21.82 5.04 21.74 5.06 21.54 C5.08 21.35 4.57 21.16 4.51 21.76 C4.45 22.35 4.72 22.31 4.72 22.31" fill="none"/></g>
<g fill="green" mcviz:r="P415_VN339_VN1087" stroke="green" stroke-linecap="round" stroke-width="0.0198119092498" transform="scale(1.000)"><path d="M3.78 21.46 C3.78 21.46 3.52 21.40 3.52 21.93 C3.52 22.46 4.04 22.35 4.04 22.17 C4.04 21.99 3.52 21.87 3.52 22.41 C3.52 22.94 4.04 22.82 4.04 22.64 C4.04 22.46 3.52 22.35 3.52 22.88 C3.52 23.41 4.04 23.30 4.04 23.12 C4.04 22.94 3.52 22.82 3.52 23.35 C3.52 23.89 3.78 23.83 3.78 23.83" fill="none"/></g>
<g fill="red" mcviz:r="P245_VN214_VN1089" stroke="red" stroke-linecap="round" stroke-width="0.0808860815575" transform="scale(1.000)"><path d="M6.97 21.44 C6.80 21.68 6.06 22.77 5.50 23.69 C4.82 24.82 5.02 25.37 4.07 26.28 C3.78 26.56 3.37 26.75 3.05 26.87" fill="none"/><path d="M5.08 24.54L5.13 24.12C5.17 24.18 5.28 24.23 5.35 24.22Z" stroke="none"/></g>
<use mcviz:r="P245_VN214_VN1089" x="5.941" y="24.398" transform="scale(1.000)" xlink:href="#pdg1" />
<g fill="green" mcviz:r="P1367_VN1073_VN1089" stroke="green" stroke-linecap="round" stroke-width="0.0561948890194" transform="scale(1.000)"><path d="M6.78 24.79 C6.78 24.79 6.63 24.60 6.28 25.13 C5.93 25.67 6.42 25.83 6.54 25.66 C6.67 25.49 6.37 25.08 5.96 25.56 C5.55 26.05 6.00 26.28 6.15 26.12 C6.30 25.97 6.09 25.53 5.59 25.93 C5.10 26.34 5.48 26.63 5.66 26.53 C5.85 26.42 5.78 25.95 5.18 26.18 C4.59 26.41 4.88 26.82 5.08 26.76 C5.29 26.70 5.28 26.17 4.67 26.34 C4.05 26.51 4.31 26.96 4.52 26.91 C4.73 26.86 4.75 26.33 4.13 26.47 C3.50 26.61 3.75 27.08 3.96 27.04 C4.17 27.00 4.20 26.46 3.58 26.59 C2.95 26.71 3.07 26.95 3.07 26.95" fill="none"/></g>
<g fill="green" mcviz:r="P1371_VN1082_VN1089" stroke="green" stroke-linecap="round" stroke-width="0.0476641824453" transform="scale(1.000)"><path d="M3.37 4.55 C3.37 4.55 3.46 4.43 2.75 4.59 C2.04 4.74 2.25 5.15 2.50 5.14 C2.74 5.13 2.89 4.63 2.17 4.62 C1.44 4.61 1.63 5.17 1.87 5.15 C2.11 5.12 1.94 4.33 1.38 4.78 C0.81 5.23 1.64 5.53 1.67 5.29 C1.69 5.05 1.14 4.87 1.14 5.59 C1.14 6.31 1.66 6.15 1.66 5.91 C1.66 5.67 1.14 5.51 1.14 6.23 C1.14 6.96 1.66 6.80 1.66 6.55 C1.66 6.31 1.14 6.15 1.14 6.88 C1.14 7.60 1.66 7.44 1.66 7.20 C1.66 6.96 1.14 6.80 1.14 7.52 C1.14 8.24 1.66 8.08 1.66 7.84 C1.66 7.60 1.14 7.44 1.14 8.16 C1.14 8.89 1.66 8.73 1.66 8.49 C1.66 8.24 1.14 8.08 1.14 8.81 C1.14 9.53 1.66 9.37 1.66 9.13 C1.66 8.89 1.14 8.73 1.14 9.45 C1.14 10.17 1.66 10.01 1.66 9.77 C1.66 9.53 1.14 9.37 1.14 10.09 C1.14 10.82 1.66 10.66 1.66 10.42 C1.66 10.17 1.14 10.01 1.14 10.74 C1.14 11.46 1.66 11.30 1.66 11.06 C1.66 10.82 1.14 10.66 1.14 11.38 C1.14 12.11 1.66 11.94 1.66 11.70 C1.66 11.46 1.14 11.30 1.14 12.02 C1.14 12.75 1.66 12.59 1.66 12.35 C1.66 12.10 1.14 11.94 1.14 12.67 C1.14 13.39 1.66 13.23 1.66 12.99 C1.66 12.75 1.14 12.59 1.14 13.31 C1.14 14.04 1.66 13.88 1.66 13.63 C1.66 13.39 1.14 13.23 1.14 13.96 C1.14 14.68 1.66 14.52 1.66 14.28 C1.66 14.04 1.14 13.87 1.14 14.60 C1.14 15.32 1.66 15.16 1.66 14.92 C1.66 14.68 1.14 14.52 1.14 15.24 C1.14 15.97 1.66 15.81 1.66 15.56 C1.66 15.32 1.14 15.16 1.14 15.89 C1.14 16.61 1.66 16.45 1.66 16.21 C1.66 15.97 1.14 15.81 1.14 16.53 C1.14 17.25 1.66 17.09 1.66 16.85 C1.66 16.61 1.14 16.45 1.14 17.17 C1.14 17.90 1.66 17.74 1.66 17.50 C1.66 17.25 1.14 17.09 1.14 17.82 C1.14 18.54 1.66 18.38 1.66 18.14 C1.66 17.90 1.14 17.74 1.14 18.46 C1.14 19.18 1.66 19.02 1.66 18.78 C1.66 18.54 1.14 18.38 1.14 19.10 C1.14 19.83 1.66 19.67 1.66 19.43 C1.66 19.18 1.14 19.02 1.14 19.75 C1.14 20.47 1.66 20.31 1.66 20.07 C1.66 19.83 1.14 19.67 1.14 20.39 C1.14 21.11 1.66 20.95 1.66 20.71 C1.66 20.47 1.14 20.31 1.14 21.03 C1.14 21.76 1.66 21.60 1.66 21.36 C1.66 21.11 1.14 20.95 1.14 21.68 C1.14 22.40 1.66 22.24 1.66 22.00 C1.66 21.76 1.14 21.60 1.14 22.32 C1.14 23.05 1.66 22.89 1.66 22.64 C1.66 22.40 1.14 22.24 1.14 22.96 C1.14 23.69 1.66 23.53 1.66 23.29 C1.66 23.05 1.14 22.88 1.14 23.61 C1.14 24.33 1.66 24.17 1.66 23.93 C1.66 23.69 1.14 23.53 1.14 24.25 C1.14 24.98 1.68 24.80 1.67 24.56 C1.66 24.32 1.07 24.22 1.19 24.94 C1.31 25.65 1.84 25.36 1.77 25.13 C1.69 24.90 1.10 24.96 1.41 25.62 C1.72 26.27 2.13 25.88 2.02 25.67 C1.90 25.46 1.37 25.56 1.71 26.20 C2.04 26.84 2.26 26.63 2.26 26.63" fill="none"/></g>
<g fill="green" mcviz:r="P1380_VN1085_VN1089" stroke="green" stroke-linecap="round" stroke-width="0.0196098469798" transform="scale(1.000)"><path d="M4.68 23.31 C4.68 23.31 4.46 23.21 4.40 23.85 C4.33 24.49 4.84 24.41 4.88 24.20 C4.91 23.99 4.45 23.76 4.31 24.38 C4.18 25.01 4.68 24.99 4.75 24.79 C4.81 24.58 4.41 24.29 4.16 24.88 C3.91 25.47 4.40 25.55 4.50 25.36 C4.61 25.17 4.26 24.80 3.91 25.33 C3.56 25.87 4.04 26.04 4.17 25.87 C4.30 25.70 4.00 25.28 3.58 25.76 C3.17 26.25 3.63 26.47 3.78 26.32 C3.93 26.17 3.67 25.71 3.21 26.16 C2.75 26.60 2.97 26.72 2.97 26.72" fill="none"/></g>
<g fill="green" mcviz:r="P1383_VN1087_VN1089" stroke="green" stroke-linecap="round" stroke-width="0.0308918847962" transform="scale(1.000)"><path d="M3.57 24.79 C3.57 24.79 3.36 24.63 3.14 25.13 C2.91 25.63 3.44 25.73 3.51 25.56 C3.59 25.40 3.16 25.07 2.94 25.57 C2.71 26.07 3.24 26.17 3.31 26.01 C3.39 25.84 2.96 25.52 2.74 26.02 C2.51 26.52 2.78 26.57 2.78 26.57" fill="none"/></g>
<g fill="blue" mcviz:r="P414_VN339_VN1089" stroke="blue" stroke-linecap="round" stroke-width="0.0268930883425" transform="scale(1.000)"><path d="M3.73 21.43 C3.50 21.65 2.51 22.64 2.18 23.69 C1.87 24.68 2.18 25.90 2.40 26.56" fill="none"/><path d="M2.11 23.96L2.10 23.54C2.14 23.60 2.26 23.63 2.33 23.61Z" stroke="none"/></g>
<use mcviz:r="P414_VN339_VN1089" x="2.628" y="24.352" transform="scale(1.000)" xlink:href="#pdg-2" />
<g fill="green" mcviz:r="P1024_VN864_VN1096" stroke="green" stroke-linecap="round" stroke-width="0.0414836157586" transform="scale(1.000)"><path d="M15.77 18.62 C15.77 18.62 15.52 18.53 15.48 19.18 C15.44 19.84 15.97 19.72 15.98 19.51 C15.99 19.29 15.48 19.11 15.44 19.76 C15.40 20.41 15.93 20.30 15.94 20.08 C15.96 19.87 15.45 19.69 15.41 20.34 C15.37 20.99 15.89 20.88 15.91 20.66 C15.92 20.45 15.41 20.27 15.37 20.92 C15.33 21.57 15.86 21.46 15.87 21.24 C15.88 21.03 15.37 20.85 15.33 21.50 C15.29 22.15 15.82 22.04 15.83 21.82 C15.85 21.61 15.34 21.43 15.30 22.08 C15.26 22.73 15.78 22.62 15.80 22.40 C15.81 22.18 15.30 22.01 15.26 22.66 C15.22 23.31 15.75 23.20 15.76 22.98 C15.78 22.76 15.27 22.59 15.22 23.24 C15.18 23.89 15.45 23.83 15.45 23.83" fill="none"/></g>
<g fill="green" mcviz:r="P1033_VN870_VN1096" stroke="green" stroke-linecap="round" stroke-width="0.0203384613232" transform="scale(1.000)"><path d="M14.71 21.45 C14.71 21.45 14.44 21.45 14.57 21.99 C14.71 22.53 15.18 22.29 15.14 22.11 C15.09 21.93 14.56 21.93 14.69 22.47 C14.82 23.01 15.30 22.76 15.26 22.59 C15.21 22.41 14.68 22.41 14.81 22.95 C14.94 23.49 15.42 23.24 15.37 23.06 C15.33 22.88 14.79 22.89 14.93 23.43 C15.06 23.97 15.30 23.84 15.30 23.84" fill="none"/></g>
<g fill="green" mcviz:r="P7_VN3_VN1104" stroke="green" stroke-linecap="round" stroke-width="0.100835441558" transform="scale(1.000)"><path d="M24.38 5.40 C24.38 5.40 24.28 5.12 23.70 5.55 C23.12 5.97 23.58 6.30 23.77 6.15 C23.95 6.00 23.72 5.48 23.19 5.96 C22.65 6.44 23.14 6.73 23.31 6.56 C23.48 6.39 23.19 5.90 22.71 6.44 C22.24 6.98 22.77 7.20 22.92 7.01 C23.06 6.82 22.69 6.37 22.31 6.98 C21.93 7.59 22.50 7.73 22.61 7.51 C22.71 7.29 22.23 6.93 22.01 7.61 C21.78 8.29 22.40 8.28 22.43 8.05 C22.47 7.81 21.89 7.60 21.89 8.32 C21.89 9.04 22.41 8.88 22.41 8.64 C22.41 8.40 21.89 8.24 21.89 8.96 C21.89 9.68 22.41 9.52 22.41 9.28 C22.41 9.04 21.89 8.88 21.89 9.60 C21.89 10.31 22.41 10.15 22.41 9.92 C22.41 9.68 21.89 9.52 21.89 10.23 C21.89 10.95 22.41 10.79 22.41 10.55 C22.41 10.31 22.11 10.10 21.87 10.78 C21.62 11.45 21.99 11.49 22.15 11.31 C22.30 11.12 22.12 10.71 21.56 11.15 C20.99 11.59 21.38 11.88 21.58 11.76 C21.79 11.64 21.71 11.14 21.06 11.45 C20.41 11.76 20.75 12.14 20.97 12.05 C21.20 11.96 21.17 11.44 20.49 11.68 C19.82 11.91 20.12 12.34 20.35 12.27 C20.58 12.20 20.59 11.67 19.90 11.86 C19.21 12.05 19.49 12.50 19.72 12.44 C19.96 12.39 19.99 11.85 19.29 12.01 C18.59 12.17 18.86 12.64 19.09 12.59 C19.33 12.54 19.38 12.01 18.68 12.14 C17.97 12.27 18.22 12.75 18.46 12.71 C18.69 12.67 18.76 12.13 18.06 12.25 C17.35 12.36 17.58 12.85 17.82 12.81 C18.06 12.78 18.14 12.24 17.43 12.34 C16.72 12.44 16.95 12.93 17.18 12.90 C17.42 12.87 17.51 12.34 16.80 12.42 C16.09 12.51 16.31 13.00 16.55 12.98 C16.78 12.95 16.89 12.42 16.17 12.50 C15.46 12.57 15.67 13.07 15.91 13.05 C16.15 13.02 16.26 12.49 15.54 12.56 C14.83 12.62 15.03 13.12 15.27 13.10 C15.51 13.08 15.62 12.56 14.91 12.61 C14.19 12.67 14.39 13.17 14.63 13.15 C14.87 13.14 14.99 12.61 14.28 12.65 C13.56 12.70 13.66 12.95 13.66 12.95" fill="none"/></g>
<g fill="green" mcviz:r="P418_VN341_VN1106" stroke="green" stroke-linecap="round" stroke-width="0.0428087236066" transform="scale(1.000)"><path d="M11.66 18.59 C11.66 18.59 11.46 18.65 11.85 19.16 C12.24 19.66 12.54 19.31 12.44 19.12 C12.34 18.93 11.86 18.98 12.06 19.58 C12.26 20.19 12.69 19.92 12.64 19.71 C12.59 19.50 12.08 19.47 12.20 20.10 C12.32 20.73 12.78 20.50 12.76 20.29 C12.73 20.08 12.21 20.00 12.27 20.64 C12.33 21.27 12.82 21.09 12.81 20.88 C12.80 20.67 12.29 20.54 12.30 21.18 C12.31 21.82 12.82 21.68 12.82 21.46 C12.82 21.25 12.32 21.09 12.29 21.73 C12.26 22.37 12.51 22.31 12.51 22.31" fill="none"/></g>
<g fill="green" mcviz:r="P502_VN397_VN1109" stroke="green" stroke-linecap="round" stroke-width="0.0762028546511" transform="scale(1.000)"><path d="M11.26 21.45 C11.26 21.45 10.99 21.43 11.08 21.97 C11.17 22.51 11.66 22.30 11.63 22.12 C11.61 21.95 11.07 21.91 11.16 22.45 C11.25 22.98 11.74 22.78 11.71 22.60 C11.68 22.42 11.15 22.39 11.24 22.93 C11.33 23.46 11.82 23.26 11.79 23.08 C11.76 22.90 11.23 22.87 11.32 23.40 C11.41 23.94 11.65 23.84 11.65 23.84" fill="none"/></g>
<g fill="red" mcviz:r="P1032_VN870_VN1111" stroke="red" stroke-linecap="round" stroke-width="0.0787102211929" transform="scale(1.000)"><path d="M14.67 21.45 C14.57 21.71 14.17 22.79 13.92 23.69 C13.60 24.83 13.90 25.24 13.35 26.28 C13.26 26.44 13.14 26.58 13.01 26.71" fill="none"/><path d="M13.79 24.30L13.74 23.89C13.79 23.94 13.91 23.96 13.98 23.93Z" stroke="none"/></g>
<use mcviz:r="P1032_VN870_VN1111" x="14.358" y="24.398" transform="scale(1.000)" xlink:href="#pdg5" />
<g fill="green" mcviz:r="P1411_VN1096_VN1111" stroke="green" stroke-linecap="round" stroke-width="0.0294860028048" transform="scale(1.000)"><path d="M15.17 24.77 C15.17 24.77 15.00 24.58 14.69 25.04 C14.38 25.51 14.87 25.70 14.97 25.55 C15.08 25.39 14.75 24.99 14.41 25.43 C14.07 25.88 14.54 26.10 14.66 25.95 C14.78 25.81 14.48 25.39 14.10 25.80 C13.73 26.21 14.17 26.47 14.30 26.34 C14.44 26.21 14.20 25.76 13.77 26.12 C13.34 26.47 13.73 26.79 13.89 26.68 C14.04 26.58 13.88 26.09 13.40 26.38 C12.92 26.66 13.09 26.83 13.09 26.83" fill="none"/></g>
<g fill="green" mcviz:r="P1417_VN1104_VN1111" stroke="green" stroke-linecap="round" stroke-width="0.066531006961" transform="scale(1.000)"><path d="M13.15 13.47 C13.15 13.47 12.89 13.40 12.89 14.10 C12.89 14.80 13.41 14.64 13.41 14.41 C13.41 14.18 12.89 14.02 12.89 14.72 C12.89 15.43 13.41 15.27 13.41 15.03 C13.41 14.80 12.89 14.64 12.89 15.35 C12.89 16.05 13.41 15.89 13.41 15.66 C13.41 15.43 12.89 15.27 12.89 15.97 C12.89 16.67 13.41 16.52 13.41 16.28 C13.41 16.05 12.89 15.89 12.89 16.60 C12.89 17.30 13.41 17.14 13.41 16.91 C13.41 16.67 12.89 16.52 12.89 17.22 C12.89 17.92 13.41 17.77 13.41 17.53 C13.41 17.30 12.89 17.14 12.89 17.84 C12.89 18.55 13.41 18.39 13.41 18.16 C13.41 17.92 12.89 17.77 12.89 18.47 C12.89 19.17 13.41 19.01 13.41 18.78 C13.41 18.55 12.89 18.39 12.89 19.09 C12.89 19.80 13.41 19.64 13.41 19.40 C13.41 19.17 12.89 19.01 12.89 19.72 C12.89 20.42 13.41 20.26 13.41 20.03 C13.41 19.80 12.89 19.64 12.89 20.34 C12.89 21.04 13.41 20.89 13.41 20.65 C13.41 20.42 12.89 20.26 12.89 20.97 C12.89 21.67 13.41 21.51 13.41 21.28 C13.41 21.04 12.89 20.89 12.89 21.59 C12.89 22.29 13.41 22.14 13.41 21.90 C13.41 21.67 12.89 21.51 12.89 22.21 C12.89 22.92 13.41 22.76 13.41 22.53 C13.41 22.29 12.89 22.14 12.89 22.84 C12.89 23.54 13.41 23.39 13.41 23.15 C13.41 22.92 12.89 22.76 12.89 23.46 C12.89 24.17 13.41 24.01 13.41 23.78 C13.41 23.54 12.89 23.39 12.89 24.09 C12.89 24.79 13.41 24.64 13.41 24.40 C13.42 24.17 12.93 23.99 12.88 24.69 C12.82 25.39 13.33 25.29 13.36 25.05 C13.39 24.82 12.92 24.60 12.80 25.29 C12.69 25.98 13.21 25.92 13.26 25.69 C13.30 25.46 12.84 25.20 12.68 25.88 C12.52 26.57 12.78 26.55 12.78 26.55" fill="none"/></g>
<g fill="green" mcviz:r="P1425_VN1106_VN1111" stroke="green" stroke-linecap="round" stroke-width="0.0547014333752" transform="scale(1.000)"><path d="M12.47 23.31 C12.47 23.31 12.20 23.25 12.23 23.85 C12.26 24.46 12.77 24.30 12.76 24.10 C12.75 23.90 12.23 23.79 12.25 24.39 C12.28 25.00 12.79 24.84 12.78 24.64 C12.77 24.44 12.25 24.32 12.28 24.93 C12.30 25.53 12.81 25.38 12.81 25.17 C12.80 24.97 12.27 24.86 12.30 25.47 C12.32 26.07 12.84 25.91 12.83 25.71 C12.82 25.51 12.30 25.40 12.32 26.00 C12.35 26.61 12.60 26.53 12.60 26.53" fill="none"/></g>
<g fill="green" mcviz:r="P1427_VN1109_VN1111" stroke="green" stroke-linecap="round" stroke-width="0.076810128391" transform="scale(1.000)"><path d="M11.89 24.81 C11.89 24.81 11.63 24.84 11.79 25.33 C11.95 25.82 12.41 25.54 12.36 25.38 C12.30 25.22 11.77 25.27 11.93 25.76 C12.10 26.25 12.55 25.98 12.50 25.82 C12.45 25.65 11.92 25.71 12.08 26.20 C12.24 26.69 12.47 26.55 12.47 26.55" fill="none"/></g>
<g fill="blue" mcviz:r="P501_VN397_VN1111" stroke="blue" stroke-linecap="round" stroke-width="0.0438944077322" transform="scale(1.000)"><path d="M11.21 21.44 C10.94 21.76 9.48 23.60 10.12 24.97 C10.55 25.87 11.57 26.50 12.17 26.81" fill="none"/><path d="M10.00 24.65L9.83 24.27C9.90 24.30 10.02 24.29 10.07 24.24Z" stroke="none"/></g>
<use mcviz:r="P501_VN397_VN1111" x="10.582" y="24.472" transform="scale(1.000)" xlink:href="#pdg-1" />
<g fill="green" mcviz:r="P862_VN708_VN1159" stroke="green" stroke-linecap="round" stroke-width="0.0233873910752" transform="scale(1.000)"><path d="M53.49 3.17 C53.49 3.17 53.27 3.32 53.53 3.58 C53.78 3.84 54.10 3.42 54.01 3.34 C53.93 3.25 53.50 3.55 53.75 3.81 C54.01 4.07 54.16 3.86 54.16 3.86" fill="none"/></g>
<g fill="red" mcviz:r="P1018_VN708_VN1161" stroke="red" stroke-linecap="round" stroke-width="0.013485095468" transform="scale(1.000)"><path d="M53.43 3.20 C53.43 3.38 53.43 3.84 53.43 4.22 C53.43 4.22 53.43 4.22 53.43 24.33 C53.43 25.32 54.26 26.24 54.77 26.71" fill="none"/><path d="M53.43 15.36L53.31 14.96C53.37 15.00 53.49 15.00 53.55 14.96Z" stroke="none"/></g>
<use mcviz:r="P1018_VN708_VN1161" x="53.871" y="11.648" transform="scale(1.000)" xlink:href="#pdg1" />
<g fill="green" mcviz:r="P1455_VN1159_VN1161" stroke="green" stroke-linecap="round" stroke-width="0.0887652997994" transform="scale(1.000)"><path d="M54.51 4.73 C54.51 4.73 54.25 4.65 54.25 5.37 C54.25 6.09 54.77 5.93 54.77 5.69 C54.77 5.45 54.25 5.29 54.25 6.01 C54.25 6.74 54.77 6.58 54.77 6.34 C54.77 6.09 54.25 5.93 54.25 6.66 C54.25 7.38 54.77 7.22 54.77 6.98 C54.77 6.74 54.25 6.58 54.25 7.30 C54.25 8.03 54.77 7.86 54.77 7.62 C54.77 7.38 54.25 7.22 54.25 7.94 C54.25 8.67 54.77 8.51 54.77 8.27 C54.77 8.02 54.25 7.86 54.25 8.59 C54.25 9.31 54.77 9.15 54.77 8.91 C54.77 8.67 54.25 8.51 54.25 9.23 C54.25 9.96 54.77 9.80 54.77 9.55 C54.77 9.31 54.25 9.15 54.25 9.88 C54.25 10.60 54.77 10.44 54.77 10.20 C54.77 9.96 54.25 9.80 54.25 10.52 C54.25 11.24 54.77 11.08 54.77 10.84 C54.77 10.60 54.25 10.44 54.25 11.16 C54.25 11.89 54.77 11.73 54.77 11.49 C54.77 11.24 54.25 11.08 54.25 11.81 C54.25 12.53 54.77 12.37 54.77 12.13 C54.77 11.89 54.25 11.73 54.25 12.45 C54.25 13.18 54.77 13.01 54.77 12.77 C54.77 12.53 54.25 12.37 54.25 13.09 C54.25 13.82 54.77 13.66 54.77 13.42 C54.77 13.18 54.25 13.01 54.25 13.74 C54.25 14.46 54.77 14.30 54.77 14.06 C54.77 13.82 54.25 13.66 54.25 14.38 C54.25 15.11 54.77 14.95 54.77 14.70 C54.77 14.46 54.25 14.30 54.25 15.03 C54.25 15.75 54.77 15.59 54.77 15.35 C54.77 15.11 54.25 14.95 54.25 15.67 C54.25 16.39 54.77 16.23 54.77 15.99 C54.77 15.75 54.25 15.59 54.25 16.31 C54.25 17.04 54.77 16.88 54.77 16.64 C54.77 16.39 54.25 16.23 54.25 16.96 C54.25 17.68 54.77 17.52 54.77 17.28 C54.77 17.04 54.25 16.88 54.25 17.60 C54.25 18.33 54.77 18.16 54.77 17.92 C54.77 17.68 54.25 17.52 54.25 18.25 C54.25 18.97 54.77 18.81 54.77 18.57 C54.77 18.33 54.25 18.16 54.25 18.89 C54.25 19.61 54.77 19.45 54.77 19.21 C54.77 18.97 54.25 18.81 54.25 19.53 C54.25 20.26 54.77 20.10 54.77 19.85 C54.77 19.61 54.25 19.45 54.25 20.18 C54.25 20.90 54.77 20.74 54.77 20.50 C54.77 20.26 54.25 20.10 54.25 20.82 C54.25 21.54 54.77 21.38 54.77 21.14 C54.77 20.90 54.25 20.74 54.25 21.46 C54.25 22.19 54.77 22.03 54.77 21.79 C54.77 21.54 54.25 21.38 54.25 22.11 C54.25 22.83 54.77 22.67 54.77 22.43 C54.77 22.19 54.25 22.03 54.25 22.75 C54.25 23.48 54.77 23.31 54.77 23.07 C54.77 22.83 54.25 22.67 54.25 23.40 C54.25 24.12 54.77 23.96 54.77 23.72 C54.77 23.48 54.25 23.31 54.25 24.04 C54.25 24.76 54.78 24.60 54.77 24.36 C54.77 24.12 54.21 23.98 54.27 24.71 C54.33 25.43 54.86 25.20 54.82 24.97 C54.79 24.73 54.23 24.66 54.37 25.37 C54.51 26.08 55.00 25.81 54.95 25.57 C54.89 25.34 54.33 25.32 54.53 26.02 C54.72 26.71 54.97 26.56 54.97 26.56" fill="none"/></g>
<g fill="blue" mcviz:r="P1158_VN956_VN1161" stroke="blue" stroke-linecap="round" stroke-width="0.0115082446439" transform="scale(1.000)"><path d="M55.10 7.23 C55.11 7.49 55.15 8.46 55.15 9.26 C55.15 9.26 55.15 9.26 55.15 24.33 C55.15 25.10 55.15 25.99 55.15 26.53" fill="none"/><path d="M55.15 17.08L55.03 16.68C55.09 16.72 55.21 16.72 55.27 16.68Z" stroke="none"/></g>
<use mcviz:r="P1158_VN956_VN1161" x="55.476" y="15.769" transform="scale(1.000)" xlink:href="#pdg-3" />
<g fill="#EFDECD" mcviz:r="P1147_VN946_VN1380" stroke="#EFDECD" stroke-linecap="round" stroke-width="0.0907956499779" transform="scale(1.000)"><path d="M51.41 27.04 C51.64 27.08 52.49 27.26 52.89 27.78 C53.26 28.26 53.22 29.08 53.20 29.28" fill="none"/><path d="M52.98 27.88L52.63 27.66C52.70 27.65 52.79 27.57 52.81 27.50Z" stroke="none"/></g>
<use mcviz:r="P1147_VN946_VN1380" x="54.060" y="28.320" transform="scale(1.000)" xlink:href="#pdg13" />
<g fill="#EFDECD" mcviz:r="P1148_VN946_VN1381" stroke="#EFDECD" stroke-linecap="round" stroke-width="0.0903857796256" transform="scale(1.000)"><path d="M51.3470 27.0944 C51.3470 27.2508 51.3470 27.2507 51.3470 27.4071" fill="none"/><path d="M51.3470 27.7198 C51.3470 27.8761 51.3470 27.8761 51.3470 28.0325" fill="none"/><path d="M51.3470 28.3452 C51.3470 28.5016 51.3470 28.5016 51.3470 28.6579" fill="none"/><path d="M51.3470 28.9706 C51.3470 29.1270 51.3470 29.1270 51.3470 29.2833" fill="none"/></g>
<use mcviz:r="P1148_VN946_VN1381" x="52.099" y="28.298" transform="scale(1.000)" xlink:href="#pdg-14" />
<g fill="black" mcviz:r="P1186_VN981_VN1386" stroke="black" stroke-linecap="round" stroke-width="0.0882767274028" transform="scale(1.000)"><path d="M32.75 27.53C32.75 28.12 32.75 28.74 32.75 28.96" fill="none"/><path d="M32.75 29.28L32.63 28.88C32.69 28.92 32.81 28.92 32.87 28.88Z" stroke="none"/></g>
<text x="32.889" y="28.736" font-size="1.00">
cluster (63.32 GeV)
</text>
<g fill="black" mcviz:r="P1226_VN1006_VN1396" stroke="black" stroke-linecap="round" stroke-width="0.0838500998297" transform="scale(1.000)"><path d="M22.69 27.53C22.69 28.12 22.69 28.74 22.69 28.96" fill="none"/><path d="M22.69 29.28L22.57 28.88C22.63 28.92 22.75 28.92 22.81 28.88Z" stroke="none"/></g>
<text x="22.812" y="28.736" font-size="1.00">
cluster (50.55 GeV)
</text>
<g fill="black" mcviz:r="P1386_VN1089_VN1503" stroke="black" stroke-linecap="round" stroke-width="0.0853786596814" transform="scale(1.000)"><path d="M2.57 27.53C2.57 28.12 2.57 28.74 2.57 28.96" fill="none"/><path d="M2.57 29.28L2.45 28.88C2.51 28.92 2.63 28.92 2.69 28.88Z" stroke="none"/></g>
<text x="2.688" y="28.736" font-size="1.00">
cluster (54.64 GeV)
</text>
<g fill="black" mcviz:r="P1503_VN1161_VN1731" stroke="black" stroke-linecap="round" stroke-width="0.088673957542" transform="scale(1.000)"><path d="M55.15 27.53C55.15 28.12 55.15 28.74 55.15 28.96" fill="none"/><path d="M55.15 29.28L55.03 28.88C55.09 28.92 55.21 28.92 55.27 28.88Z" stroke="none"/></g>
<text x="55.278" y="28.736" font-size="1.00">
cluster (64.61 GeV)
</text>
<g fill="black" mcviz:r="P1207_VN995_VN1798" stroke="black" stroke-linecap="round" stroke-width="0.0736805224405" transform="scale(1.000)"><path d="M42.85 27.53C42.85 28.12 42.85 28.74 42.85 28.96" fill="none"/><path d="M42.85 29.28L42.73 28.88C42.79 28.92 42.91 28.92 42.97 28.88Z" stroke="none"/></g>
<text x="42.938" y="28.736" font-size="1.00">
cluster (30 GeV)
</text>
<g fill="black" mcviz:r="P1431_VN1111_VN1807" stroke="black" stroke-linecap="round" stroke-width="0.0858558191449" transform="scale(1.000)"><path d="M12.62 27.53C12.62 28.12 12.62 28.74 12.62 28.96" fill="none"/><path d="M12.62 29.28L12.51 28.88C12.56 28.92 12.69 28.92 12.74 28.88Z" stroke="none"/></g>
<text x="12.750" y="28.736" font-size="1.00">
cluster (55.99 GeV)
</text>
<g fill="red" mcviz:r="P60_VN48_VN214" stroke="red" stroke-linecap="round" stroke-width="0.0878770316586" transform="scale(1.000)"><path d="M11.57 15.80C11.15 16.32 7.47 20.81 7.04 21.34" fill="none"/><path d="M9.18 18.72L9.34 18.34C9.36 18.41 9.45 18.48 9.53 18.49Z" stroke="none"/></g>
<use mcviz:r="P60_VN48_VN214" x="10.135" y="18.621" transform="scale(1.000)" xlink:href="#pdg1" />
<g fill="green" mcviz:r="P229_VN1082_VN226" stroke="green" stroke-linecap="round" stroke-width="0.0418697703164" transform="scale(1.000)"><path d="M3.75 4.73 C3.75 4.73 3.49 4.65 3.49 5.33 C3.49 6.02 4.01 5.87 4.01 5.64 C4.01 5.41 3.49 5.26 3.49 5.94 C3.49 6.63 4.01 6.48 4.01 6.25 C4.01 6.02 3.49 5.87 3.49 6.55 C3.49 7.24 4.01 7.09 4.01 6.86 C4.01 6.63 3.49 6.48 3.49 7.16 C3.49 7.85 4.01 7.69 4.01 7.47 C4.01 7.24 3.49 7.09 3.49 7.77 C3.49 8.46 4.01 8.30 4.01 8.07 C4.01 7.85 3.49 7.69 3.49 8.38 C3.49 9.06 4.01 8.91 4.01 8.68 C4.01 8.46 3.49 8.30 3.49 8.99 C3.49 9.67 4.01 9.52 4.01 9.29 C4.01 9.06 3.49 8.91 3.49 9.60 C3.49 10.28 4.01 10.13 4.01 9.90 C4.01 9.67 3.49 9.52 3.49 10.21 C3.49 10.89 4.01 10.74 4.01 10.51 C4.01 10.28 3.49 10.13 3.49 10.81 C3.49 11.50 4.01 11.35 4.01 11.12 C4.01 10.89 3.49 10.74 3.49 11.42 C3.49 12.11 4.01 11.96 4.01 11.73 C4.01 11.50 3.49 11.35 3.49 12.03 C3.49 12.72 4.01 12.57 4.01 12.34 C4.01 12.11 3.49 11.96 3.49 12.64 C3.49 13.33 4.01 13.17 4.01 12.95 C4.01 12.72 3.49 12.57 3.49 13.25 C3.49 13.94 4.01 13.78 4.01 13.55 C4.01 13.33 3.49 13.17 3.49 13.86 C3.49 14.54 4.01 14.39 4.01 14.16 C4.01 13.94 3.49 13.78 3.49 14.47 C3.49 15.15 4.01 15.00 4.01 14.77 C4.01 14.54 3.49 14.39 3.49 15.08 C3.49 15.76 3.75 15.69 3.75 15.69" fill="none"/></g>
<g fill="blue" mcviz:r="P263_VN226_VN267" stroke="blue" stroke-linecap="round" stroke-width="0.0380881377384" transform="scale(1.000)"><path d="M3.78 15.80 C3.93 16.05 4.53 17.11 4.92 18.03 C4.99 18.19 5.05 18.39 5.08 18.49" fill="none"/><path d="M4.58 17.30L4.29 17.00C4.37 17.00 4.47 16.95 4.51 16.89Z" stroke="none"/></g>
<use mcviz:r="P263_VN226_VN267" x="5.253" y="17.158" transform="scale(1.000)" xlink:href="#pdg-2" />
<g fill="green" mcviz:r="P3_VN1159_VN3" stroke="green" stroke-linecap="round" stroke-width="0.005" transform="scale(1.000)"><path d="M54.01 4.24 C54.01 4.24 54.08 3.98 53.36 4.01 C52.64 4.03 52.82 4.55 53.06 4.54 C53.30 4.53 53.44 4.00 52.72 4.03 C52.00 4.06 52.18 4.57 52.42 4.56 C52.66 4.55 52.80 4.03 52.08 4.05 C51.36 4.08 51.54 4.59 51.78 4.58 C52.02 4.58 52.16 4.05 51.44 4.08 C50.72 4.10 50.90 4.62 51.14 4.61 C51.38 4.60 51.52 4.07 50.80 4.10 C50.08 4.13 50.26 4.64 50.50 4.63 C50.74 4.62 50.88 4.10 50.16 4.13 C49.44 4.15 49.62 4.67 49.86 4.66 C50.10 4.65 50.24 4.12 49.52 4.15 C48.80 4.18 48.98 4.69 49.22 4.68 C49.46 4.67 49.60 4.15 48.88 4.17 C48.16 4.20 48.34 4.71 48.58 4.70 C48.82 4.70 48.96 4.17 48.24 4.20 C47.52 4.22 47.70 4.74 47.94 4.73 C48.18 4.72 48.32 4.19 47.60 4.22 C46.88 4.25 47.06 4.76 47.30 4.75 C47.54 4.74 47.68 4.22 46.96 4.24 C46.24 4.27 46.42 4.79 46.66 4.78 C46.90 4.77 47.04 4.24 46.32 4.27 C45.60 4.30 45.78 4.81 46.02 4.80 C46.26 4.79 46.40 4.27 45.68 4.29 C44.96 4.32 45.14 4.83 45.38 4.82 C45.62 4.82 45.76 4.29 45.04 4.32 C44.32 4.34 44.50 4.86 44.74 4.85 C44.98 4.84 45.12 4.31 44.40 4.34 C43.68 4.37 43.86 4.88 44.10 4.87 C44.34 4.86 44.48 4.34 43.76 4.36 C43.04 4.39 43.22 4.91 43.46 4.90 C43.70 4.89 43.84 4.36 43.12 4.39 C42.40 4.42 42.58 4.93 42.82 4.92 C43.06 4.91 43.20 4.39 42.48 4.41 C41.76 4.44 41.94 4.95 42.18 4.94 C42.42 4.94 42.56 4.41 41.84 4.44 C41.12 4.46 41.30 4.98 41.54 4.97 C41.78 4.96 41.92 4.43 41.20 4.46 C40.48 4.49 40.66 5.00 40.90 4.99 C41.14 4.98 41.28 4.46 40.56 4.48 C39.84 4.51 40.02 5.03 40.26 5.02 C40.50 5.01 40.64 4.48 39.92 4.51 C39.20 4.54 39.38 5.05 39.62 5.04 C39.86 5.03 40.00 4.51 39.28 4.53 C38.56 4.56 38.74 5.07 38.98 5.06 C39.22 5.06 39.36 4.53 38.64 4.56 C37.92 4.58 38.10 5.10 38.34 5.09 C38.58 5.08 38.72 4.55 38.00 4.58 C37.28 4.61 37.46 5.12 37.70 5.11 C37.94 5.10 38.08 4.58 37.36 4.60 C36.64 4.63 36.82 5.15 37.06 5.14 C37.30 5.13 37.44 4.60 36.72 4.63 C36.00 4.66 36.18 5.17 36.42 5.16 C36.66 5.15 36.80 4.63 36.08 4.65 C35.36 4.68 35.54 5.19 35.78 5.18 C36.02 5.18 36.16 4.65 35.44 4.68 C34.72 4.70 34.90 5.22 35.14 5.21 C35.38 5.20 35.52 4.67 34.80 4.70 C34.08 4.73 34.26 5.24 34.50 5.23 C34.74 5.22 34.88 4.70 34.16 4.72 C33.44 4.75 33.62 5.27 33.86 5.26 C34.10 5.25 34.24 4.72 33.52 4.75 C32.80 4.78 32.98 5.29 33.22 5.28 C33.46 5.27 33.60 4.75 32.88 4.77 C32.16 4.80 32.34 5.31 32.58 5.30 C32.82 5.30 32.96 4.77 32.24 4.80 C31.52 4.82 31.70 5.34 31.94 5.33 C32.18 5.32 32.32 4.79 31.60 4.82 C30.88 4.85 31.06 5.36 31.30 5.35 C31.54 5.34 31.68 4.82 30.96 4.84 C30.24 4.87 30.42 5.38 30.66 5.38 C30.90 5.37 31.04 4.84 30.32 4.87 C29.60 4.90 29.78 5.41 30.02 5.40 C30.26 5.39 30.40 4.87 29.68 4.89 C28.96 4.92 29.14 5.43 29.38 5.42 C29.62 5.41 29.76 4.89 29.04 4.92 C28.32 4.94 28.50 5.46 28.74 5.45 C28.98 5.44 29.12 4.91 28.40 4.94 C27.68 4.97 27.86 5.48 28.10 5.47 C28.34 5.46 28.48 4.94 27.76 4.96 C27.04 4.99 27.22 5.50 27.46 5.50 C27.70 5.49 27.84 4.96 27.12 4.99 C26.40 5.02 26.58 5.53 26.82 5.52 C27.06 5.51 27.20 4.99 26.48 5.01 C25.76 5.04 25.94 5.55 26.18 5.54 C26.42 5.53 26.56 5.01 25.84 5.04 C25.12 5.06 25.30 5.58 25.54 5.57 C25.78 5.56 25.92 5.03 25.20 5.06 C24.48 5.09 24.57 5.34 24.57 5.34" fill="none"/></g>
<g fill="green" mcviz:r="P4_VN1082_VN3" stroke="green" stroke-linecap="round" stroke-width="0.005" transform="scale(1.000)"><path d="M4.25 4.25 C4.25 4.25 4.16 4.51 4.87 4.54 C5.57 4.58 5.44 4.05 5.21 4.04 C4.97 4.03 4.79 4.54 5.50 4.58 C6.20 4.62 6.07 4.09 5.84 4.08 C5.60 4.06 5.42 4.57 6.12 4.61 C6.83 4.65 6.70 4.12 6.47 4.11 C6.23 4.10 6.05 4.61 6.75 4.65 C7.46 4.68 7.33 4.16 7.09 4.14 C6.86 4.13 6.67 4.64 7.38 4.68 C8.09 4.72 7.96 4.19 7.72 4.18 C7.49 4.17 7.30 4.68 8.01 4.71 C8.72 4.75 8.59 4.22 8.35 4.21 C8.12 4.20 7.93 4.71 8.64 4.75 C9.35 4.79 9.22 4.26 8.98 4.25 C8.75 4.23 8.56 4.74 9.27 4.78 C9.97 4.82 9.85 4.29 9.61 4.28 C9.37 4.27 9.19 4.78 9.90 4.82 C10.60 4.86 10.47 4.33 10.24 4.31 C10.00 4.30 9.82 4.81 10.53 4.85 C11.23 4.89 11.10 4.36 10.87 4.35 C10.63 4.34 10.45 4.85 11.15 4.89 C11.86 4.92 11.73 4.40 11.50 4.38 C11.26 4.37 11.08 4.88 11.78 4.92 C12.49 4.96 12.36 4.43 12.13 4.42 C11.89 4.40 11.70 4.91 12.41 4.95 C13.12 4.99 12.99 4.46 12.75 4.45 C12.52 4.44 12.33 4.95 13.04 4.99 C13.75 5.03 13.62 4.50 13.38 4.49 C13.15 4.47 12.96 4.98 13.67 5.02 C14.38 5.06 14.25 4.53 14.01 4.52 C13.78 4.51 13.59 5.02 14.30 5.06 C15.01 5.09 14.88 4.57 14.64 4.55 C14.40 4.54 14.22 5.05 14.93 5.09 C15.63 5.13 15.51 4.60 15.27 4.59 C15.03 4.57 14.85 5.09 15.56 5.12 C16.26 5.16 16.13 4.63 15.90 4.62 C15.66 4.61 15.48 5.12 16.18 5.16 C16.89 5.20 16.76 4.67 16.53 4.66 C16.29 4.64 16.11 5.15 16.81 5.19 C17.52 5.23 17.39 4.70 17.16 4.69 C16.92 4.68 16.73 5.19 17.44 5.23 C18.15 5.26 18.02 4.74 17.78 4.72 C17.55 4.71 17.36 5.22 18.07 5.26 C18.78 5.30 18.65 4.77 18.41 4.76 C18.18 4.75 17.99 5.26 18.70 5.29 C19.41 5.33 19.28 4.81 19.04 4.79 C18.81 4.78 18.62 5.29 19.33 5.33 C20.04 5.37 19.91 4.84 19.67 4.83 C19.44 4.81 19.25 5.32 19.96 5.36 C20.66 5.40 20.54 4.87 20.30 4.86 C20.06 4.85 19.88 5.36 20.59 5.40 C21.29 5.44 21.16 4.91 20.93 4.89 C20.69 4.88 20.51 5.39 21.21 5.43 C21.92 5.47 21.79 4.94 21.56 4.93 C21.32 4.92 21.14 5.43 21.84 5.47 C22.55 5.50 22.42 4.98 22.19 4.96 C21.95 4.95 21.76 5.46 22.47 5.50 C23.18 5.54 23.05 5.01 22.81 5.00 C22.58 4.98 22.39 5.50 23.10 5.53 C23.81 5.57 23.68 5.04 23.44 5.03 C23.21 5.02 23.02 5.53 23.73 5.57 C24.44 5.61 24.37 5.34 24.37 5.34" fill="none"/></g>
<g fill="blue" mcviz:r="P306_VN267_VN339" stroke="blue" stroke-linecap="round" stroke-width="0.0396205315887" transform="scale(1.000)"><path d="M5.09 18.62 C5.09 18.73 5.05 18.96 4.92 19.08 C4.56 19.41 4.17 18.96 3.86 19.33 C3.35 19.95 3.67 21.06 3.76 21.33" fill="none"/><path d="M3.65 19.69L3.73 19.28C3.76 19.34 3.87 19.40 3.94 19.39Z" stroke="none"/></g>
<use mcviz:r="P306_VN267_VN339" x="4.309" y="19.991" transform="scale(1.000)" xlink:href="#pdg-2" />
<g fill="blue" mcviz:r="P59_VN48_VN341" stroke="blue" stroke-linecap="round" stroke-width="0.0810801225567" transform="scale(1.000)"><path d="M11.61 15.81C11.61 16.19 11.61 18.12 11.61 18.49" fill="none"/><path d="M11.61 17.35L11.49 16.95C11.55 16.99 11.67 16.99 11.73 16.95Z" stroke="none"/></g>
<use mcviz:r="P59_VN48_VN341" x="12.068" y="17.277" transform="scale(1.000)" xlink:href="#pdg-1" />
<g fill="blue" mcviz:r="P417_VN341_VN397" stroke="blue" stroke-linecap="round" stroke-width="0.0790546212191" transform="scale(1.000)"><path d="M11.58 18.61 C11.50 18.73 11.33 19.04 11.26 19.33 C11.10 20.10 11.21 21.07 11.24 21.32" fill="none"/><path d="M11.17 20.13L11.08 19.72C11.14 19.77 11.26 19.78 11.32 19.74Z" stroke="none"/></g>
<use mcviz:r="P417_VN341_VN397" x="11.721" y="20.110" transform="scale(1.000)" xlink:href="#pdg-1" />
<g fill="green" mcviz:r="P51_VN1104_VN48" stroke="green" stroke-linecap="round" stroke-width="0.0974473804529" transform="scale(1.000)"><path d="M12.91 13.41 C12.91 13.41 12.71 13.23 12.43 13.74 C12.14 14.26 12.66 14.39 12.76 14.22 C12.85 14.05 12.46 13.69 12.17 14.20 C11.89 14.71 12.41 14.85 12.50 14.68 C12.60 14.51 12.21 14.14 11.92 14.66 C11.64 15.17 12.15 15.31 12.25 15.14 C12.34 14.96 11.95 14.60 11.67 15.11 C11.38 15.62 11.64 15.69 11.64 15.69" fill="none"/></g>
<g fill="green" mcviz:r="P717_VN1159_VN622" stroke="green" stroke-linecap="round" stroke-width="0.0209150824886" transform="scale(1.000)"><path d="M54.87 4.57 C54.87 4.57 54.66 4.72 54.89 4.97 C55.13 5.23 55.46 4.84 55.39 4.75 C55.31 4.66 54.87 4.92 55.08 5.19 C55.29 5.47 55.47 5.29 55.47 5.29" fill="none"/></g>
<g fill="black" mcviz:r="P1_VN1812_VN708" stroke="black" stroke-linecap="round" stroke-width="0.005" transform="scale(1.000)"><path d="M53.43 1.00C53.43 1.65 53.43 2.39 53.43 2.70" fill="none"/><path d="M53.43 3.02L53.31 2.62C53.37 2.66 53.49 2.66 53.55 2.62Z" stroke="none"/></g>
<use mcviz:r="P1_VN1812_VN708" x="54.300" y="2.057" transform="scale(1.000)" xlink:href="#pdg2212" />
<g fill="black" mcviz:r="P2_VN1813_VN709" stroke="black" stroke-linecap="round" stroke-width="0.005" transform="scale(1.000)"><path d="M2.15 1.00C2.15 1.66 2.15 2.45 2.15 2.73" fill="none"/><path d="M2.15 3.05L2.03 2.65C2.09 2.69 2.21 2.69 2.27 2.65Z" stroke="none"/></g>
<use mcviz:r="P2_VN1813_VN709" x="3.022" y="2.057" transform="scale(1.000)" xlink:href="#pdg2212" />
<g fill="red" mcviz:r="P5_VN3_VN863" stroke="red" stroke-linecap="round" stroke-width="0.0879800058327" transform="scale(1.000)"><path d="M24.47 5.45C24.47 5.77 24.47 6.83 24.47 7.10" fill="none"/><path d="M24.47 6.47L24.35 6.07C24.41 6.11 24.53 6.11 24.59 6.07Z" stroke="none"/></g>
<use mcviz:r="P5_VN3_VN863" x="24.785" y="6.218" transform="scale(1.000)" xlink:href="#pdg6" />
<g fill="red" mcviz:r="P1022_VN863_VN864" stroke="red" stroke-linecap="round" stroke-width="0.0810190645434" transform="scale(1.000)"><path d="M24.42 7.21 C24.19 7.40 23.21 8.30 23.21 9.26 C23.21 9.26 23.21 9.26 23.21 11.58 C23.21 15.88 16.51 18.30 15.83 18.54" fill="none"/><path d="M22.11 14.50L22.25 14.11C22.28 14.18 22.38 14.25 22.45 14.25Z" stroke="none"/></g>
<use mcviz:r="P1022_VN863_VN864" x="23.650" y="11.648" transform="scale(1.000)" xlink:href="#pdg5" />
<g fill="red" mcviz:r="P1023_VN864_VN870" stroke="red" stroke-linecap="round" stroke-width="0.0787460839071" transform="scale(1.000)"><path d="M15.72 18.57 C15.54 18.64 14.94 18.89 14.71 19.33 C14.35 20.04 14.60 21.07 14.68 21.33" fill="none"/><path d="M14.53 19.88L14.51 19.46C14.56 19.51 14.68 19.54 14.74 19.51Z" stroke="none"/></g>
<use mcviz:r="P1023_VN864_VN870" x="15.150" y="20.037" transform="scale(1.000)" xlink:href="#pdg5" />
<g fill="blue" mcviz:r="P6_VN3_VN880" stroke="blue" stroke-linecap="round" stroke-width="0.0963773880696" transform="scale(1.000)"><path d="M24.57 5.38C25.88 5.79 40.31 10.29 41.32 10.61" fill="none"/><path d="M33.13 8.05L32.72 8.05C32.77 8.00 32.81 7.89 32.79 7.82Z" stroke="none"/></g>
<use mcviz:r="P6_VN3_VN880" x="36.310" y="8.415" transform="scale(1.000)" xlink:href="#pdg-6" />
<g fill="blue" mcviz:r="P1048_VN880_VN881" stroke="blue" stroke-linecap="round" stroke-width="0.0791300524461" transform="scale(1.000)"><path d="M41.38 10.69C41.38 11.02 41.38 12.57 41.38 12.91" fill="none"/><path d="M41.38 12.00L41.26 11.60C41.31 11.64 41.44 11.64 41.49 11.60Z" stroke="none"/></g>
<use mcviz:r="P1048_VN880_VN881" x="41.833" y="11.721" transform="scale(1.000)" xlink:href="#pdg-5" />
<g fill="green" mcviz:r="P1050_VN881_VN887" stroke="green" stroke-linecap="round" stroke-width="0.0538162265968" transform="scale(1.000)"><path d="M41.37 13.04 C41.37 13.04 41.12 12.94 41.04 13.44 C40.96 13.93 41.49 13.91 41.52 13.74 C41.54 13.57 41.05 13.38 40.97 13.88 C40.89 14.38 41.42 14.35 41.44 14.18 C41.47 14.02 40.98 13.82 40.90 14.32 C40.82 14.82 41.35 14.79 41.37 14.62 C41.40 14.46 40.90 14.27 40.83 14.76 C40.75 15.26 41.28 15.23 41.30 15.07 C41.33 14.90 40.83 14.71 40.75 15.20 C40.67 15.70 40.94 15.69 40.94 15.69" fill="none"/></g>
<g fill="red" mcviz:r="P1058_VN887_VN901" stroke="red" stroke-linecap="round" stroke-width="0.043624027041" transform="scale(1.000)"><path d="M40.93 15.81C40.93 16.19 40.93 18.12 40.93 18.49" fill="none"/><path d="M40.93 17.35L40.81 16.95C40.87 16.99 40.99 16.99 41.05 16.95Z" stroke="none"/></g>
<use mcviz:r="P1058_VN887_VN901" x="41.371" y="17.204" transform="scale(1.000)" xlink:href="#pdg1" />
<g fill="blue" mcviz:r="P1049_VN881_VN911" stroke="blue" stroke-linecap="round" stroke-width="0.0687590667679" transform="scale(1.000)"><path d="M41.39 13.04C41.50 13.41 42.03 15.32 42.13 15.69" fill="none"/><path d="M41.82 14.55L41.59 14.20C41.66 14.22 41.78 14.19 41.83 14.14Z" stroke="none"/></g>
<use mcviz:r="P1049_VN881_VN911" x="42.375" y="14.499" transform="scale(1.000)" xlink:href="#pdg-5" />
<g fill="magenta" mcviz:r="P1021_VN863_VN917" stroke="magenta" stroke-linecap="round" stroke-width="0.0974347194334" transform="scale(1.000)"><path d="M24.51 7.21 C24.51 7.21 24.61 7.58 24.61 7.58 C24.61 7.58 25.33 7.84 25.33 7.84 C25.33 7.84 25.52 8.59 25.52 8.59 C25.52 8.59 26.24 8.85 26.24 8.85 C26.24 8.85 26.33 9.22 26.33 9.22" fill="none"/></g>
<use mcviz:r="P1021_VN863_VN917" x="27.334" y="8.437" transform="scale(1.000)" xlink:href="#pdg24" />
<g fill="red" mcviz:r="P1104_VN917_VN918" stroke="red" stroke-linecap="round" stroke-width="0.0840721230017" transform="scale(1.000)"><path d="M26.38 9.33C26.38 9.56 26.38 10.32 26.38 10.56" fill="none"/><path d="M26.38 10.14L26.25 9.74C26.32 9.78 26.43 9.78 26.50 9.74Z" stroke="none"/></g>
<use mcviz:r="P1104_VN917_VN918" x="26.805" y="9.893" transform="scale(1.000)" xlink:href="#pdg2" />
<g fill="green" mcviz:r="P1109_VN979_VN922" stroke="green" stroke-linecap="round" stroke-width="0.0470267476862" transform="scale(1.000)"><path d="M27.40 13.42 C27.40 13.42 27.19 13.24 26.93 13.76 C26.67 14.27 27.19 14.39 27.28 14.22 C27.37 14.05 26.96 13.70 26.70 14.21 C26.44 14.72 26.96 14.85 27.05 14.67 C27.14 14.50 26.73 14.15 26.47 14.67 C26.21 15.18 26.73 15.30 26.82 15.13 C26.90 14.96 26.50 14.61 26.24 15.12 C25.98 15.63 26.24 15.69 26.24 15.69" fill="none"/></g>
<g fill="red" mcviz:r="P1105_VN918_VN924" stroke="red" stroke-linecap="round" stroke-width="0.0786303173396" transform="scale(1.000)"><path d="M26.32 10.64 C26.18 10.67 25.85 10.76 25.62 10.95 C24.88 11.55 24.36 12.65 24.25 12.91" fill="none"/><path d="M24.93 11.70L25.08 11.31C25.11 11.38 25.20 11.45 25.27 11.46Z" stroke="none"/></g>
<use mcviz:r="P1105_VN918_VN924" x="26.055" y="11.531" transform="scale(1.000)" xlink:href="#pdg2" />
<g fill="blue" mcviz:r="P1112_VN922_VN926" stroke="blue" stroke-linecap="round" stroke-width="0.055893465418" transform="scale(1.000)"><path d="M26.19 15.81 C26.11 16.07 25.82 17.10 26.22 17.78 C26.34 17.98 26.53 17.85 26.68 18.03 C26.80 18.17 26.84 18.39 26.86 18.49" fill="none"/><path d="M26.09 17.52L25.90 17.15C25.96 17.18 26.08 17.15 26.13 17.10Z" stroke="none"/></g>
<use mcviz:r="P1112_VN922_VN926" x="26.670" y="17.158" transform="scale(1.000)" xlink:href="#pdg-2" />
<g fill="blue" mcviz:r="P1117_VN926_VN942" stroke="blue" stroke-linecap="round" stroke-width="0.0392984672199" transform="scale(1.000)"><path d="M26.86 18.62 C26.85 18.73 26.81 18.96 26.68 19.08 C26.35 19.39 25.97 18.98 25.69 19.33 C25.20 19.96 25.56 21.06 25.66 21.33" fill="none"/><path d="M25.48 19.73L25.54 19.32C25.58 19.38 25.69 19.43 25.76 19.42Z" stroke="none"/></g>
<use mcviz:r="P1117_VN926_VN942" x="26.143" y="19.991" transform="scale(1.000)" xlink:href="#pdg-2" />
<g fill="green" mcviz:r="P1137_VN979_VN944" stroke="green" stroke-linecap="round" stroke-width="0.0593670035947" transform="scale(1.000)"><path d="M27.62 13.47 C27.62 13.47 27.36 13.42 27.36 13.92 C27.36 14.41 27.89 14.30 27.89 14.14 C27.89 13.97 27.36 13.86 27.36 14.36 C27.36 14.86 27.89 14.75 27.89 14.58 C27.89 14.41 27.36 14.30 27.36 14.80 C27.36 15.30 27.89 15.19 27.89 15.02 C27.89 14.86 27.36 14.75 27.36 15.24 C27.36 15.74 27.62 15.68 27.62 15.68" fill="none"/></g>
<g fill="magenta" mcviz:r="P1047_VN880_VN946" stroke="magenta" stroke-linecap="round" stroke-width="0.10170766617" transform="scale(1.000)"><path d="M41.43 10.63 C41.43 10.63 41.63 10.85 41.63 10.85 C41.63 10.85 42.15 10.58 42.15 10.58 C42.15 10.58 42.53 11.02 42.53 11.02 C42.53 11.02 43.06 10.77 43.06 10.77 C43.06 10.77 43.43 11.22 43.43 11.22 C43.43 11.22 43.96 10.98 43.96 10.98 C43.96 10.98 44.32 11.45 44.32 11.45 C44.32 11.45 44.86 11.23 44.86 11.23 C44.86 11.23 45.19 11.71 45.19 11.71 C45.19 11.71 45.75 11.53 45.75 11.53 C45.75 11.53 46.04 12.04 46.04 12.04 C46.04 12.04 46.61 11.93 46.61 11.93 C46.61 11.93 46.80 12.48 46.80 12.48 C46.80 12.48 47.37 12.58 47.37 12.58 C47.37 12.58 47.13 13.12 47.13 13.12 C47.13 13.12 47.49 13.58 47.49 13.58 C47.49 13.58 47.13 14.04 47.13 14.04 C47.13 14.04 47.49 14.51 47.49 14.51 C47.49 14.51 47.13 14.97 47.13 14.97 C47.13 14.97 47.49 15.43 47.49 15.43 C47.49 15.43 47.13 15.89 47.13 15.89 C47.13 15.89 47.49 16.35 47.49 16.35 C47.49 16.35 47.13 16.81 47.13 16.81 C47.13 16.81 47.49 17.28 47.49 17.28 C47.49 17.28 47.13 17.74 47.13 17.74 C47.13 17.74 47.49 18.20 47.49 18.20 C47.49 18.20 47.13 18.66 47.13 18.66 C47.13 18.66 47.49 19.12 47.49 19.12 C47.49 19.12 47.13 19.59 47.13 19.59 C47.13 19.59 47.49 20.05 47.49 20.05 C47.49 20.05 47.13 20.51 47.13 20.51 C47.13 20.51 47.49 20.97 47.49 20.97 C47.49 20.97 47.13 21.43 47.13 21.43 C47.13 21.43 47.49 21.89 47.49 21.89 C47.49 21.89 47.13 22.36 47.13 22.36 C47.13 22.36 47.49 22.82 47.49 22.82 C47.49 22.82 47.13 23.28 47.13 23.28 C47.13 23.28 47.49 23.74 47.49 23.74 C47.49 23.74 47.13 24.20 47.13 24.20 C47.13 24.20 47.52 24.63 47.52 24.63 C47.52 24.63 47.33 25.18 47.33 25.18 C47.33 25.18 47.89 25.36 47.89 25.36 C47.89 25.36 47.97 25.94 47.97 25.94 C47.97 25.94 48.56 25.91 48.56 25.91 C48.56 25.91 48.79 26.45 48.79 26.45 C48.79 26.45 49.36 26.31 49.36 26.31 C49.36 26.31 49.66 26.81 49.66 26.81 C49.66 26.81 50.21 26.60 50.21 26.60 C50.21 26.60 50.57 27.06 50.57 27.06 C50.57 27.06 51.10 26.80 51.10 26.80 C51.10 26.80 51.29 27.02 51.29 27.02" fill="none"/></g>
<use mcviz:r="P1047_VN880_VN946" x="48.584" y="18.616" transform="scale(1.000)" xlink:href="#pdg-24" />
<g fill="green" mcviz:r="P913_VN1159_VN956" stroke="green" stroke-linecap="round" stroke-width="0.00550162385579" transform="scale(1.000)"><path d="M54.65 4.70 C54.65 4.70 54.39 4.70 54.50 5.23 C54.61 5.77 55.09 5.55 55.06 5.37 C55.02 5.19 54.49 5.17 54.59 5.71 C54.69 6.25 55.18 6.03 55.15 5.85 C55.11 5.67 54.58 5.64 54.68 6.18 C54.77 6.72 55.26 6.52 55.23 6.34 C55.20 6.16 54.67 6.12 54.76 6.66 C54.84 7.20 55.09 7.10 55.09 7.10" fill="none"/></g>
<g fill="blue" mcviz:r="P734_VN622_VN956" stroke="blue" stroke-linecap="round" stroke-width="0.0114035221934" transform="scale(1.000)"><path d="M55.49 5.41C55.42 5.70 55.17 6.83 55.11 7.11" fill="none"/><path d="M55.26 6.45L55.22 6.04C55.27 6.09 55.39 6.12 55.46 6.09Z" stroke="none"/></g>
<use mcviz:r="P734_VN622_VN956" x="55.740" y="6.200" transform="scale(1.000)" xlink:href="#pdg-3" />
<g fill="green" mcviz:r="P1095_VN911_VN963" stroke="green" stroke-linecap="round" stroke-width="0.0082829868138" transform="scale(1.000)"><path d="M42.21 15.77 C42.21 15.77 42.03 15.90 42.54 16.24 C43.04 16.58 43.22 16.13 43.07 16.00 C42.92 15.86 42.51 16.06 42.87 16.55 C43.24 17.03 43.54 16.70 43.45 16.52 C43.37 16.33 42.89 16.37 43.06 16.95 C43.23 17.54 43.66 17.30 43.63 17.10 C43.59 16.90 43.09 16.83 43.15 17.43 C43.20 18.04 43.68 17.88 43.68 17.68 C43.68 17.48 43.18 17.33 43.15 17.94 C43.13 18.55 43.36 18.49 43.36 18.49" fill="none"/></g>
<g fill="blue" mcviz:r="P1094_VN911_VN963" stroke="blue" stroke-linecap="round" stroke-width="0.0686745343338" transform="scale(1.000)"><path d="M42.13 15.81 C42.05 16.06 41.73 17.09 42.11 17.78 C42.38 18.26 43.09 18.49 43.29 18.54" fill="none"/><path d="M42.06 17.70L41.83 17.35C41.90 17.37 42.01 17.34 42.06 17.28Z" stroke="none"/></g>
<use mcviz:r="P1094_VN911_VN963" x="42.569" y="17.277" transform="scale(1.000)" xlink:href="#pdg-5" />
<g fill="red" mcviz:r="P1079_VN901_VN964" stroke="red" stroke-linecap="round" stroke-width="0.0399378847125" transform="scale(1.000)"><path d="M40.92 18.62 C40.87 18.97 40.66 20.63 41.00 21.92 C41.27 22.96 42.08 24.04 42.27 24.28" fill="none"/><path d="M40.97 21.81L40.78 21.44C40.84 21.47 40.96 21.45 41.01 21.40Z" stroke="none"/></g>
<use mcviz:r="P1079_VN901_VN964" x="41.441" y="21.454" transform="scale(1.000)" xlink:href="#pdg1" />
<g fill="green" mcviz:r="P1102_VN993_VN964" stroke="green" stroke-linecap="round" stroke-width="0.00777512304764" transform="scale(1.000)"><path d="M42.47 21.89 C42.47 21.89 42.21 21.81 42.18 22.35 C42.14 22.88 42.67 22.80 42.68 22.62 C42.69 22.44 42.18 22.29 42.14 22.82 C42.11 23.36 42.64 23.27 42.65 23.09 C42.66 22.92 42.15 22.76 42.11 23.30 C42.08 23.83 42.60 23.75 42.62 23.57 C42.63 23.39 42.12 23.24 42.08 23.77 C42.05 24.31 42.31 24.27 42.31 24.27" fill="none"/></g>
<g fill="red" mcviz:r="P1114_VN924_VN967" stroke="red" stroke-linecap="round" stroke-width="0.0526995428209" transform="scale(1.000)"><path d="M24.22 13.04 C24.20 13.37 24.09 14.97 23.85 16.25 C23.67 17.16 23.33 18.23 23.24 18.50" fill="none"/><path d="M23.89 16.00L23.84 15.58C23.89 15.63 24.01 15.65 24.08 15.62Z" stroke="none"/></g>
<use mcviz:r="P1114_VN924_VN967" x="24.431" y="15.698" transform="scale(1.000)" xlink:href="#pdg2" />
<g fill="green" mcviz:r="P1139_VN1002_VN967" stroke="green" stroke-linecap="round" stroke-width="0.0583584809263" transform="scale(1.000)"><path d="M23.22 16.25 C23.22 16.25 22.96 16.20 22.96 16.70 C22.96 17.20 23.48 17.09 23.48 16.92 C23.48 16.76 22.96 16.64 22.96 17.15 C22.96 17.65 23.48 17.54 23.48 17.37 C23.48 17.20 22.96 17.09 22.96 17.59 C22.96 18.10 23.48 17.99 23.48 17.82 C23.48 17.65 22.96 17.54 22.96 18.04 C22.96 18.55 23.22 18.49 23.22 18.49" fill="none"/></g>
<g fill="red" mcviz:r="P1144_VN944_VN968" stroke="red" stroke-linecap="round" stroke-width="0.0479827216208" transform="scale(1.000)"><path d="M27.61 15.81 C27.58 16.07 27.46 17.10 27.86 17.78 C28.11 18.20 28.69 18.46 28.87 18.53" fill="none"/><path d="M27.78 17.64L27.54 17.29C27.60 17.31 27.72 17.27 27.76 17.22Z" stroke="none"/></g>
<use mcviz:r="P1144_VN944_VN968" x="28.292" y="17.087" transform="scale(1.000)" xlink:href="#pdg2" />
<g fill="green" mcviz:r="P1129_VN979_VN968" stroke="green" stroke-linecap="round" stroke-width="0.0171363694543" transform="scale(1.000)"><path d="M27.81 13.44 C27.81 13.44 27.54 13.46 27.76 14.07 C27.98 14.69 28.42 14.38 28.35 14.17 C28.28 13.97 27.74 14.00 27.95 14.61 C28.15 15.23 28.60 14.93 28.53 14.73 C28.47 14.52 27.93 14.54 28.12 15.16 C28.31 15.78 28.76 15.50 28.70 15.29 C28.64 15.08 28.11 15.08 28.28 15.71 C28.45 16.33 28.91 16.06 28.85 15.85 C28.80 15.64 28.27 15.62 28.42 16.26 C28.56 16.89 29.03 16.64 28.99 16.43 C28.94 16.22 28.42 16.16 28.53 16.81 C28.63 17.45 29.11 17.23 29.08 17.02 C29.06 16.80 28.53 16.72 28.60 17.36 C28.67 18.01 29.16 17.82 29.14 17.60 C29.13 17.39 28.61 17.28 28.65 17.93 C28.68 18.58 28.93 18.49 28.93 18.49" fill="none"/></g>
<g fill="green" mcviz:r="P1106_VN918_VN979" stroke="green" stroke-linecap="round" stroke-width="0.0506563222067" transform="scale(1.000)"><path d="M26.41 10.68 C26.41 10.68 26.15 10.76 26.37 11.17 C26.59 11.59 27.00 11.25 26.93 11.11 C26.86 10.98 26.35 11.13 26.57 11.54 C26.79 11.96 27.20 11.62 27.13 11.48 C27.05 11.35 26.55 11.50 26.77 11.91 C26.99 12.33 27.40 11.99 27.32 11.85 C27.25 11.71 26.74 11.87 26.96 12.28 C27.18 12.70 27.39 12.53 27.39 12.53" fill="none"/></g>
<g fill="red" mcviz:r="P1170_VN968_VN981" stroke="red" stroke-linecap="round" stroke-width="0.0498352408013" transform="scale(1.000)"><path d="M28.92 18.62 C28.84 19.21 28.30 23.92 30.58 26.28 C31.03 26.74 31.76 26.91 32.25 26.98" fill="none"/><path d="M29.21 23.74L29.00 23.38C29.06 23.40 29.18 23.37 29.23 23.32Z" stroke="none"/></g>
<use mcviz:r="P1170_VN968_VN981" x="29.555" y="22.754" transform="scale(1.000)" xlink:href="#pdg2" />
<g fill="green" mcviz:r="P1184_VN979_VN981" stroke="green" stroke-linecap="round" stroke-width="0.0553530607532" transform="scale(1.000)"><path d="M28.10 13.14 C28.10 13.14 27.93 13.32 28.56 13.62 C29.19 13.92 29.28 13.40 29.07 13.29 C28.87 13.18 28.49 13.54 29.09 13.90 C29.69 14.25 29.82 13.75 29.63 13.62 C29.43 13.49 29.02 13.80 29.58 14.22 C30.13 14.65 30.32 14.17 30.15 14.02 C29.98 13.86 29.53 14.10 30.01 14.61 C30.48 15.12 30.74 14.70 30.61 14.51 C30.47 14.33 30.00 14.44 30.33 15.05 C30.67 15.67 31.01 15.35 30.93 15.13 C30.86 14.91 30.40 14.86 30.50 15.55 C30.60 16.24 31.04 16.05 31.04 15.82 C31.04 15.59 30.52 15.43 30.52 16.13 C30.52 16.83 31.04 16.67 31.04 16.44 C31.04 16.21 30.52 16.05 30.52 16.75 C30.52 17.45 31.04 17.29 31.04 17.06 C31.04 16.83 30.52 16.67 30.52 17.37 C30.52 18.07 31.04 17.92 31.04 17.68 C31.04 17.45 30.52 17.30 30.52 17.99 C30.52 18.69 31.04 18.53 31.04 18.30 C31.04 18.07 30.52 17.91 30.52 18.61 C30.52 19.31 31.04 19.15 31.04 18.92 C31.04 18.69 30.52 18.54 30.52 19.23 C30.52 19.93 31.04 19.78 31.04 19.54 C31.04 19.31 30.52 19.16 30.52 19.85 C30.52 20.55 31.04 20.40 31.04 20.16 C31.04 19.93 30.52 19.78 30.52 20.47 C30.52 21.17 31.04 21.02 31.04 20.78 C31.04 20.55 30.52 20.39 30.52 21.09 C30.52 21.79 31.04 21.64 31.04 21.40 C31.04 21.17 30.52 21.01 30.52 21.71 C30.52 22.41 31.04 22.26 31.04 22.02 C31.04 21.79 30.52 21.63 30.52 22.33 C30.52 23.03 31.04 22.88 31.04 22.64 C31.04 22.41 30.52 22.26 30.52 22.95 C30.52 23.65 31.04 23.50 31.04 23.26 C31.04 23.03 30.52 22.88 30.52 23.57 C30.52 24.27 31.04 24.12 31.04 23.88 C31.04 23.65 30.52 23.50 30.52 24.19 C30.52 24.89 31.07 24.71 31.05 24.48 C31.02 24.25 30.41 24.20 30.59 24.88 C30.77 25.55 31.28 25.21 31.18 25.00 C31.09 24.78 30.51 24.90 30.86 25.51 C31.20 26.11 31.60 25.68 31.46 25.49 C31.33 25.30 30.79 25.51 31.24 26.05 C31.68 26.59 31.99 26.11 31.83 25.94 C31.67 25.77 31.18 26.05 31.69 26.52 C32.19 27.00 32.34 26.74 32.34 26.74" fill="none"/></g>
<g fill="blue" mcviz:r="P1103_VN917_VN981" stroke="blue" stroke-linecap="round" stroke-width="0.0809171716373" transform="scale(1.000)"><path d="M26.43 9.27 C27.01 9.29 31.64 9.49 31.64 10.62 C31.64 10.62 31.64 10.62 31.64 15.75 C31.64 19.94 32.41 24.95 32.67 26.53" fill="none"/><path d="M31.64 16.01L31.52 15.61C31.58 15.65 31.70 15.65 31.76 15.61Z" stroke="none"/></g>
<use mcviz:r="P1103_VN917_VN981" x="32.138" y="17.277" transform="scale(1.000)" xlink:href="#pdg-1" />
<g fill="green" mcviz:r="P1080_VN901_VN993" stroke="green" stroke-linecap="round" stroke-width="0.0238745856317" transform="scale(1.000)"><path d="M40.96 18.61 C40.96 18.61 40.71 18.69 40.95 19.13 C41.19 19.56 41.59 19.21 41.51 19.07 C41.43 18.92 40.92 19.08 41.17 19.52 C41.41 19.95 41.81 19.60 41.73 19.46 C41.65 19.31 41.14 19.47 41.38 19.91 C41.62 20.34 42.02 19.99 41.94 19.85 C41.86 19.70 41.35 19.86 41.60 20.30 C41.84 20.73 42.24 20.38 42.16 20.24 C42.08 20.09 41.57 20.25 41.81 20.69 C42.06 21.12 42.26 20.95 42.26 20.95" fill="none"/></g>
<g fill="red" mcviz:r="P1166_VN964_VN995" stroke="red" stroke-linecap="round" stroke-width="0.040413344714" transform="scale(1.000)"><path d="M42.29 24.40 C42.24 24.64 42.09 25.57 42.32 26.28 C42.36 26.41 42.44 26.54 42.52 26.65" fill="none"/><path d="M42.21 25.75L42.07 25.36C42.14 25.39 42.26 25.39 42.31 25.35Z" stroke="none"/></g>
<use mcviz:r="P1166_VN964_VN995" x="42.760" y="25.815" transform="scale(1.000)" xlink:href="#pdg1" />
<g fill="green" mcviz:r="P1204_VN993_VN995" stroke="green" stroke-linecap="round" stroke-width="0.0277212470611" transform="scale(1.000)"><path d="M42.33 21.86 C42.33 21.86 42.08 21.72 41.92 22.33 C41.76 22.94 42.31 22.94 42.36 22.73 C42.40 22.53 41.92 22.27 41.79 22.89 C41.66 23.51 42.20 23.47 42.24 23.27 C42.28 23.06 41.78 22.83 41.68 23.46 C41.59 24.08 42.14 24.01 42.16 23.80 C42.19 23.60 41.67 23.40 41.62 24.03 C41.56 24.66 42.11 24.55 42.12 24.34 C42.13 24.13 41.59 23.98 41.59 24.61 C41.59 25.24 42.13 25.09 42.12 24.88 C42.11 24.67 41.56 24.57 41.62 25.20 C41.68 25.83 42.20 25.62 42.17 25.41 C42.14 25.20 41.57 25.17 41.71 25.78 C41.85 26.40 42.35 26.12 42.29 25.92 C42.23 25.72 41.66 25.77 41.89 26.36 C42.12 26.94 42.45 26.72 42.45 26.72" fill="none"/></g>
<g fill="blue" mcviz:r="P1165_VN963_VN995" stroke="blue" stroke-linecap="round" stroke-width="0.0688204708346" transform="scale(1.000)"><path d="M43.36 18.62 C43.43 19.17 43.91 23.17 43.19 26.28 C43.17 26.38 43.13 26.49 43.09 26.59" fill="none"/><path d="M43.58 22.82L43.46 22.42C43.52 22.46 43.64 22.46 43.70 22.42Z" stroke="none"/></g>
<use mcviz:r="P1165_VN963_VN995" x="44.027" y="22.944" transform="scale(1.000)" xlink:href="#pdg-5" />
<ellipse cx="54.51" cy="4.22" fill="#22bb44" mcviz:r="VN1159" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="11.74" cy="24.33" fill="#22bb44" mcviz:r="VN1109" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="12.44" cy="22.81" fill="#22bb44" mcviz:r="VN1106" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="13.15" cy="12.97" fill="#22bb44" mcviz:r="VN1104" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="15.42" cy="24.33" fill="#22bb44" mcviz:r="VN1096" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="3.78" cy="24.33" fill="#22bb44" mcviz:r="VN1087" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="4.67" cy="22.81" fill="#22bb44" mcviz:r="VN1085" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="3.75" cy="4.22" fill="#22bb44" mcviz:r="VN1082" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="7.00" cy="24.33" fill="#22bb44" mcviz:r="VN1073" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="26.39" cy="24.33" fill="#22bb44" mcviz:r="VN1004" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="23.22" cy="15.75" fill="#22bb44" mcviz:r="VN1002" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="42.50" cy="21.39" fill="#22bb44" mcviz:r="VN993" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="27.62" cy="12.97" fill="#22bb44" mcviz:r="VN979" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="28.93" cy="18.56" fill="white" mcviz:r="VN968" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="23.22" cy="18.56" fill="white" mcviz:r="VN967" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="42.31" cy="24.33" fill="white" mcviz:r="VN964" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="43.35" cy="18.56" fill="white" mcviz:r="VN963" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="55.10" cy="7.17" fill="white" mcviz:r="VN956" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="51.35" cy="27.03" fill="white" mcviz:r="VN946" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="27.62" cy="15.75" fill="white" mcviz:r="VN944" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="25.68" cy="21.39" fill="white" mcviz:r="VN942" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="26.86" cy="18.56" fill="white" mcviz:r="VN926" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="24.22" cy="12.97" fill="white" mcviz:r="VN924" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="26.21" cy="15.75" fill="white" mcviz:r="VN922" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="26.38" cy="10.62" fill="white" mcviz:r="VN918" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="26.38" cy="9.26" fill="white" mcviz:r="VN917" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="42.15" cy="15.75" fill="white" mcviz:r="VN911" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="40.93" cy="18.56" fill="white" mcviz:r="VN901" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="40.93" cy="15.75" fill="white" mcviz:r="VN887" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="41.38" cy="12.97" fill="white" mcviz:r="VN881" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="41.38" cy="10.62" fill="white" mcviz:r="VN880" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="14.69" cy="21.39" fill="white" mcviz:r="VN870" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="15.78" cy="18.56" fill="white" mcviz:r="VN864" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="24.47" cy="7.17" fill="white" mcviz:r="VN863" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="2.15" cy="3.11" fill="white" mcviz:r="VN709" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="53.43" cy="3.11" fill="white" mcviz:r="VN708" rx="0.08" ry="0.08" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="55.50" cy="5.35" fill="white" mcviz:r="VN622" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="11.25" cy="21.39" fill="white" mcviz:r="VN397" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="11.61" cy="18.56" fill="white" mcviz:r="VN341" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="3.78" cy="21.39" fill="white" mcviz:r="VN339" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="5.10" cy="18.56" fill="white" mcviz:r="VN267" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="3.75" cy="15.75" fill="white" mcviz:r="VN226" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="7.00" cy="21.39" fill="white" mcviz:r="VN214" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="11.61" cy="15.75" fill="white" mcviz:r="VN48" rx="0.06" ry="0.06" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="2.15" cy="0.50" fill="cyan" mcviz:r="VN1813" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="53.43" cy="0.50" fill="cyan" mcviz:r="VN1812" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="24.47" cy="5.35" fill="white" mcviz:r="VN3" rx="0.10" ry="0.10" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="55.15" cy="27.03" fill="white" mcviz:r="VN1161" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="12.62" cy="27.03" fill="white" mcviz:r="VN1111" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="2.57" cy="27.03" fill="white" mcviz:r="VN1089" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="22.69" cy="27.03" fill="white" mcviz:r="VN1006" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="42.85" cy="27.03" fill="white" mcviz:r="VN995" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
<ellipse cx="32.75" cy="27.03" fill="white" mcviz:r="VN981" rx="0.50" ry="0.50" stroke="black" stroke-width="0.05" transform="scale(1.000)"/>
</g>
<script type="text/javascript"><![CDATA[
/*!
 * jQuery JavaScript Library v1.7.1
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Mon Nov 21 21:11:03 2011 -0500
 */
(function( window, undefined ) {

// Use the correct document accordingly with window argument (sandbox)
var document = window.document,
	navigator = window.navigator,
	location = window.location;
var jQuery = (function() {

// Define a local copy of jQuery
var jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context, rootjQuery );
	},

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	quickExpr = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,

	// Check if a string has a non-whitespace character in it
	rnotwhite = /\S/,

	// Used for trimming whitespace
	trimLeft = /^\s+/,
	trimRight = /\s+$/,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// JSON RegExp
	rvalidchars = /^[\],:{}\s]*$/,
	rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
	rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
	rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,

	// Useragent RegExp
	rwebkit = /(webkit)[ \/]([\w.]+)/,
	ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
	rmsie = /(msie) ([\w.]+)/,
	rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,

	// Matches dashed string for camelizing
	rdashAlpha = /-([a-z]|[0-9])/ig,
	rmsPrefix = /^-ms-/,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return ( letter + "" ).toUpperCase();
	},

	// Keep a UserAgent string for use with jQuery.browser
	userAgent = navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,

	// The deferred used on DOM ready
	readyList,

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString = Object.prototype.toString,
	hasOwn = Object.prototype.hasOwnProperty,
	push = Array.prototype.push,
	slice = Array.prototype.slice,
	trim = String.prototype.trim,
	indexOf = Array.prototype.indexOf,

	// [[Class]] -> type pairs
	class2type = {};

jQuery.fn = jQuery.prototype = {
	constructor: jQuery,
	init: function( selector, context, rootjQuery ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// The body element only exists once, optimize finding it
		if ( selector === "body" && !context && document.body ) {
			this.context = document;
			this[0] = document.body;
			this.selector = selector;
			this.length = 1;
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			// Are we dealing with HTML string or an ID?
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = quickExpr.exec( selector );
			}

			// Verify a match, and that no context was specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;
					doc = ( context ? context.ownerDocument || context : document );

					// If a single string is passed in and it's a single tag
					// just do a createElement and skip the rest
					ret = rsingleTag.exec( selector );

					if ( ret ) {
						if ( jQuery.isPlainObject( context ) ) {
							selector = [ document.createElement( ret[1] ) ];
							jQuery.fn.attr.call( selector, context, true );

						} else {
							selector = [ doc.createElement( ret[1] ) ];
						}

					} else {
						ret = jQuery.buildFragment( [ match[1] ], [ doc ] );
						selector = ( ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment ).childNodes;
					}

					return jQuery.merge( this, selector );

				// HANDLE: $("#id")
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return rootjQuery.ready( selector );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	},

	// Start with an empty selector
	selector: "",

	// The current version of jQuery being used
	jquery: "1.7.1",

	// The default length of a jQuery object is 0
	length: 0,

	// The number of elements contained in the matched element set
	size: function() {
		return this.length;
	},

	toArray: function() {
		return slice.call( this, 0 );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num == null ?

			// Return a 'clean' array
			this.toArray() :

			// Return just the object
			( num < 0 ? this[ this.length + num ] : this[ num ] );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems, name, selector ) {
		// Build a new jQuery matched element set
		var ret = this.constructor();

		if ( jQuery.isArray( elems ) ) {
			push.apply( ret, elems );

		} else {
			jQuery.merge( ret, elems );
		}

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		ret.context = this.context;

		if ( name === "find" ) {
			ret.selector = this.selector + ( this.selector ? " " : "" ) + selector;
		} else if ( name ) {
			ret.selector = this.selector + "." + name + "(" + selector + ")";
		}

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	ready: function( fn ) {
		// Attach the listeners
		jQuery.bindReady();

		// Add the callback
		readyList.add( fn );

		return this;
	},

	eq: function( i ) {
		i = +i;
		return i === -1 ?
			this.slice( i ) :
			this.slice( i, i + 1 );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ),
			"slice", slice.call(arguments).join(",") );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: [].sort,
	splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( length === i ) {
		target = this;
		--i;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	noConflict: function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	},

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {
		// Either a released hold or an DOMready/load event and not yet ready
		if ( (wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady) ) {
			// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
			if ( !document.body ) {
				return setTimeout( jQuery.ready, 1 );
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.fireWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.trigger ) {
				jQuery( document ).trigger( "ready" ).off( "ready" );
			}
		}
	},

	bindReady: function() {
		if ( readyList ) {
			return;
		}

		readyList = jQuery.Callbacks( "once memory" );

		// Catch cases where $(document).ready() is called after the
		// browser event has already occurred.
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			return setTimeout( jQuery.ready, 1 );
		}

		// Mozilla, Opera and webkit nightlies currently support this event
		if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", DOMContentLoaded, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", jQuery.ready, false );

		// If IE event model is used
		} else if ( document.attachEvent ) {
			// ensure firing before onload,
			// maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", DOMContentLoaded );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", jQuery.ready );

			// If IE and not a frame
			// continually check to see if the document is ready
			var toplevel = false;

			try {
				toplevel = window.frameElement == null;
			} catch(e) {}

			if ( document.documentElement.doScroll && toplevel ) {
				doScrollCheck();
			}
		}
	},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	// A crude way of determining if an object is a window
	isWindow: function( obj ) {
		return obj && typeof obj === "object" && "setInterval" in obj;
	},

	isNumeric: function( obj ) {
		return !isNaN( parseFloat(obj) ) && isFinite( obj );
	},

	type: function( obj ) {
		return obj == null ?
			String( obj ) :
			class2type[ toString.call(obj) ] || "object";
	},

	isPlainObject: function( obj ) {
		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.

		var key;
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	isEmptyObject: function( obj ) {
		for ( var name in obj ) {
			return false;
		}
		return true;
	},

	error: function( msg ) {
		throw new Error( msg );
	},

	parseJSON: function( data ) {
		if ( typeof data !== "string" || !data ) {
			return null;
		}

		// Make sure leading/trailing whitespace is removed (IE can't handle it)
		data = jQuery.trim( data );

		// Attempt to parse using the native JSON parser first
		if ( window.JSON && window.JSON.parse ) {
			return window.JSON.parse( data );
		}

		// Make sure the incoming data is actual JSON
		// Logic borrowed from http://json.org/json2.js
		if ( rvalidchars.test( data.replace( rvalidescape, "@" )
			.replace( rvalidtokens, "]" )
			.replace( rvalidbraces, "")) ) {

			return ( new Function( "return " + data ) )();

		}
		jQuery.error( "Invalid JSON: " + data );
	},

	// Cross-browser xml parsing
	parseXML: function( data ) {
		var xml, tmp;
		try {
			if ( window.DOMParser ) { // Standard
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} else { // IE
				xml = new ActiveXObject( "Microsoft.XMLDOM" );
				xml.async = "false";
				xml.loadXML( data );
			}
		} catch( e ) {
			xml = undefined;
		}
		if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	},

	noop: function() {},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && rnotwhite.test( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase();
	},

	// args is for internal usage only
	each: function( object, callback, args ) {
		var name, i = 0,
			length = object.length,
			isObj = length === undefined || jQuery.isFunction( object );

		if ( args ) {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.apply( object[ name ], args ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.apply( object[ i++ ], args ) === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isObj ) {
				for ( name in object ) {
					if ( callback.call( object[ name ], name, object[ name ] ) === false ) {
						break;
					}
				}
			} else {
				for ( ; i < length; ) {
					if ( callback.call( object[ i ], i, object[ i++ ] ) === false ) {
						break;
					}
				}
			}
		}

		return object;
	},

	// Use native String.trim function wherever possible
	trim: trim ?
		function( text ) {
			return text == null ?
				"" :
				trim.call( text );
		} :

		// Otherwise use our own trimming functionality
		function( text ) {
			return text == null ?
				"" :
				text.toString().replace( trimLeft, "" ).replace( trimRight, "" );
		},

	// results is for internal usage only
	makeArray: function( array, results ) {
		var ret = results || [];

		if ( array != null ) {
			// The window, strings (and functions) also have 'length'
			// Tweaked logic slightly to handle Blackberry 4.7 RegExp issues #6930
			var type = jQuery.type( array );

			if ( array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow( array ) ) {
				push.call( ret, array );
			} else {
				jQuery.merge( ret, array );
			}
		}

		return ret;
	},

	inArray: function( elem, array, i ) {
		var len;

		if ( array ) {
			if ( indexOf ) {
				return indexOf.call( array, elem, i );
			}

			len = array.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in array && array[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var i = first.length,
			j = 0;

		if ( typeof second.length === "number" ) {
			for ( var l = second.length; j < l; j++ ) {
				first[ i++ ] = second[ j ];
			}

		} else {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, inv ) {
		var ret = [], retVal;
		inv = !!inv;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( var i = 0, length = elems.length; i < length; i++ ) {
			retVal = !!callback( elems[ i ], i );
			if ( inv !== retVal ) {
				ret.push( elems[ i ] );
			}
		}

		return ret;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value, key, ret = [],
			i = 0,
			length = elems.length,
			// jquery objects are treated as arrays
			isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ( ( length > 0 && elems[ 0 ] && elems[ length -1 ] ) || length === 0 || jQuery.isArray( elems ) ) ;

		// Go through the array, translating each of the items to their
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}

		// Go through every key on the object,
		} else {
			for ( key in elems ) {
				value = callback( elems[ key ], key, arg );

				if ( value != null ) {
					ret[ ret.length ] = value;
				}
			}
		}

		// Flatten any nested arrays
		return ret.concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		if ( typeof context === "string" ) {
			var tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		var args = slice.call( arguments, 2 ),
			proxy = function() {
				return fn.apply( context, args.concat( slice.call( arguments ) ) );
			};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;

		return proxy;
	},

	// Mutifunctional method to get and set values to a collection
	// The value/s can optionally be executed if it's a function
	access: function( elems, key, value, exec, fn, pass ) {
		var length = elems.length;

		// Setting many attributes
		if ( typeof key === "object" ) {
			for ( var k in key ) {
				jQuery.access( elems, k, key[k], exec, fn, value );
			}
			return elems;
		}

		// Setting one attribute
		if ( value !== undefined ) {
			// Optionally, function values get executed if exec is true
			exec = !pass && exec && jQuery.isFunction(value);

			for ( var i = 0; i < length; i++ ) {
				fn( elems[i], key, exec ? value.call( elems[i], i, fn( elems[i], key ) ) : value, pass );
			}

			return elems;
		}

		// Getting an attribute
		return length ? fn( elems[0], key ) : undefined;
	},

	now: function() {
		return ( new Date() ).getTime();
	},

	// Use of jQuery.browser is frowned upon.
	// More details: http://docs.jquery.com/Utilities/jQuery.browser
	uaMatch: function( ua ) {
		ua = ua.toLowerCase();

		var match = rwebkit.exec( ua ) ||
			ropera.exec( ua ) ||
			rmsie.exec( ua ) ||
			ua.indexOf("compatible") < 0 && rmozilla.exec( ua ) ||
			[];

		return { browser: match[1] || "", version: match[2] || "0" };
	},

	sub: function() {
		function jQuerySub( selector, context ) {
			return new jQuerySub.fn.init( selector, context );
		}
		jQuery.extend( true, jQuerySub, this );
		jQuerySub.superclass = this;
		jQuerySub.fn = jQuerySub.prototype = this();
		jQuerySub.fn.constructor = jQuerySub;
		jQuerySub.sub = this.sub;
		jQuerySub.fn.init = function init( selector, context ) {
			if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
				context = jQuerySub( context );
			}

			return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
		};
		jQuerySub.fn.init.prototype = jQuerySub.fn;
		var rootjQuerySub = jQuerySub(document);
		return jQuerySub;
	},

	browser: {}
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

browserMatch = jQuery.uaMatch( userAgent );
if ( browserMatch.browser ) {
	jQuery.browser[ browserMatch.browser ] = true;
	jQuery.browser.version = browserMatch.version;
}

// Deprecated, use jQuery.browser.webkit instead
if ( jQuery.browser.webkit ) {
	jQuery.browser.safari = true;
}

// IE doesn't match non-breaking spaces with \s
if ( rnotwhite.test( "\xA0" ) ) {
	trimLeft = /^[\s\xA0]+/;
	trimRight = /[\s\xA0]+$/;
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);

// Cleanup functions for the document ready method
if ( document.addEventListener ) {
	DOMContentLoaded = function() {
		document.removeEventListener( "DOMContentLoaded", DOMContentLoaded, false );
		jQuery.ready();
	};

} else if ( document.attachEvent ) {
	DOMContentLoaded = function() {
		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( document.readyState === "complete" ) {
			document.detachEvent( "onreadystatechange", DOMContentLoaded );
			jQuery.ready();
		}
	};
}

// The DOM ready check for Internet Explorer
function doScrollCheck() {
	if ( jQuery.isReady ) {
		return;
	}

	try {
		// If IE is used, use the trick by Diego Perini
		// http://javascript.nwbox.com/IEContentLoaded/
		document.documentElement.doScroll("left");
	} catch(e) {
		setTimeout( doScrollCheck, 1 );
		return;
	}

	// and execute any waiting functions
	jQuery.ready();
}

return jQuery;

})();


// String to Object flags format cache
var flagsCache = {};

// Convert String-formatted flags into Object-formatted ones and store in cache
function createFlags( flags ) {
	var object = flagsCache[ flags ] = {},
		i, length;
	flags = flags.split( /\s+/ );
	for ( i = 0, length = flags.length; i < length; i++ ) {
		object[ flags[i] ] = true;
	}
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	flags:	an optional list of space-separated flags that will change how
 *			the callback list behaves
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible flags:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( flags ) {

	// Convert flags from String-formatted to Object-formatted
	// (we check in cache first)
	flags = flags ? ( flagsCache[ flags ] || createFlags( flags ) ) : {};

	var // Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = [],
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Add one or several callbacks to the list
		add = function( args ) {
			var i,
				length,
				elem,
				type,
				actual;
			for ( i = 0, length = args.length; i < length; i++ ) {
				elem = args[ i ];
				type = jQuery.type( elem );
				if ( type === "array" ) {
					// Inspect recursively
					add( elem );
				} else if ( type === "function" ) {
					// Add if not in unique mode and callback is not in
					if ( !flags.unique || !self.has( elem ) ) {
						list.push( elem );
					}
				}
			}
		},
		// Fire callbacks
		fire = function( context, args ) {
			args = args || [];
			memory = !flags.memory || [ context, args ];
			firing = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( context, args ) === false && flags.stopOnFalse ) {
					memory = true; // Mark as halted
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( !flags.once ) {
					if ( stack && stack.length ) {
						memory = stack.shift();
						self.fireWith( memory[ 0 ], memory[ 1 ] );
					}
				} else if ( memory === true ) {
					self.disable();
				} else {
					list = [];
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					var length = list.length;
					add( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away, unless previous
					// firing was halted (stopOnFalse)
					} else if ( memory && memory !== true ) {
						firingStart = length;
						fire( memory[ 0 ], memory[ 1 ] );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					var args = arguments,
						argIndex = 0,
						argLength = args.length;
					for ( ; argIndex < argLength ; argIndex++ ) {
						for ( var i = 0; i < list.length; i++ ) {
							if ( args[ argIndex ] === list[ i ] ) {
								// Handle firingIndex and firingLength
								if ( firing ) {
									if ( i <= firingLength ) {
										firingLength--;
										if ( i <= firingIndex ) {
											firingIndex--;
										}
									}
								}
								// Remove the element
								list.splice( i--, 1 );
								// If we have some unicity property then
								// we only need to do this once
								if ( flags.unique ) {
									break;
								}
							}
						}
					}
				}
				return this;
			},
			// Control if a given callback is in the list
			has: function( fn ) {
				if ( list ) {
					var i = 0,
						length = list.length;
					for ( ; i < length; i++ ) {
						if ( fn === list[ i ] ) {
							return true;
						}
					}
				}
				return false;
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory || memory === true ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( stack ) {
					if ( firing ) {
						if ( !flags.once ) {
							stack.push( [ context, args ] );
						}
					} else if ( !( flags.once && memory ) ) {
						fire( context, args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!memory;
			}
		};

	return self;
};




var // Static reference to slice
	sliceDeferred = [].slice;

jQuery.extend({

	Deferred: function( func ) {
		var doneList = jQuery.Callbacks( "once memory" ),
			failList = jQuery.Callbacks( "once memory" ),
			progressList = jQuery.Callbacks( "memory" ),
			state = "pending",
			lists = {
				resolve: doneList,
				reject: failList,
				notify: progressList
			},
			promise = {
				done: doneList.add,
				fail: failList.add,
				progress: progressList.add,

				state: function() {
					return state;
				},

				// Deprecated
				isResolved: doneList.fired,
				isRejected: failList.fired,

				then: function( doneCallbacks, failCallbacks, progressCallbacks ) {
					deferred.done( doneCallbacks ).fail( failCallbacks ).progress( progressCallbacks );
					return this;
				},
				always: function() {
					deferred.done.apply( deferred, arguments ).fail.apply( deferred, arguments );
					return this;
				},
				pipe: function( fnDone, fnFail, fnProgress ) {
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( {
							done: [ fnDone, "resolve" ],
							fail: [ fnFail, "reject" ],
							progress: [ fnProgress, "notify" ]
						}, function( handler, data ) {
							var fn = data[ 0 ],
								action = data[ 1 ],
								returned;
							if ( jQuery.isFunction( fn ) ) {
								deferred[ handler ](function() {
									returned = fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise().then( newDefer.resolve, newDefer.reject, newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === deferred ? newDefer : this, [ returned ] );
									}
								});
							} else {
								deferred[ handler ]( newDefer[ action ] );
							}
						});
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					if ( obj == null ) {
						obj = promise;
					} else {
						for ( var key in promise ) {
							obj[ key ] = promise[ key ];
						}
					}
					return obj;
				}
			},
			deferred = promise.promise({}),
			key;

		for ( key in lists ) {
			deferred[ key ] = lists[ key ].fire;
			deferred[ key + "With" ] = lists[ key ].fireWith;
		}

		// Handle state
		deferred.done( function() {
			state = "resolved";
		}, failList.disable, progressList.lock ).fail( function() {
			state = "rejected";
		}, doneList.disable, progressList.lock );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( firstParam ) {
		var args = sliceDeferred.call( arguments, 0 ),
			i = 0,
			length = args.length,
			pValues = new Array( length ),
			count = length,
			pCount = length,
			deferred = length <= 1 && firstParam && jQuery.isFunction( firstParam.promise ) ?
				firstParam :
				jQuery.Deferred(),
			promise = deferred.promise();
		function resolveFunc( i ) {
			return function( value ) {
				args[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				if ( !( --count ) ) {
					deferred.resolveWith( deferred, args );
				}
			};
		}
		function progressFunc( i ) {
			return function( value ) {
				pValues[ i ] = arguments.length > 1 ? sliceDeferred.call( arguments, 0 ) : value;
				deferred.notifyWith( promise, pValues );
			};
		}
		if ( length > 1 ) {
			for ( ; i < length; i++ ) {
				if ( args[ i ] && args[ i ].promise && jQuery.isFunction( args[ i ].promise ) ) {
					args[ i ].promise().then( resolveFunc(i), deferred.reject, progressFunc(i) );
				} else {
					--count;
				}
			}
			if ( !count ) {
				deferred.resolveWith( deferred, args );
			}
		} else if ( deferred !== firstParam ) {
			deferred.resolveWith( deferred, length ? [ firstParam ] : [] );
		}
		return promise;
	}
});




jQuery.support = (function() {

	var support,
		all,
		a,
		select,
		opt,
		input,
		marginDiv,
		fragment,
		tds,
		events,
		eventName,
		i,
		isSupported,
		div = document.createElement( "div" ),
		documentElement = document.documentElement;

	// Preliminary tests
	div.setAttribute("className", "t");
	div.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";

	all = div.getElementsByTagName( "*" );
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Can't get basic test support
	if ( !all || !all.length || !a ) {
		return {};
	}

	// First batch of supports tests
	select = document.createElement( "select" );
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName( "input" )[ 0 ];

	support = {
		// IE strips leading whitespace when .innerHTML is used
		leadingWhitespace: ( div.firstChild.nodeType === 3 ),

		// Make sure that tbody elements aren't automatically inserted
		// IE will insert them into empty tables
		tbody: !div.getElementsByTagName("tbody").length,

		// Make sure that link elements get serialized correctly by innerHTML
		// This requires a wrapper element in IE
		htmlSerialize: !!div.getElementsByTagName("link").length,

		// Get the style information from getAttribute
		// (IE uses .cssText instead)
		style: /top/.test( a.getAttribute("style") ),

		// Make sure that URLs aren't manipulated
		// (IE normalizes it by default)
		hrefNormalized: ( a.getAttribute("href") === "/a" ),

		// Make sure that element opacity exists
		// (IE uses filter instead)
		// Use a regex to work around a WebKit issue. See #5145
		opacity: /^0.55/.test( a.style.opacity ),

		// Verify style float existence
		// (IE uses styleFloat instead of cssFloat)
		cssFloat: !!a.style.cssFloat,

		// Make sure that if no value is specified for a checkbox
		// that it defaults to "on".
		// (WebKit defaults to "" instead)
		checkOn: ( input.value === "on" ),

		// Make sure that a selected-by-default option has a working selected property.
		// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
		optSelected: opt.selected,

		// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
		getSetAttribute: div.className !== "t",

		// Tests for enctype support on a form(#6743)
		enctype: !!document.createElement("form").enctype,

		// Makes sure cloning an html5 element does not cause problems
		// Where outerHTML is undefined, this still works
		html5Clone: document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>",

		// Will be defined later
		submitBubbles: true,
		changeBubbles: true,
		focusinBubbles: false,
		deleteExpando: true,
		noCloneEvent: true,
		inlineBlockNeedsLayout: false,
		shrinkWrapBlocks: false,
		reliableMarginRight: true
	};

	// Make sure checked status is properly cloned
	input.checked = true;
	support.noCloneChecked = input.cloneNode( true ).checked;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Test to see if it's possible to delete an expando from an element
	// Fails in Internet Explorer
	try {
		delete div.test;
	} catch( e ) {
		support.deleteExpando = false;
	}

	if ( !div.addEventListener && div.attachEvent && div.fireEvent ) {
		div.attachEvent( "onclick", function() {
			// Cloning a node shouldn't copy over any
			// bound event handlers (IE does this)
			support.noCloneEvent = false;
		});
		div.cloneNode( true ).fireEvent( "onclick" );
	}

	// Check if a radio maintains its value
	// after being appended to the DOM
	input = document.createElement("input");
	input.value = "t";
	input.setAttribute("type", "radio");
	support.radioValue = input.value === "t";

	input.setAttribute("checked", "checked");
	div.appendChild( input );
	fragment = document.createDocumentFragment();
	fragment.appendChild( div.lastChild );

	// WebKit doesn't clone checked state correctly in fragments
	support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	support.appendChecked = input.checked;

	fragment.removeChild( input );
	fragment.appendChild( div );

	div.innerHTML = "";

	// Check if div with explicit width and no margin-right incorrectly
	// gets computed margin-right based on width of container. For more
	// info see bug #3333
	// Fails in WebKit before Feb 2011 nightlies
	// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
	if ( window.getComputedStyle ) {
		marginDiv = document.createElement( "div" );
		marginDiv.style.width = "0";
		marginDiv.style.marginRight = "0";
		div.style.width = "2px";
		div.appendChild( marginDiv );
		support.reliableMarginRight =
			( parseInt( ( window.getComputedStyle( marginDiv, null ) || { marginRight: 0 } ).marginRight, 10 ) || 0 ) === 0;
	}

	// Technique from Juriy Zaytsev
	// http://perfectionkills.com/detecting-event-support-without-browser-sniffing/
	// We only care about the case where non-standard event systems
	// are used, namely in IE. Short-circuiting here helps us to
	// avoid an eval call (in setAttribute) which can cause CSP
	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
	if ( div.attachEvent ) {
		for( i in {
			submit: 1,
			change: 1,
			focusin: 1
		}) {
			eventName = "on" + i;
			isSupported = ( eventName in div );
			if ( !isSupported ) {
				div.setAttribute( eventName, "return;" );
				isSupported = ( typeof div[ eventName ] === "function" );
			}
			support[ i + "Bubbles" ] = isSupported;
		}
	}

	fragment.removeChild( div );

	// Null elements to avoid leaks in IE
	fragment = select = opt = marginDiv = div = input = null;

	// Run tests that need a body at doc ready
	jQuery(function() {
		var container, outer, inner, table, td, offsetSupport,
			conMarginTop, ptlm, vb, style, html,
			body = document.getElementsByTagName("body")[0];

		if ( !body ) {
			// Return for frameset docs that don't have a body
			return;
		}

		conMarginTop = 1;
		ptlm = "position:absolute;top:0;left:0;width:1px;height:1px;margin:0;";
		vb = "visibility:hidden;border:0;";
		style = "style='" + ptlm + "border:5px solid #000;padding:0;'";
		html = "<div " + style + "><div></div></div>" +
			"<table " + style + " cellpadding='0' cellspacing='0'>" +
			"<tr><td></td></tr></table>";

		container = document.createElement("div");
		container.style.cssText = vb + "width:0;height:0;position:static;top:0;margin-top:" + conMarginTop + "px";
		body.insertBefore( container, body.firstChild );

		// Construct the test element
		div = document.createElement("div");
		container.appendChild( div );

		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		// (only IE 8 fails this test)
		div.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
		tds = div.getElementsByTagName( "td" );
		isSupported = ( tds[ 0 ].offsetHeight === 0 );

		tds[ 0 ].style.display = "";
		tds[ 1 ].style.display = "none";

		// Check if empty table cells still have offsetWidth/Height
		// (IE <= 8 fail this test)
		support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

		// Figure out if the W3C box model works as expected
		div.innerHTML = "";
		div.style.width = div.style.paddingLeft = "1px";
		jQuery.boxModel = support.boxModel = div.offsetWidth === 2;

		if ( typeof div.style.zoom !== "undefined" ) {
			// Check if natively block-level elements act like inline-block
			// elements when setting their display to 'inline' and giving
			// them layout
			// (IE < 8 does this)
			div.style.display = "inline";
			div.style.zoom = 1;
			support.inlineBlockNeedsLayout = ( div.offsetWidth === 2 );

			// Check if elements with layout shrink-wrap their children
			// (IE 6 does this)
			div.style.display = "";
			div.innerHTML = "<div style='width:4px;'></div>";
			support.shrinkWrapBlocks = ( div.offsetWidth !== 2 );
		}

		div.style.cssText = ptlm + vb;
		div.innerHTML = html;

		outer = div.firstChild;
		inner = outer.firstChild;
		td = outer.nextSibling.firstChild.firstChild;

		offsetSupport = {
			doesNotAddBorder: ( inner.offsetTop !== 5 ),
			doesAddBorderForTableAndCells: ( td.offsetTop === 5 )
		};

		inner.style.position = "fixed";
		inner.style.top = "20px";

		// safari subtracts parent border width here which is 5px
		offsetSupport.fixedPosition = ( inner.offsetTop === 20 || inner.offsetTop === 15 );
		inner.style.position = inner.style.top = "";

		outer.style.overflow = "hidden";
		outer.style.position = "relative";

		offsetSupport.subtractsBorderForOverflowNotVisible = ( inner.offsetTop === -5 );
		offsetSupport.doesNotIncludeMarginInBodyOffset = ( body.offsetTop !== conMarginTop );

		body.removeChild( container );
		div  = container = null;

		jQuery.extend( support, offsetSupport );
	});

	return support;
})();




var rbrace = /^(?:\{.*\}|\[.*\])$/,
	rmultiDash = /([A-Z])/g;

jQuery.extend({
	cache: {},

	// Please use with caution
	uuid: 0,

	// Unique for each copy of jQuery on the page
	// Non-digits removed to match rinlinejQuery
	expando: "jQuery" + ( jQuery.fn.jquery + Math.random() ).replace( /\D/g, "" ),

	// The following elements throw uncatchable exceptions if you
	// attempt to add expando properties to them.
	noData: {
		"embed": true,
		// Ban all objects except for Flash (which handle expandos)
		"object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
		"applet": true
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var privateCache, thisCache, ret,
			internalKey = jQuery.expando,
			getByName = typeof name === "string",

			// We have to handle DOM nodes and JS objects differently because IE6-7
			// can't GC object references properly across the DOM-JS boundary
			isNode = elem.nodeType,

			// Only DOM nodes need the global jQuery cache; JS object data is
			// attached directly to the object so GC can occur automatically
			cache = isNode ? jQuery.cache : elem,

			// Only defining an ID for JS objects if its cache already exists allows
			// the code to shortcut on the same path as a DOM node with no cache
			id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey,
			isEvents = name === "events";

		// Avoid doing any more work than we need to when trying to get data on an
		// object that has no data at all
		if ( (!id || !cache[id] || (!isEvents && !pvt && !cache[id].data)) && getByName && data === undefined ) {
			return;
		}

		if ( !id ) {
			// Only DOM nodes need a new unique ID for each element since their data
			// ends up in the global cache
			if ( isNode ) {
				elem[ internalKey ] = id = ++jQuery.uuid;
			} else {
				id = internalKey;
			}
		}

		if ( !cache[ id ] ) {
			cache[ id ] = {};

			// Avoids exposing jQuery metadata on plain JS objects when the object
			// is serialized using JSON.stringify
			if ( !isNode ) {
				cache[ id ].toJSON = jQuery.noop;
			}
		}

		// An object can be passed to jQuery.data instead of a key/value pair; this gets
		// shallow copied over onto the existing cache
		if ( typeof name === "object" || typeof name === "function" ) {
			if ( pvt ) {
				cache[ id ] = jQuery.extend( cache[ id ], name );
			} else {
				cache[ id ].data = jQuery.extend( cache[ id ].data, name );
			}
		}

		privateCache = thisCache = cache[ id ];

		// jQuery data() is stored in a separate object inside the object's internal data
		// cache in order to avoid key collisions between internal data and user-defined
		// data.
		if ( !pvt ) {
			if ( !thisCache.data ) {
				thisCache.data = {};
			}

			thisCache = thisCache.data;
		}

		if ( data !== undefined ) {
			thisCache[ jQuery.camelCase( name ) ] = data;
		}

		// Users should not attempt to inspect the internal events object using jQuery.data,
		// it is undocumented and subject to change. But does anyone listen? No.
		if ( isEvents && !thisCache[ name ] ) {
			return privateCache.events;
		}

		// Check for both converted-to-camel and non-converted data property names
		// If a data property was specified
		if ( getByName ) {

			// First Try to find as-is property data
			ret = thisCache[ name ];

			// Test for null|undefined property data
			if ( ret == null ) {

				// Try to find the camelCased property
				ret = thisCache[ jQuery.camelCase( name ) ];
			}
		} else {
			ret = thisCache;
		}

		return ret;
	},

	removeData: function( elem, name, pvt /* Internal Use Only */ ) {
		if ( !jQuery.acceptData( elem ) ) {
			return;
		}

		var thisCache, i, l,

			// Reference to internal data cache key
			internalKey = jQuery.expando,

			isNode = elem.nodeType,

			// See jQuery.data for more information
			cache = isNode ? jQuery.cache : elem,

			// See jQuery.data for more information
			id = isNode ? elem[ internalKey ] : internalKey;

		// If there is already no cache entry for this object, there is no
		// purpose in continuing
		if ( !cache[ id ] ) {
			return;
		}

		if ( name ) {

			thisCache = pvt ? cache[ id ] : cache[ id ].data;

			if ( thisCache ) {

				// Support array or space separated string names for data keys
				if ( !jQuery.isArray( name ) ) {

					// try the string as a key before any manipulation
					if ( name in thisCache ) {
						name = [ name ];
					} else {

						// split the camel cased version by spaces unless a key with the spaces exists
						name = jQuery.camelCase( name );
						if ( name in thisCache ) {
							name = [ name ];
						} else {
							name = name.split( " " );
						}
					}
				}

				for ( i = 0, l = name.length; i < l; i++ ) {
					delete thisCache[ name[i] ];
				}

				// If there is no data left in the cache, we want to continue
				// and let the cache object itself get destroyed
				if ( !( pvt ? isEmptyDataObject : jQuery.isEmptyObject )( thisCache ) ) {
					return;
				}
			}
		}

		// See jQuery.data for more information
		if ( !pvt ) {
			delete cache[ id ].data;

			// Don't destroy the parent cache unless the internal data object
			// had been the only thing left in it
			if ( !isEmptyDataObject(cache[ id ]) ) {
				return;
			}
		}

		// Browsers that fail expando deletion also refuse to delete expandos on
		// the window, but it will allow it on all other JS objects; other browsers
		// don't care
		// Ensure that `cache` is not a window object #10080
		if ( jQuery.support.deleteExpando || !cache.setInterval ) {
			delete cache[ id ];
		} else {
			cache[ id ] = null;
		}

		// We destroyed the cache and need to eliminate the expando on the node to avoid
		// false lookups in the cache for entries that no longer exist
		if ( isNode ) {
			// IE does not allow us to delete expando properties from nodes,
			// nor does it have a removeAttribute function on Document nodes;
			// we must handle all of these cases
			if ( jQuery.support.deleteExpando ) {
				delete elem[ internalKey ];
			} else if ( elem.removeAttribute ) {
				elem.removeAttribute( internalKey );
			} else {
				elem[ internalKey ] = null;
			}
		}
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return jQuery.data( elem, name, data, true );
	},

	// A method for determining if a DOM node can handle the data expando
	acceptData: function( elem ) {
		if ( elem.nodeName ) {
			var match = jQuery.noData[ elem.nodeName.toLowerCase() ];

			if ( match ) {
				return !(match === true || elem.getAttribute("classid") !== match);
			}
		}

		return true;
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var parts, attr, name,
			data = null;

		if ( typeof key === "undefined" ) {
			if ( this.length ) {
				data = jQuery.data( this[0] );

				if ( this[0].nodeType === 1 && !jQuery._data( this[0], "parsedAttrs" ) ) {
					attr = this[0].attributes;
					for ( var i = 0, l = attr.length; i < l; i++ ) {
						name = attr[i].name;

						if ( name.indexOf( "data-" ) === 0 ) {
							name = jQuery.camelCase( name.substring(5) );

							dataAttr( this[0], name, data[ name ] );
						}
					}
					jQuery._data( this[0], "parsedAttrs", true );
				}
			}

			return data;

		} else if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		parts = key.split(".");
		parts[1] = parts[1] ? "." + parts[1] : "";

		if ( value === undefined ) {
			data = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);

			// Try to fetch any internally stored data first
			if ( data === undefined && this.length ) {
				data = jQuery.data( this[0], key );
				data = dataAttr( this[0], key, data );
			}

			return data === undefined && parts[1] ?
				this.data( parts[0] ) :
				data;

		} else {
			return this.each(function() {
				var self = jQuery( this ),
					args = [ parts[0], value ];

				self.triggerHandler( "setData" + parts[1] + "!", args );
				jQuery.data( this, key, value );
				self.triggerHandler( "changeData" + parts[1] + "!", args );
			});
		}
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
				data === "false" ? false :
				data === "null" ? null :
				jQuery.isNumeric( data ) ? parseFloat( data ) :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	for ( var name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}




function handleQueueMarkDefer( elem, type, src ) {
	var deferDataKey = type + "defer",
		queueDataKey = type + "queue",
		markDataKey = type + "mark",
		defer = jQuery._data( elem, deferDataKey );
	if ( defer &&
		( src === "queue" || !jQuery._data(elem, queueDataKey) ) &&
		( src === "mark" || !jQuery._data(elem, markDataKey) ) ) {
		// Give room for hard-coded callbacks to fire first
		// and eventually mark/queue something else on the element
		setTimeout( function() {
			if ( !jQuery._data( elem, queueDataKey ) &&
				!jQuery._data( elem, markDataKey ) ) {
				jQuery.removeData( elem, deferDataKey, true );
				defer.fire();
			}
		}, 0 );
	}
}

jQuery.extend({

	_mark: function( elem, type ) {
		if ( elem ) {
			type = ( type || "fx" ) + "mark";
			jQuery._data( elem, type, (jQuery._data( elem, type ) || 0) + 1 );
		}
	},

	_unmark: function( force, elem, type ) {
		if ( force !== true ) {
			type = elem;
			elem = force;
			force = false;
		}
		if ( elem ) {
			type = type || "fx";
			var key = type + "mark",
				count = force ? 0 : ( (jQuery._data( elem, key ) || 1) - 1 );
			if ( count ) {
				jQuery._data( elem, key, count );
			} else {
				jQuery.removeData( elem, key, true );
				handleQueueMarkDefer( elem, type, "mark" );
			}
		}
	},

	queue: function( elem, type, data ) {
		var q;
		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			q = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !q || jQuery.isArray(data) ) {
					q = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					q.push( data );
				}
			}
			return q || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			fn = queue.shift(),
			hooks = {};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
		}

		if ( fn ) {
			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			jQuery._data( elem, type + ".run", hooks );
			fn.call( elem, function() {
				jQuery.dequeue( elem, type );
			}, hooks );
		}

		if ( !queue.length ) {
			jQuery.removeData( elem, type + "queue " + type + ".run", true );
			handleQueueMarkDefer( elem, type, "queue" );
		}
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
		}

		if ( data === undefined ) {
			return jQuery.queue( this[0], type );
		}
		return this.each(function() {
			var queue = jQuery.queue( this, type, data );

			if ( type === "fx" && queue[0] !== "inprogress" ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	// Based off of the plugin by Clint Helfers, with permission.
	// http://blindsignals.com/index.php/2009/07/jquery-delay/
	delay: function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = setTimeout( next, time );
			hooks.stop = function() {
				clearTimeout( timeout );
			};
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, object ) {
		if ( typeof type !== "string" ) {
			object = type;
			type = undefined;
		}
		type = type || "fx";
		var defer = jQuery.Deferred(),
			elements = this,
			i = elements.length,
			count = 1,
			deferDataKey = type + "defer",
			queueDataKey = type + "queue",
			markDataKey = type + "mark",
			tmp;
		function resolve() {
			if ( !( --count ) ) {
				defer.resolveWith( elements, [ elements ] );
			}
		}
		while( i-- ) {
			if (( tmp = jQuery.data( elements[ i ], deferDataKey, undefined, true ) ||
					( jQuery.data( elements[ i ], queueDataKey, undefined, true ) ||
						jQuery.data( elements[ i ], markDataKey, undefined, true ) ) &&
					jQuery.data( elements[ i ], deferDataKey, jQuery.Callbacks( "once memory" ), true ) )) {
				count++;
				tmp.add( resolve );
			}
		}
		resolve();
		return defer.promise();
	}
});




var rclass = /[\n\t\r]/g,
	rspace = /\s+/,
	rreturn = /\r/g,
	rtype = /^(?:button|input)$/i,
	rfocusable = /^(?:button|input|object|select|textarea)$/i,
	rclickable = /^a(?:rea)?$/i,
	rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
	getSetAttribute = jQuery.support.getSetAttribute,
	nodeHook, boolHook, fixSpecified;

jQuery.fn.extend({
	attr: function( name, value ) {
		return jQuery.access( this, name, value, true, jQuery.attr );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	},

	prop: function( name, value ) {
		return jQuery.access( this, name, value, true, jQuery.prop );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	},

	addClass: function( value ) {
		var classNames, i, l, elem,
			setClass, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call(this, j, this.className) );
			});
		}

		if ( value && typeof value === "string" ) {
			classNames = value.split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 ) {
					if ( !elem.className && classNames.length === 1 ) {
						elem.className = value;

					} else {
						setClass = " " + elem.className + " ";

						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							if ( !~setClass.indexOf( " " + classNames[ c ] + " " ) ) {
								setClass += classNames[ c ] + " ";
							}
						}
						elem.className = jQuery.trim( setClass );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classNames, i, l, elem, className, c, cl;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call(this, j, this.className) );
			});
		}

		if ( (value && typeof value === "string") || value === undefined ) {
			classNames = ( value || "" ).split( rspace );

			for ( i = 0, l = this.length; i < l; i++ ) {
				elem = this[ i ];

				if ( elem.nodeType === 1 && elem.className ) {
					if ( value ) {
						className = (" " + elem.className + " ").replace( rclass, " " );
						for ( c = 0, cl = classNames.length; c < cl; c++ ) {
							className = className.replace(" " + classNames[ c ] + " ", " ");
						}
						elem.className = jQuery.trim( className );

					} else {
						elem.className = "";
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isBool = typeof stateVal === "boolean";

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					state = stateVal,
					classNames = value.split( rspace );

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space seperated list
					state = isBool ? state : !self.hasClass( className );
					self[ state ? "addClass" : "removeClass" ]( className );
				}

			} else if ( type === "undefined" || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// toggle whole className
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	},

	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.nodeName.toLowerCase() ] || jQuery.valHooks[ elem.type ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var self = jQuery(this), val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, self.val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map(val, function ( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.nodeName.toLowerCase() ] || jQuery.valHooks[ this.type ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				// attributes.value is undefined in Blackberry 4.7 but
				// uses .value. See #6932
				var val = elem.attributes.value;
				return !val || val.specified ? elem.value : elem.text;
			}
		},
		select: {
			get: function( elem ) {
				var value, i, max, option,
					index = elem.selectedIndex,
					values = [],
					options = elem.options,
					one = elem.type === "select-one";

				// Nothing was selected
				if ( index < 0 ) {
					return null;
				}

				// Loop through all the selected options
				i = one ? index : 0;
				max = one ? index + 1 : options.length;
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Don't return options that are disabled or in a disabled optgroup
					if ( option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) &&
							(!option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" )) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				// Fixes Bug #2551 -- select.val() broken in IE after form.reset()
				if ( one && !values.length && options.length ) {
					return jQuery( options[ index ] ).val();
				}

				return values;
			},

			set: function( elem, value ) {
				var values = jQuery.makeArray( value );

				jQuery(elem).find("option").each(function() {
					this.selected = jQuery.inArray( jQuery(this).val(), values ) >= 0;
				});

				if ( !values.length ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	},

	attrFn: {
		val: true,
		css: true,
		html: true,
		text: true,
		data: true,
		width: true,
		height: true,
		offset: true
	},

	attr: function( elem, name, value, pass ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( pass && name in jQuery.attrFn ) {
			return jQuery( elem )[ name ]( value );
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( notxml ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] || ( rboolean.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;

			} else if ( hooks && "set" in hooks && notxml && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, "" + value );
				return value;
			}

		} else if ( hooks && "get" in hooks && notxml && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {

			ret = elem.getAttribute( name );

			// Non-existent attributes return null, we normalize to undefined
			return ret === null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var propName, attrNames, name, l,
			i = 0;

		if ( value && elem.nodeType === 1 ) {
			attrNames = value.toLowerCase().split( rspace );
			l = attrNames.length;

			for ( ; i < l; i++ ) {
				name = attrNames[ i ];

				if ( name ) {
					propName = jQuery.propFix[ name ] || name;

					// See #9699 for explanation of this approach (setting first, then removal)
					jQuery.attr( elem, name, "" );
					elem.removeAttribute( getSetAttribute ? name : propName );

					// Set corresponding property to false for boolean attributes
					if ( rboolean.test( name ) && propName in elem ) {
						elem[ propName ] = false;
					}
				}
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				// We can't allow the type property to be changed (since it causes problems in IE)
				if ( rtype.test( elem.nodeName ) && elem.parentNode ) {
					jQuery.error( "type property can't be changed" );
				} else if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to it's default in case type is set after value
					// This is for element creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		},
		// Use the value property for back compat
		// Use the nodeHook for button elements in IE6/7 (#1954)
		value: {
			get: function( elem, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.get( elem, name );
				}
				return name in elem ?
					elem.value :
					null;
			},
			set: function( elem, value, name ) {
				if ( nodeHook && jQuery.nodeName( elem, "button" ) ) {
					return nodeHook.set( elem, value, name );
				}
				// Does not return so that setAttribute is also used
				elem.value = value;
			}
		}
	},

	propFix: {
		tabindex: "tabIndex",
		readonly: "readOnly",
		"for": "htmlFor",
		"class": "className",
		maxlength: "maxLength",
		cellspacing: "cellSpacing",
		cellpadding: "cellPadding",
		rowspan: "rowSpan",
		colspan: "colSpan",
		usemap: "useMap",
		frameborder: "frameBorder",
		contenteditable: "contentEditable"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				return ( elem[ name ] = value );
			}

		} else {
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				return elem[ name ];
			}
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				var attributeNode = elem.getAttributeNode("tabindex");

				return attributeNode && attributeNode.specified ?
					parseInt( attributeNode.value, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						undefined;
			}
		}
	}
});

// Add the tabIndex propHook to attrHooks for back-compat (different case is intentional)
jQuery.attrHooks.tabindex = jQuery.propHooks.tabIndex;

// Hook for boolean attributes
boolHook = {
	get: function( elem, name ) {
		// Align boolean attributes with corresponding properties
		// Fall back to attribute presence where some booleans are not supported
		var attrNode,
			property = jQuery.prop( elem, name );
		return property === true || typeof property !== "boolean" && ( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?
			name.toLowerCase() :
			undefined;
	},
	set: function( elem, value, name ) {
		var propName;
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			// value is true since we know at this point it's type boolean and not false
			// Set boolean attributes to the same name and set the DOM property
			propName = jQuery.propFix[ name ] || name;
			if ( propName in elem ) {
				// Only set the IDL specifically if it already exists on the element
				elem[ propName ] = true;
			}

			elem.setAttribute( name, name.toLowerCase() );
		}
		return name;
	}
};

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	fixSpecified = {
		name: true,
		id: true
	};

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret;
			ret = elem.getAttributeNode( name );
			return ret && ( fixSpecified[ name ] ? ret.nodeValue !== "" : ret.specified ) ?
				ret.nodeValue :
				undefined;
		},
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				ret = document.createAttribute( name );
				elem.setAttributeNode( ret );
			}
			return ( ret.nodeValue = value + "" );
		}
	};

	// Apply the nodeHook to tabindex
	jQuery.attrHooks.tabindex.set = nodeHook.set;

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		});
	});

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		get: nodeHook.get,
		set: function( elem, value, name ) {
			if ( value === "" ) {
				value = "false";
			}
			nodeHook.set( elem, value, name );
		}
	};
}


// Some attributes require a special call on IE
if ( !jQuery.support.hrefNormalized ) {
	jQuery.each([ "href", "src", "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = jQuery.extend( jQuery.attrHooks[ name ], {
			get: function( elem ) {
				var ret = elem.getAttribute( name, 2 );
				return ret === null ? undefined : ret;
			}
		});
	});
}

if ( !jQuery.support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Normalize to lowercase since IE uppercases css property names
			return elem.style.cssText.toLowerCase() || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = "" + value );
		}
	};
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
	jQuery.propHooks.selected = jQuery.extend( jQuery.propHooks.selected, {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	});
}

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
if ( !jQuery.support.checkOn ) {
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			get: function( elem ) {
				// Handle the case where in Webkit "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			}
		};
	});
}
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = jQuery.extend( jQuery.valHooks[ this ], {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	});
});




var rformElems = /^(?:textarea|input|select)$/i,
	rtypenamespace = /^([^\.]*)?(?:\.(.+))?$/,
	rhoverHack = /\bhover(\.\S+)?\b/,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rquickIs = /^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,
	quickParse = function( selector ) {
		var quick = rquickIs.exec( selector );
		if ( quick ) {
			//   0  1    2   3
			// [ _, tag, id, class ]
			quick[1] = ( quick[1] || "" ).toLowerCase();
			quick[3] = quick[3] && new RegExp( "(?:^|\\s)" + quick[3] + "(?:\\s|$)" );
		}
		return quick;
	},
	quickIs = function( elem, m ) {
		var attrs = elem.attributes || {};
		return (
			(!m[1] || elem.nodeName.toLowerCase() === m[1]) &&
			(!m[2] || (attrs.id || {}).value === m[2]) &&
			(!m[3] || m[3].test( (attrs[ "class" ] || {}).value ))
		);
	},
	hoverHack = function( events ) {
		return jQuery.event.special.hover ? events : events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
	};

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	add: function( elem, types, handler, data, selector ) {

		var elemData, eventHandle, events,
			t, tns, type, namespaces, handleObj,
			handleObjIn, quick, handlers, special;

		// Don't attach events to noData or text/comment nodes (allow plain objects tho)
		if ( elem.nodeType === 3 || elem.nodeType === 8 || !types || !handler || !(elemData = jQuery._data( elem )) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		events = elemData.events;
		if ( !events ) {
			elemData.events = events = {};
		}
		eventHandle = elemData.handle;
		if ( !eventHandle ) {
			elemData.handle = eventHandle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		// jQuery(...).bind("mouseover mouseout", fn);
		types = jQuery.trim( hoverHack(types) ).split( " " );
		for ( t = 0; t < types.length; t++ ) {

			tns = rtypenamespace.exec( types[t] ) || [];
			type = tns[1];
			namespaces = ( tns[2] || "" ).split( "." ).sort();

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: tns[1],
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				quick: quickParse( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			handlers = events[ type ];
			if ( !handlers ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	global: {},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var elemData = jQuery.hasData( elem ) && jQuery._data( elem ),
			t, tns, type, origType, namespaces, origCount,
			j, events, special, handle, eventType, handleObj;

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = jQuery.trim( hoverHack( types || "" ) ).split(" ");
		for ( t = 0; t < types.length; t++ ) {
			tns = rtypenamespace.exec( types[t] ) || [];
			type = origType = tns[1];
			namespaces = tns[2];

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector? special.delegateType : special.bindType ) || type;
			eventType = events[ type ] || [];
			origCount = eventType.length;
			namespaces = namespaces ? new RegExp("(^|\\.)" + namespaces.split(".").sort().join("\\.(?:.*\\.)?") + "(\\.|$)") : null;

			// Remove matching events
			for ( j = 0; j < eventType.length; j++ ) {
				handleObj = eventType[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					 ( !handler || handler.guid === handleObj.guid ) &&
					 ( !namespaces || namespaces.test( handleObj.namespace ) ) &&
					 ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					eventType.splice( j--, 1 );

					if ( handleObj.selector ) {
						eventType.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( eventType.length === 0 && origCount !== eventType.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			handle = elemData.handle;
			if ( handle ) {
				handle.elem = null;
			}

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery.removeData( elem, [ "events", "handle" ], true );
		}
	},

	// Events that are safe to short-circuit if no handlers are attached.
	// Native DOM events should not be added, they may have inline handlers.
	customEvent: {
		"getData": true,
		"setData": true,
		"changeData": true
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		// Don't do events on text and comment nodes
		if ( elem && (elem.nodeType === 3 || elem.nodeType === 8) ) {
			return;
		}

		// Event object or event type
		var type = event.type || event,
			namespaces = [],
			cache, exclusive, i, cur, old, ontype, special, handle, eventPath, bubbleType;

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "!" ) >= 0 ) {
			// Exclusive events trigger only for the exact event (no namespaces)
			type = type.slice(0, -1);
			exclusive = true;
		}

		if ( type.indexOf( "." ) >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}

		if ( (!elem || jQuery.event.customEvent[ type ]) && !jQuery.event.global[ type ] ) {
			// No jQuery handlers for this event type, and it can't have inline handlers
			return;
		}

		// Caller can pass in an Event, Object, or just an event type string
		event = typeof event === "object" ?
			// jQuery.Event object
			event[ jQuery.expando ] ? event :
			// Object literal
			new jQuery.Event( type, event ) :
			// Just the event type (string)
			new jQuery.Event( type );

		event.type = type;
		event.isTrigger = true;
		event.exclusive = exclusive;
		event.namespace = namespaces.join( "." );
		event.namespace_re = event.namespace? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") + "(\\.|$)") : null;
		ontype = type.indexOf( ":" ) < 0 ? "on" + type : "";

		// Handle a global trigger
		if ( !elem ) {

			// TODO: Stop taunting the data cache; remove global events and always attach to document
			cache = jQuery.cache;
			for ( i in cache ) {
				if ( cache[ i ].events && cache[ i ].events[ type ] ) {
					jQuery.event.trigger( event, data, cache[ i ].handle.elem, true );
				}
			}
			return;
		}

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data != null ? jQuery.makeArray( data ) : [];
		data.unshift( event );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		eventPath = [[ elem, special.bindType || type ]];
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			cur = rfocusMorph.test( bubbleType + type ) ? elem : elem.parentNode;
			old = null;
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push([ cur, bubbleType ]);
				old = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( old && old === elem.ownerDocument ) {
				eventPath.push([ old.defaultView || old.parentWindow || window, bubbleType ]);
			}
		}

		// Fire handlers on the event path
		for ( i = 0; i < eventPath.length && !event.isPropagationStopped(); i++ ) {

			cur = eventPath[i][0];
			event.type = eventPath[i][1];

			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}
			// Note that this is a bare JS function and not a jQuery handler
			handle = ontype && cur[ ontype ];
			if ( handle && jQuery.acceptData( cur ) && handle.apply( cur, data ) === false ) {
				event.preventDefault();
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( elem.ownerDocument, data ) === false) &&
				!(type === "click" && jQuery.nodeName( elem, "a" )) && jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				// IE<9 dies on focus/blur to hidden element (#1486)
				if ( ontype && elem[ type ] && ((type !== "focus" && type !== "blur") || event.target.offsetWidth !== 0) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					old = elem[ ontype ];

					if ( old ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( old ) {
						elem[ ontype ] = old;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event || window.event );

		var handlers = ( (jQuery._data( this, "events" ) || {} )[ event.type ] || []),
			delegateCount = handlers.delegateCount,
			args = [].slice.call( arguments, 0 ),
			run_all = !event.exclusive && !event.namespace,
			handlerQueue = [],
			i, j, cur, jqcur, ret, selMatch, matched, matches, handleObj, sel, related;

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Determine handlers that should run if there are delegated events
		// Avoid disabled elements in IE (#6911) and non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && !event.target.disabled && !(event.button && event.type === "click") ) {

			// Pregenerate a single jQuery object for reuse with .is()
			jqcur = jQuery(this);
			jqcur.context = this.ownerDocument || this;

			for ( cur = event.target; cur != this; cur = cur.parentNode || this ) {
				selMatch = {};
				matches = [];
				jqcur[0] = cur;
				for ( i = 0; i < delegateCount; i++ ) {
					handleObj = handlers[ i ];
					sel = handleObj.selector;

					if ( selMatch[ sel ] === undefined ) {
						selMatch[ sel ] = (
							handleObj.quick ? quickIs( cur, handleObj.quick ) : jqcur.is( sel )
						);
					}
					if ( selMatch[ sel ] ) {
						matches.push( handleObj );
					}
				}
				if ( matches.length ) {
					handlerQueue.push({ elem: cur, matches: matches });
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( handlers.length > delegateCount ) {
			handlerQueue.push({ elem: this, matches: handlers.slice( delegateCount ) });
		}

		// Run delegates first; they may want to stop propagation beneath us
		for ( i = 0; i < handlerQueue.length && !event.isPropagationStopped(); i++ ) {
			matched = handlerQueue[ i ];
			event.currentTarget = matched.elem;

			for ( j = 0; j < matched.matches.length && !event.isImmediatePropagationStopped(); j++ ) {
				handleObj = matched.matches[ j ];

				// Triggered event must either 1) be non-exclusive and have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( run_all || (!event.namespace && !handleObj.namespace) || event.namespace_re && event.namespace_re.test( handleObj.namespace ) ) {

					event.data = handleObj.data;
					event.handleObj = handleObj;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						event.result = ret;
						if ( ret === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		return event.result;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	// *** attrChange attrName relatedNode srcElement  are not normalized, non-W3C, deprecated, will be removed in 1.8 ***
	props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop,
			originalEvent = event,
			fixHook = jQuery.event.fixHooks[ event.type ] || {},
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = jQuery.Event( originalEvent );

		for ( i = copy.length; i; ) {
			prop = copy[ --i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Fix target property, if necessary (#1925, IE 6/7/8 & Safari2)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Target should not be a text node (#504, Safari)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// For mouse/key events; add metaKey if it's not there (#3368, IE6/7/8)
		if ( event.metaKey === undefined ) {
			event.metaKey = event.ctrlKey;
		}

		return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		ready: {
			// Make sure the ready event is setup
			setup: jQuery.bindReady
		},

		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},

		focus: {
			delegateType: "focusin"
		},
		blur: {
			delegateType: "focusout"
		},

		beforeunload: {
			setup: function( data, namespaces, eventHandle ) {
				// We only want to do this special case on windows
				if ( jQuery.isWindow( this ) ) {
					this.onbeforeunload = eventHandle;
				}
			},

			teardown: function( namespaces, eventHandle ) {
				if ( this.onbeforeunload === eventHandle ) {
					this.onbeforeunload = null;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{ type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

// Some plugins are using, but it's undocumented/deprecated and will be removed.
// The 1.7 special event interface should provide all the hooks needed now.
jQuery.event.handle = jQuery.event.dispatch;

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		if ( elem.detachEvent ) {
			elem.detachEvent( "on" + type, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
			src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

function returnFalse() {
	return false;
}
function returnTrue() {
	return true;
}

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	preventDefault: function() {
		this.isDefaultPrevented = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}

		// if preventDefault exists run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// otherwise set the returnValue property of the original event to false (IE)
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		this.isPropagationStopped = returnTrue;

		var e = this.originalEvent;
		if ( !e ) {
			return;
		}
		// if stopPropagation exists run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}
		// otherwise set the cancelBubble property of the original event to true (IE)
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		this.isImmediatePropagationStopped = returnTrue;
		this.stopPropagation();
	},
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj,
				selector = handleObj.selector,
				ret;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !form._submit_attached ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						// If form was submitted by the user, bubble the event up the tree
						if ( this.parentNode && !event.isTrigger ) {
							jQuery.event.simulate( "submit", this.parentNode, event, true );
						}
					});
					form._submit_attached = true;
				}
			});
			// return undefined since we don't need an event listener
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
							jQuery.event.simulate( "change", this, event, true );
						}
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !elem._change_attached ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					elem._change_attached = true;
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler while someone wants focusin/focusout
		var attaches = 0,
			handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				if ( attaches++ === 0 ) {
					document.addEventListener( orig, handler, true );
				}
			},
			teardown: function() {
				if ( --attaches === 0 ) {
					document.removeEventListener( orig, handler, true );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on.call( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			var handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace? handleObj.type + "." + handleObj.namespace : handleObj.type,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( var type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	live: function( types, data, fn ) {
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	},
	die: function( types, fn ) {
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length == 1? this.off( selector, "**" ) : this.off( types, selector, fn );
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		if ( this[0] ) {
			return jQuery.event.trigger( type, data, this[0], true );
		}
	},

	toggle: function( fn ) {
		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
});

jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		if ( fn == null ) {
			fn = data;
			data = null;
		}

		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};

	if ( jQuery.attrFn ) {
		jQuery.attrFn[ name ] = true;
	}

	if ( rkeyEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.keyHooks;
	}

	if ( rmouseEvent.test( name ) ) {
		jQuery.event.fixHooks[ name ] = jQuery.event.mouseHooks;
	}
});



/*!
 * Sizzle CSS Selector Engine
 *  Copyright 2011, The Dojo Foundation
 *  Released under the MIT, BSD, and GPL Licenses.
 *  More information: http://sizzlejs.com/
 */
(function(){

var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
	expando = "sizcache" + (Math.random() + '').replace('.', ''),
	done = 0,
	toString = Object.prototype.toString,
	hasDuplicate = false,
	baseHasDuplicate = true,
	rBackslash = /\\/g,
	rReturn = /\r\n/g,
	rNonWord = /\W/;

// Here we check if the JavaScript engine is using some sort of
// optimization where it does not always call our comparision
// function. If that is the case, discard the hasDuplicate value.
//   Thus far that includes Google Chrome.
[0, 0].sort(function() {
	baseHasDuplicate = false;
	return 0;
});

var Sizzle = function( selector, context, results, seed ) {
	results = results || [];
	context = context || document;

	var origContext = context;

	if ( context.nodeType !== 1 && context.nodeType !== 9 ) {
		return [];
	}
	
	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	var m, set, checkSet, extra, ret, cur, pop, i,
		prune = true,
		contextXML = Sizzle.isXML( context ),
		parts = [],
		soFar = selector;
	
	// Reset the position of the chunker regexp (start from head)
	do {
		chunker.exec( "" );
		m = chunker.exec( soFar );

		if ( m ) {
			soFar = m[3];
		
			parts.push( m[1] );
		
			if ( m[2] ) {
				extra = m[3];
				break;
			}
		}
	} while ( m );

	if ( parts.length > 1 && origPOS.exec( selector ) ) {

		if ( parts.length === 2 && Expr.relative[ parts[0] ] ) {
			set = posProcess( parts[0] + parts[1], context, seed );

		} else {
			set = Expr.relative[ parts[0] ] ?
				[ context ] :
				Sizzle( parts.shift(), context );

			while ( parts.length ) {
				selector = parts.shift();

				if ( Expr.relative[ selector ] ) {
					selector += parts.shift();
				}
				
				set = posProcess( selector, set, seed );
			}
		}

	} else {
		// Take a shortcut and set the context if the root selector is an ID
		// (but not if it'll be faster if the inner selector is an ID)
		if ( !seed && parts.length > 1 && context.nodeType === 9 && !contextXML &&
				Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1]) ) {

			ret = Sizzle.find( parts.shift(), context, contextXML );
			context = ret.expr ?
				Sizzle.filter( ret.expr, ret.set )[0] :
				ret.set[0];
		}

		if ( context ) {
			ret = seed ?
				{ expr: parts.pop(), set: makeArray(seed) } :
				Sizzle.find( parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML );

			set = ret.expr ?
				Sizzle.filter( ret.expr, ret.set ) :
				ret.set;

			if ( parts.length > 0 ) {
				checkSet = makeArray( set );

			} else {
				prune = false;
			}

			while ( parts.length ) {
				cur = parts.pop();
				pop = cur;

				if ( !Expr.relative[ cur ] ) {
					cur = "";
				} else {
					pop = parts.pop();
				}

				if ( pop == null ) {
					pop = context;
				}

				Expr.relative[ cur ]( checkSet, pop, contextXML );
			}

		} else {
			checkSet = parts = [];
		}
	}

	if ( !checkSet ) {
		checkSet = set;
	}

	if ( !checkSet ) {
		Sizzle.error( cur || selector );
	}

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );

		} else if ( context && context.nodeType === 1 ) {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
					results.push( set[i] );
				}
			}

		} else {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] );
				}
			}
		}

	} else {
		makeArray( checkSet, results );
	}

	if ( extra ) {
		Sizzle( extra, origContext, results, seed );
		Sizzle.uniqueSort( results );
	}

	return results;
};

Sizzle.uniqueSort = function( results ) {
	if ( sortOrder ) {
		hasDuplicate = baseHasDuplicate;
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			for ( var i = 1; i < results.length; i++ ) {
				if ( results[i] === results[ i - 1 ] ) {
					results.splice( i--, 1 );
				}
			}
		}
	}

	return results;
};

Sizzle.matches = function( expr, set ) {
	return Sizzle( expr, null, null, set );
};

Sizzle.matchesSelector = function( node, expr ) {
	return Sizzle( expr, null, null, [node] ).length > 0;
};

Sizzle.find = function( expr, context, isXML ) {
	var set, i, len, match, type, left;

	if ( !expr ) {
		return [];
	}

	for ( i = 0, len = Expr.order.length; i < len; i++ ) {
		type = Expr.order[i];
		
		if ( (match = Expr.leftMatch[ type ].exec( expr )) ) {
			left = match[1];
			match.splice( 1, 1 );

			if ( left.substr( left.length - 1 ) !== "\\" ) {
				match[1] = (match[1] || "").replace( rBackslash, "" );
				set = Expr.find[ type ]( match, context, isXML );

				if ( set != null ) {
					expr = expr.replace( Expr.match[ type ], "" );
					break;
				}
			}
		}
	}

	if ( !set ) {
		set = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( "*" ) :
			[];
	}

	return { set: set, expr: expr };
};

Sizzle.filter = function( expr, set, inplace, not ) {
	var match, anyFound,
		type, found, item, filter, left,
		i, pass,
		old = expr,
		result = [],
		curLoop = set,
		isXMLFilter = set && set[0] && Sizzle.isXML( set[0] );

	while ( expr && set.length ) {
		for ( type in Expr.filter ) {
			if ( (match = Expr.leftMatch[ type ].exec( expr )) != null && match[2] ) {
				filter = Expr.filter[ type ];
				left = match[1];

				anyFound = false;

				match.splice(1,1);

				if ( left.substr( left.length - 1 ) === "\\" ) {
					continue;
				}

				if ( curLoop === result ) {
					result = [];
				}

				if ( Expr.preFilter[ type ] ) {
					match = Expr.preFilter[ type ]( match, curLoop, inplace, result, not, isXMLFilter );

					if ( !match ) {
						anyFound = found = true;

					} else if ( match === true ) {
						continue;
					}
				}

				if ( match ) {
					for ( i = 0; (item = curLoop[i]) != null; i++ ) {
						if ( item ) {
							found = filter( item, match, i, curLoop );
							pass = not ^ found;

							if ( inplace && found != null ) {
								if ( pass ) {
									anyFound = true;

								} else {
									curLoop[i] = false;
								}

							} else if ( pass ) {
								result.push( item );
								anyFound = true;
							}
						}
					}
				}

				if ( found !== undefined ) {
					if ( !inplace ) {
						curLoop = result;
					}

					expr = expr.replace( Expr.match[ type ], "" );

					if ( !anyFound ) {
						return [];
					}

					break;
				}
			}
		}

		// Improper expression
		if ( expr === old ) {
			if ( anyFound == null ) {
				Sizzle.error( expr );

			} else {
				break;
			}
		}

		old = expr;
	}

	return curLoop;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Utility function for retreiving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
var getText = Sizzle.getText = function( elem ) {
    var i, node,
		nodeType = elem.nodeType,
		ret = "";

	if ( nodeType ) {
		if ( nodeType === 1 || nodeType === 9 ) {
			// Use textContent || innerText for elements
			if ( typeof elem.textContent === 'string' ) {
				return elem.textContent;
			} else if ( typeof elem.innerText === 'string' ) {
				// Replace IE's carriage returns
				return elem.innerText.replace( rReturn, '' );
			} else {
				// Traverse it's children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
	} else {

		// If no nodeType, this is expected to be an array
		for ( i = 0; (node = elem[i]); i++ ) {
			// Do not traverse comment nodes
			if ( node.nodeType !== 8 ) {
				ret += getText( node );
			}
		}
	}
	return ret;
};

var Expr = Sizzle.selectors = {
	order: [ "ID", "NAME", "TAG" ],

	match: {
		ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
		NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
		ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
		TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
		CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
		POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
		PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
	},

	leftMatch: {},

	attrMap: {
		"class": "className",
		"for": "htmlFor"
	},

	attrHandle: {
		href: function( elem ) {
			return elem.getAttribute( "href" );
		},
		type: function( elem ) {
			return elem.getAttribute( "type" );
		}
	},

	relative: {
		"+": function(checkSet, part){
			var isPartStr = typeof part === "string",
				isTag = isPartStr && !rNonWord.test( part ),
				isPartStrNotTag = isPartStr && !isTag;

			if ( isTag ) {
				part = part.toLowerCase();
			}

			for ( var i = 0, l = checkSet.length, elem; i < l; i++ ) {
				if ( (elem = checkSet[i]) ) {
					while ( (elem = elem.previousSibling) && elem.nodeType !== 1 ) {}

					checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ?
						elem || false :
						elem === part;
				}
			}

			if ( isPartStrNotTag ) {
				Sizzle.filter( part, checkSet, true );
			}
		},

		">": function( checkSet, part ) {
			var elem,
				isPartStr = typeof part === "string",
				i = 0,
				l = checkSet.length;

			if ( isPartStr && !rNonWord.test( part ) ) {
				part = part.toLowerCase();

				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						var parent = elem.parentNode;
						checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false;
					}
				}

			} else {
				for ( ; i < l; i++ ) {
					elem = checkSet[i];

					if ( elem ) {
						checkSet[i] = isPartStr ?
							elem.parentNode :
							elem.parentNode === part;
					}
				}

				if ( isPartStr ) {
					Sizzle.filter( part, checkSet, true );
				}
			}
		},

		"": function(checkSet, part, isXML){
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "parentNode", part, doneName, checkSet, nodeCheck, isXML );
		},

		"~": function( checkSet, part, isXML ) {
			var nodeCheck,
				doneName = done++,
				checkFn = dirCheck;

			if ( typeof part === "string" && !rNonWord.test( part ) ) {
				part = part.toLowerCase();
				nodeCheck = part;
				checkFn = dirNodeCheck;
			}

			checkFn( "previousSibling", part, doneName, checkSet, nodeCheck, isXML );
		}
	},

	find: {
		ID: function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [m] : [];
			}
		},

		NAME: function( match, context ) {
			if ( typeof context.getElementsByName !== "undefined" ) {
				var ret = [],
					results = context.getElementsByName( match[1] );

				for ( var i = 0, l = results.length; i < l; i++ ) {
					if ( results[i].getAttribute("name") === match[1] ) {
						ret.push( results[i] );
					}
				}

				return ret.length === 0 ? null : ret;
			}
		},

		TAG: function( match, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( match[1] );
			}
		}
	},
	preFilter: {
		CLASS: function( match, curLoop, inplace, result, not, isXML ) {
			match = " " + match[1].replace( rBackslash, "" ) + " ";

			if ( isXML ) {
				return match;
			}

			for ( var i = 0, elem; (elem = curLoop[i]) != null; i++ ) {
				if ( elem ) {
					if ( not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0) ) {
						if ( !inplace ) {
							result.push( elem );
						}

					} else if ( inplace ) {
						curLoop[i] = false;
					}
				}
			}

			return false;
		},

		ID: function( match ) {
			return match[1].replace( rBackslash, "" );
		},

		TAG: function( match, curLoop ) {
			return match[1].replace( rBackslash, "" ).toLowerCase();
		},

		CHILD: function( match ) {
			if ( match[1] === "nth" ) {
				if ( !match[2] ) {
					Sizzle.error( match[0] );
				}

				match[2] = match[2].replace(/^\+|\s*/g, '');

				// parse equations like 'even', 'odd', '5', '2n', '3n+2', '4n-1', '-n+6'
				var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(
					match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" ||
					!/\D/.test( match[2] ) && "0n+" + match[2] || match[2]);

				// calculate the numbers (first)n+(last) including if they are negative
				match[2] = (test[1] + (test[2] || 1)) - 0;
				match[3] = test[3] - 0;
			}
			else if ( match[2] ) {
				Sizzle.error( match[0] );
			}

			// TODO: Move to normal caching system
			match[0] = done++;

			return match;
		},

		ATTR: function( match, curLoop, inplace, result, not, isXML ) {
			var name = match[1] = match[1].replace( rBackslash, "" );
			
			if ( !isXML && Expr.attrMap[name] ) {
				match[1] = Expr.attrMap[name];
			}

			// Handle if an un-quoted value was used
			match[4] = ( match[4] || match[5] || "" ).replace( rBackslash, "" );

			if ( match[2] === "~=" ) {
				match[4] = " " + match[4] + " ";
			}

			return match;
		},

		PSEUDO: function( match, curLoop, inplace, result, not ) {
			if ( match[1] === "not" ) {
				// If we're dealing with a complex expression, or a simple one
				if ( ( chunker.exec(match[3]) || "" ).length > 1 || /^\w/.test(match[3]) ) {
					match[3] = Sizzle(match[3], null, null, curLoop);

				} else {
					var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);

					if ( !inplace ) {
						result.push.apply( result, ret );
					}

					return false;
				}

			} else if ( Expr.match.POS.test( match[0] ) || Expr.match.CHILD.test( match[0] ) ) {
				return true;
			}
			
			return match;
		},

		POS: function( match ) {
			match.unshift( true );

			return match;
		}
	},
	
	filters: {
		enabled: function( elem ) {
			return elem.disabled === false && elem.type !== "hidden";
		},

		disabled: function( elem ) {
			return elem.disabled === true;
		},

		checked: function( elem ) {
			return elem.checked === true;
		},
		
		selected: function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}
			
			return elem.selected === true;
		},

		parent: function( elem ) {
			return !!elem.firstChild;
		},

		empty: function( elem ) {
			return !elem.firstChild;
		},

		has: function( elem, i, match ) {
			return !!Sizzle( match[3], elem ).length;
		},

		header: function( elem ) {
			return (/h\d/i).test( elem.nodeName );
		},

		text: function( elem ) {
			var attr = elem.getAttribute( "type" ), type = elem.type;
			// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc) 
			// use getAttribute instead to test this case
			return elem.nodeName.toLowerCase() === "input" && "text" === type && ( attr === type || attr === null );
		},

		radio: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type;
		},

		checkbox: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type;
		},

		file: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "file" === elem.type;
		},

		password: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "password" === elem.type;
		},

		submit: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "submit" === elem.type;
		},

		image: function( elem ) {
			return elem.nodeName.toLowerCase() === "input" && "image" === elem.type;
		},

		reset: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && "reset" === elem.type;
		},

		button: function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && "button" === elem.type || name === "button";
		},

		input: function( elem ) {
			return (/input|select|textarea|button/i).test( elem.nodeName );
		},

		focus: function( elem ) {
			return elem === elem.ownerDocument.activeElement;
		}
	},
	setFilters: {
		first: function( elem, i ) {
			return i === 0;
		},

		last: function( elem, i, match, array ) {
			return i === array.length - 1;
		},

		even: function( elem, i ) {
			return i % 2 === 0;
		},

		odd: function( elem, i ) {
			return i % 2 === 1;
		},

		lt: function( elem, i, match ) {
			return i < match[3] - 0;
		},

		gt: function( elem, i, match ) {
			return i > match[3] - 0;
		},

		nth: function( elem, i, match ) {
			return match[3] - 0 === i;
		},

		eq: function( elem, i, match ) {
			return match[3] - 0 === i;
		}
	},
	filter: {
		PSEUDO: function( elem, match, i, array ) {
			var name = match[1],
				filter = Expr.filters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );

			} else if ( name === "contains" ) {
				return (elem.textContent || elem.innerText || getText([ elem ]) || "").indexOf(match[3]) >= 0;

			} else if ( name === "not" ) {
				var not = match[3];

				for ( var j = 0, l = not.length; j < l; j++ ) {
					if ( not[j] === elem ) {
						return false;
					}
				}

				return true;

			} else {
				Sizzle.error( name );
			}
		},

		CHILD: function( elem, match ) {
			var first, last,
				doneName, parent, cache,
				count, diff,
				type = match[1],
				node = elem;

			switch ( type ) {
				case "only":
				case "first":
					while ( (node = node.previousSibling) )	 {
						if ( node.nodeType === 1 ) { 
							return false; 
						}
					}

					if ( type === "first" ) { 
						return true; 
					}

					node = elem;

				case "last":
					while ( (node = node.nextSibling) )	 {
						if ( node.nodeType === 1 ) { 
							return false; 
						}
					}

					return true;

				case "nth":
					first = match[2];
					last = match[3];

					if ( first === 1 && last === 0 ) {
						return true;
					}
					
					doneName = match[0];
					parent = elem.parentNode;
	
					if ( parent && (parent[ expando ] !== doneName || !elem.nodeIndex) ) {
						count = 0;
						
						for ( node = parent.firstChild; node; node = node.nextSibling ) {
							if ( node.nodeType === 1 ) {
								node.nodeIndex = ++count;
							}
						} 

						parent[ expando ] = doneName;
					}
					
					diff = elem.nodeIndex - last;

					if ( first === 0 ) {
						return diff === 0;

					} else {
						return ( diff % first === 0 && diff / first >= 0 );
					}
			}
		},

		ID: function( elem, match ) {
			return elem.nodeType === 1 && elem.getAttribute("id") === match;
		},

		TAG: function( elem, match ) {
			return (match === "*" && elem.nodeType === 1) || !!elem.nodeName && elem.nodeName.toLowerCase() === match;
		},
		
		CLASS: function( elem, match ) {
			return (" " + (elem.className || elem.getAttribute("class")) + " ")
				.indexOf( match ) > -1;
		},

		ATTR: function( elem, match ) {
			var name = match[1],
				result = Sizzle.attr ?
					Sizzle.attr( elem, name ) :
					Expr.attrHandle[ name ] ?
					Expr.attrHandle[ name ]( elem ) :
					elem[ name ] != null ?
						elem[ name ] :
						elem.getAttribute( name ),
				value = result + "",
				type = match[2],
				check = match[4];

			return result == null ?
				type === "!=" :
				!type && Sizzle.attr ?
				result != null :
				type === "=" ?
				value === check :
				type === "*=" ?
				value.indexOf(check) >= 0 :
				type === "~=" ?
				(" " + value + " ").indexOf(check) >= 0 :
				!check ?
				value && result !== false :
				type === "!=" ?
				value !== check :
				type === "^=" ?
				value.indexOf(check) === 0 :
				type === "$=" ?
				value.substr(value.length - check.length) === check :
				type === "|=" ?
				value === check || value.substr(0, check.length + 1) === check + "-" :
				false;
		},

		POS: function( elem, match, i, array ) {
			var name = match[2],
				filter = Expr.setFilters[ name ];

			if ( filter ) {
				return filter( elem, i, match, array );
			}
		}
	}
};

var origPOS = Expr.match.POS,
	fescape = function(all, num){
		return "\\" + (num - 0 + 1);
	};

for ( var type in Expr.match ) {
	Expr.match[ type ] = new RegExp( Expr.match[ type ].source + (/(?![^\[]*\])(?![^\(]*\))/.source) );
	Expr.leftMatch[ type ] = new RegExp( /(^(?:.|\r|\n)*?)/.source + Expr.match[ type ].source.replace(/\\(\d+)/g, fescape) );
}

var makeArray = function( array, results ) {
	array = Array.prototype.slice.call( array, 0 );

	if ( results ) {
		results.push.apply( results, array );
		return results;
	}
	
	return array;
};

// Perform a simple check to determine if the browser is capable of
// converting a NodeList to an array using builtin methods.
// Also verifies that the returned array holds DOM nodes
// (which is not the case in the Blackberry browser)
try {
	Array.prototype.slice.call( document.documentElement.childNodes, 0 )[0].nodeType;

// Provide a fallback method if it does not work
} catch( e ) {
	makeArray = function( array, results ) {
		var i = 0,
			ret = results || [];

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );

		} else {
			if ( typeof array.length === "number" ) {
				for ( var l = array.length; i < l; i++ ) {
					ret.push( array[i] );
				}

			} else {
				for ( ; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

		return ret;
	};
}

var sortOrder, siblingCheck;

if ( document.documentElement.compareDocumentPosition ) {
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		if ( !a.compareDocumentPosition || !b.compareDocumentPosition ) {
			return a.compareDocumentPosition ? -1 : 1;
		}

		return a.compareDocumentPosition(b) & 4 ? -1 : 1;
	};

} else {
	sortOrder = function( a, b ) {
		// The nodes are identical, we can exit early
		if ( a === b ) {
			hasDuplicate = true;
			return 0;

		// Fallback to using sourceIndex (in IE) if it's available on both nodes
		} else if ( a.sourceIndex && b.sourceIndex ) {
			return a.sourceIndex - b.sourceIndex;
		}

		var al, bl,
			ap = [],
			bp = [],
			aup = a.parentNode,
			bup = b.parentNode,
			cur = aup;

		// If the nodes are siblings (or identical) we can do a quick check
		if ( aup === bup ) {
			return siblingCheck( a, b );

		// If no parents were found then the nodes are disconnected
		} else if ( !aup ) {
			return -1;

		} else if ( !bup ) {
			return 1;
		}

		// Otherwise they're somewhere else in the tree so we need
		// to build up a full list of the parentNodes for comparison
		while ( cur ) {
			ap.unshift( cur );
			cur = cur.parentNode;
		}

		cur = bup;

		while ( cur ) {
			bp.unshift( cur );
			cur = cur.parentNode;
		}

		al = ap.length;
		bl = bp.length;

		// Start walking down the tree looking for a discrepancy
		for ( var i = 0; i < al && i < bl; i++ ) {
			if ( ap[i] !== bp[i] ) {
				return siblingCheck( ap[i], bp[i] );
			}
		}

		// We ended someplace up the tree so do a sibling check
		return i === al ?
			siblingCheck( a, bp[i], -1 ) :
			siblingCheck( ap[i], b, 1 );
	};

	siblingCheck = function( a, b, ret ) {
		if ( a === b ) {
			return ret;
		}

		var cur = a.nextSibling;

		while ( cur ) {
			if ( cur === b ) {
				return -1;
			}

			cur = cur.nextSibling;
		}

		return 1;
	};
}

// Check to see if the browser returns elements by name when
// querying by getElementById (and provide a workaround)
(function(){
	// We're going to inject a fake input element with a specified name
	var form = document.createElement("div"),
		id = "script" + (new Date()).getTime(),
		root = document.documentElement;

	form.innerHTML = "<a name='" + id + "'/>";

	// Inject it into the root element, check its status, and remove it quickly
	root.insertBefore( form, root.firstChild );

	// The workaround has to do additional checks after a getElementById
	// Which slows things down for other browsers (hence the branching)
	if ( document.getElementById( id ) ) {
		Expr.find.ID = function( match, context, isXML ) {
			if ( typeof context.getElementById !== "undefined" && !isXML ) {
				var m = context.getElementById(match[1]);

				return m ?
					m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ?
						[m] :
						undefined :
					[];
			}
		};

		Expr.filter.ID = function( elem, match ) {
			var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");

			return elem.nodeType === 1 && node && node.nodeValue === match;
		};
	}

	root.removeChild( form );

	// release memory in IE
	root = form = null;
})();

(function(){
	// Check to see if the browser returns only elements
	// when doing getElementsByTagName("*")

	// Create a fake element
	var div = document.createElement("div");
	div.appendChild( document.createComment("") );

	// Make sure no comments are found
	if ( div.getElementsByTagName("*").length > 0 ) {
		Expr.find.TAG = function( match, context ) {
			var results = context.getElementsByTagName( match[1] );

			// Filter out possible comments
			if ( match[1] === "*" ) {
				var tmp = [];

				for ( var i = 0; results[i]; i++ ) {
					if ( results[i].nodeType === 1 ) {
						tmp.push( results[i] );
					}
				}

				results = tmp;
			}

			return results;
		};
	}

	// Check to see if an attribute returns normalized href attributes
	div.innerHTML = "<a href='#'></a>";

	if ( div.firstChild && typeof div.firstChild.getAttribute !== "undefined" &&
			div.firstChild.getAttribute("href") !== "#" ) {

		Expr.attrHandle.href = function( elem ) {
			return elem.getAttribute( "href", 2 );
		};
	}

	// release memory in IE
	div = null;
})();

if ( document.querySelectorAll ) {
	(function(){
		var oldSizzle = Sizzle,
			div = document.createElement("div"),
			id = "__sizzle__";

		div.innerHTML = "<p class='TEST'></p>";

		// Safari can't handle uppercase or unicode characters when
		// in quirks mode.
		if ( div.querySelectorAll && div.querySelectorAll(".TEST").length === 0 ) {
			return;
		}
	
		Sizzle = function( query, context, extra, seed ) {
			context = context || document;

			// Only use querySelectorAll on non-XML documents
			// (ID selectors don't work in non-HTML documents)
			if ( !seed && !Sizzle.isXML(context) ) {
				// See if we find a selector to speed up
				var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec( query );
				
				if ( match && (context.nodeType === 1 || context.nodeType === 9) ) {
					// Speed-up: Sizzle("TAG")
					if ( match[1] ) {
						return makeArray( context.getElementsByTagName( query ), extra );
					
					// Speed-up: Sizzle(".CLASS")
					} else if ( match[2] && Expr.find.CLASS && context.getElementsByClassName ) {
						return makeArray( context.getElementsByClassName( match[2] ), extra );
					}
				}
				
				if ( context.nodeType === 9 ) {
					// Speed-up: Sizzle("body")
					// The body element only exists once, optimize finding it
					if ( query === "body" && context.body ) {
						return makeArray( [ context.body ], extra );
						
					// Speed-up: Sizzle("#ID")
					} else if ( match && match[3] ) {
						var elem = context.getElementById( match[3] );

						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {
							// Handle the case where IE and Opera return items
							// by name instead of ID
							if ( elem.id === match[3] ) {
								return makeArray( [ elem ], extra );
							}
							
						} else {
							return makeArray( [], extra );
						}
					}
					
					try {
						return makeArray( context.querySelectorAll(query), extra );
					} catch(qsaError) {}

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				} else if ( context.nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					var oldContext = context,
						old = context.getAttribute( "id" ),
						nid = old || id,
						hasParent = context.parentNode,
						relativeHierarchySelector = /^\s*[+~]/.test( query );

					if ( !old ) {
						context.setAttribute( "id", nid );
					} else {
						nid = nid.replace( /'/g, "\\$&" );
					}
					if ( relativeHierarchySelector && hasParent ) {
						context = context.parentNode;
					}

					try {
						if ( !relativeHierarchySelector || hasParent ) {
							return makeArray( context.querySelectorAll( "[id='" + nid + "'] " + query ), extra );
						}

					} catch(pseudoError) {
					} finally {
						if ( !old ) {
							oldContext.removeAttribute( "id" );
						}
					}
				}
			}
		
			return oldSizzle(query, context, extra, seed);
		};

		for ( var prop in oldSizzle ) {
			Sizzle[ prop ] = oldSizzle[ prop ];
		}

		// release memory in IE
		div = null;
	})();
}

(function(){
	var html = document.documentElement,
		matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;

	if ( matches ) {
		// Check to see if it's possible to do matchesSelector
		// on a disconnected node (IE 9 fails this)
		var disconnectedMatch = !matches.call( document.createElement( "div" ), "div" ),
			pseudoWorks = false;

		try {
			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( document.documentElement, "[test!='']:sizzle" );
	
		} catch( pseudoError ) {
			pseudoWorks = true;
		}

		Sizzle.matchesSelector = function( node, expr ) {
			// Make sure that attribute selectors are quoted
			expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");

			if ( !Sizzle.isXML( node ) ) {
				try { 
					if ( pseudoWorks || !Expr.match.PSEUDO.test( expr ) && !/!=/.test( expr ) ) {
						var ret = matches.call( node, expr );

						// IE 9's matchesSelector returns false on disconnected nodes
						if ( ret || !disconnectedMatch ||
								// As well, disconnected nodes are said to be in a document
								// fragment in IE 9, so check for that
								node.document && node.document.nodeType !== 11 ) {
							return ret;
						}
					}
				} catch(e) {}
			}

			return Sizzle(expr, null, null, [node]).length > 0;
		};
	}
})();

(function(){
	var div = document.createElement("div");

	div.innerHTML = "<div class='test e'></div><div class='test'></div>";

	// Opera can't find a second classname (in 9.6)
	// Also, make sure that getElementsByClassName actually exists
	if ( !div.getElementsByClassName || div.getElementsByClassName("e").length === 0 ) {
		return;
	}

	// Safari caches class attributes, doesn't catch changes (in 3.2)
	div.lastChild.className = "e";

	if ( div.getElementsByClassName("e").length === 1 ) {
		return;
	}
	
	Expr.order.splice(1, 0, "CLASS");
	Expr.find.CLASS = function( match, context, isXML ) {
		if ( typeof context.getElementsByClassName !== "undefined" && !isXML ) {
			return context.getElementsByClassName(match[1]);
		}
	};

	// release memory in IE
	div = null;
})();

function dirNodeCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;

			elem = elem[dir];

			while ( elem ) {
				if ( elem[ expando ] === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 && !isXML ){
					elem[ expando ] = doneName;
					elem.sizset = i;
				}

				if ( elem.nodeName.toLowerCase() === cur ) {
					match = elem;
					break;
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

function dirCheck( dir, cur, doneName, checkSet, nodeCheck, isXML ) {
	for ( var i = 0, l = checkSet.length; i < l; i++ ) {
		var elem = checkSet[i];

		if ( elem ) {
			var match = false;
			
			elem = elem[dir];

			while ( elem ) {
				if ( elem[ expando ] === doneName ) {
					match = checkSet[elem.sizset];
					break;
				}

				if ( elem.nodeType === 1 ) {
					if ( !isXML ) {
						elem[ expando ] = doneName;
						elem.sizset = i;
					}

					if ( typeof cur !== "string" ) {
						if ( elem === cur ) {
							match = true;
							break;
						}

					} else if ( Sizzle.filter( cur, [elem] ).length > 0 ) {
						match = elem;
						break;
					}
				}

				elem = elem[dir];
			}

			checkSet[i] = match;
		}
	}
}

if ( document.documentElement.contains ) {
	Sizzle.contains = function( a, b ) {
		return a !== b && (a.contains ? a.contains(b) : true);
	};

} else if ( document.documentElement.compareDocumentPosition ) {
	Sizzle.contains = function( a, b ) {
		return !!(a.compareDocumentPosition(b) & 16);
	};

} else {
	Sizzle.contains = function() {
		return false;
	};
}

Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833) 
	var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;

	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

var posProcess = function( selector, context, seed ) {
	var match,
		tmpSet = [],
		later = "",
		root = context.nodeType ? [context] : context;

	// Position selectors must be done after the filter
	// And so must :not(positional) so we move all PSEUDOs to the end
	while ( (match = Expr.match.PSEUDO.exec( selector )) ) {
		later += match[0];
		selector = selector.replace( Expr.match.PSEUDO, "" );
	}

	selector = Expr.relative[selector] ? selector + "*" : selector;

	for ( var i = 0, l = root.length; i < l; i++ ) {
		Sizzle( selector, root[i], tmpSet, seed );
	}

	return Sizzle.filter( later, tmpSet );
};

// EXPOSE
// Override sizzle attribute retrieval
Sizzle.attr = jQuery.attr;
Sizzle.selectors.attrMap = {};
jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.filters;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})();


var runtil = /Until$/,
	rparentsprev = /^(?:parents|prevUntil|prevAll)/,
	// Note: This RegExp should be improved, or likely pulled from Sizzle
	rmultiselector = /,/,
	isSimple = /^.[^:#\[\.,]*$/,
	slice = Array.prototype.slice,
	POS = jQuery.expr.match.POS,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend({
	find: function( selector ) {
		var self = this,
			i, l;

		if ( typeof selector !== "string" ) {
			return jQuery( selector ).filter(function() {
				for ( i = 0, l = self.length; i < l; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			});
		}

		var ret = this.pushStack( "", "find", selector ),
			length, n, r;

		for ( i = 0, l = this.length; i < l; i++ ) {
			length = ret.length;
			jQuery.find( selector, this[i], ret );

			if ( i > 0 ) {
				// Make sure that the results are unique
				for ( n = length; n < ret.length; n++ ) {
					for ( r = 0; r < length; r++ ) {
						if ( ret[r] === ret[n] ) {
							ret.splice(n--, 1);
							break;
						}
					}
				}
			}
		}

		return ret;
	},

	has: function( target ) {
		var targets = jQuery( target );
		return this.filter(function() {
			for ( var i = 0, l = targets.length; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	not: function( selector ) {
		return this.pushStack( winnow(this, selector, false), "not", selector);
	},

	filter: function( selector ) {
		return this.pushStack( winnow(this, selector, true), "filter", selector );
	},

	is: function( selector ) {
		return !!selector && ( 
			typeof selector === "string" ?
				// If this is a positional selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				POS.test( selector ) ? 
					jQuery( selector, this.context ).index( this[0] ) >= 0 :
					jQuery.filter( selector, this ).length > 0 :
				this.filter( selector ).length > 0 );
	},

	closest: function( selectors, context ) {
		var ret = [], i, l, cur = this[0];
		
		// Array (deprecated as of jQuery 1.7)
		if ( jQuery.isArray( selectors ) ) {
			var level = 1;

			while ( cur && cur.ownerDocument && cur !== context ) {
				for ( i = 0; i < selectors.length; i++ ) {

					if ( jQuery( cur ).is( selectors[ i ] ) ) {
						ret.push({ selector: selectors[ i ], elem: cur, level: level });
					}
				}

				cur = cur.parentNode;
				level++;
			}

			return ret;
		}

		// String
		var pos = POS.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( i = 0, l = this.length; i < l; i++ ) {
			cur = this[i];

			while ( cur ) {
				if ( pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors) ) {
					ret.push( cur );
					break;

				} else {
					cur = cur.parentNode;
					if ( !cur || !cur.ownerDocument || cur === context || cur.nodeType === 11 ) {
						break;
					}
				}
			}
		}

		ret = ret.length > 1 ? jQuery.unique( ret ) : ret;

		return this.pushStack( ret, "closest", selectors );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		var set = typeof selector === "string" ?
				jQuery( selector, context ) :
				jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
			all = jQuery.merge( this.get(), set );

		return this.pushStack( isDisconnected( set[0] ) || isDisconnected( all[0] ) ?
			all :
			jQuery.unique( all ) );
	},

	andSelf: function() {
		return this.add( this.prevObject );
	}
});

// A painfully simple check to see if an element is disconnected
// from a document (should be improved, where feasible).
function isDisconnected( node ) {
	return !node || !node.parentNode || node.parentNode.nodeType === 11;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return jQuery.nth( elem, 2, "nextSibling" );
	},
	prev: function( elem ) {
		return jQuery.nth( elem, 2, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( elem.parentNode.firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.makeArray( elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( !runtil.test( name ) ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		ret = this.length > 1 && !guaranteedUnique[ name ] ? jQuery.unique( ret ) : ret;

		if ( (this.length > 1 || rmultiselector.test( selector )) && rparentsprev.test( name ) ) {
			ret = ret.reverse();
		}

		return this.pushStack( ret, name, slice.call( arguments ).join(",") );
	};
});

jQuery.extend({
	filter: function( expr, elems, not ) {
		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 ?
			jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] :
			jQuery.find.matches(expr, elems);
	},

	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	nth: function( cur, result, dir, elem ) {
		result = result || 1;
		var num = 0;

		for ( ; cur; cur = cur[dir] ) {
			if ( cur.nodeType === 1 && ++num === result ) {
				break;
			}
		}

		return cur;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, keep ) {

	// Can't pass null or undefined to indexOf in Firefox 4
	// Set to 0 to skip string check
	qualifier = qualifier || 0;

	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep(elements, function( elem, i ) {
			var retVal = !!qualifier.call( elem, i, elem );
			return retVal === keep;
		});

	} else if ( qualifier.nodeType ) {
		return jQuery.grep(elements, function( elem, i ) {
			return ( elem === qualifier ) === keep;
		});

	} else if ( typeof qualifier === "string" ) {
		var filtered = jQuery.grep(elements, function( elem ) {
			return elem.nodeType === 1;
		});

		if ( isSimple.test( qualifier ) ) {
			return jQuery.filter(qualifier, filtered, !keep);
		} else {
			qualifier = jQuery.filter( qualifier, filtered );
		}
	}

	return jQuery.grep(elements, function( elem, i ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) === keep;
	});
}




function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
	safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|canvas|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style)/i,
	rnocache = /<(?:script|object|embed|option|style)/i,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")", "i"),
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /\/(java|ecma)script/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/,
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		area: [ 1, "<map>", "</map>" ],
		_default: [ 0, "", "" ]
	},
	safeFragment = createSafeFragment( document );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// IE can't serialize <link> and <script> tags normally
if ( !jQuery.support.htmlSerialize ) {
	wrapMap._default = [ 1, "div<div>", "</div>" ];
}

jQuery.fn.extend({
	text: function( text ) {
		if ( jQuery.isFunction(text) ) {
			return this.each(function(i) {
				var self = jQuery( this );

				self.text( text.call(this, i, self.text()) );
			});
		}

		if ( typeof text !== "object" && text !== undefined ) {
			return this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );
		}

		return jQuery.text( this );
	},

	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	},

	append: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip(arguments, true, function( elem ) {
			if ( this.nodeType === 1 ) {
				this.insertBefore( elem, this.firstChild );
			}
		});
	},

	before: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this );
			});
		} else if ( arguments.length ) {
			var set = jQuery.clean( arguments );
			set.push.apply( set, this.toArray() );
			return this.pushStack( set, "before", arguments );
		}
	},

	after: function() {
		if ( this[0] && this[0].parentNode ) {
			return this.domManip(arguments, false, function( elem ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			});
		} else if ( arguments.length ) {
			var set = this.pushStack( this, "after", arguments );
			set.push.apply( set, jQuery.clean(arguments) );
			return set;
		}
	},

	// keepData is for internal use only--do not document
	remove: function( selector, keepData ) {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			if ( !selector || jQuery.filter( selector, [ elem ] ).length ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( elem.getElementsByTagName("*") );
					jQuery.cleanData( [ elem ] );
				}

				if ( elem.parentNode ) {
					elem.parentNode.removeChild( elem );
				}
			}
		}

		return this;
	},

	empty: function() {
		for ( var i = 0, elem; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( elem.getElementsByTagName("*") );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function () {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		if ( value === undefined ) {
			return this[0] && this[0].nodeType === 1 ?
				this[0].innerHTML.replace(rinlinejQuery, "") :
				null;

		// See if we can take a shortcut and just use innerHTML
		} else if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
			(jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value )) &&
			!wrapMap[ (rtagName.exec( value ) || ["", ""])[1].toLowerCase() ] ) {

			value = value.replace(rxhtmlTag, "<$1></$2>");

			try {
				for ( var i = 0, l = this.length; i < l; i++ ) {
					// Remove element nodes and prevent memory leaks
					if ( this[i].nodeType === 1 ) {
						jQuery.cleanData( this[i].getElementsByTagName("*") );
						this[i].innerHTML = value;
					}
				}

			// If using innerHTML throws an exception, use the fallback method
			} catch(e) {
				this.empty().append( value );
			}

		} else if ( jQuery.isFunction( value ) ) {
			this.each(function(i){
				var self = jQuery( this );

				self.html( value.call(this, i, self.html()) );
			});

		} else {
			this.empty().append( value );
		}

		return this;
	},

	replaceWith: function( value ) {
		if ( this[0] && this[0].parentNode ) {
			// Make sure that the elements are removed from the DOM before they are inserted
			// this can help fix replacing a parent with child elements
			if ( jQuery.isFunction( value ) ) {
				return this.each(function(i) {
					var self = jQuery(this), old = self.html();
					self.replaceWith( value.call( this, i, old ) );
				});
			}

			if ( typeof value !== "string" ) {
				value = jQuery( value ).detach();
			}

			return this.each(function() {
				var next = this.nextSibling,
					parent = this.parentNode;

				jQuery( this ).remove();

				if ( next ) {
					jQuery(next).before( value );
				} else {
					jQuery(parent).append( value );
				}
			});
		} else {
			return this.length ?
				this.pushStack( jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value ) :
				this;
		}
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, table, callback ) {
		var results, first, fragment, parent,
			value = args[0],
			scripts = [];

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( !jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test( value ) ) {
			return this.each(function() {
				jQuery(this).domManip( args, table, callback, true );
			});
		}

		if ( jQuery.isFunction(value) ) {
			return this.each(function(i) {
				var self = jQuery(this);
				args[0] = value.call(this, i, table ? self.html() : undefined);
				self.domManip( args, table, callback );
			});
		}

		if ( this[0] ) {
			parent = value && value.parentNode;

			// If we're in a fragment, just use that instead of building a new one
			if ( jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length ) {
				results = { fragment: parent };

			} else {
				results = jQuery.buildFragment( args, this, scripts );
			}

			fragment = results.fragment;

			if ( fragment.childNodes.length === 1 ) {
				first = fragment = fragment.firstChild;
			} else {
				first = fragment.firstChild;
			}

			if ( first ) {
				table = table && jQuery.nodeName( first, "tr" );

				for ( var i = 0, l = this.length, lastIndex = l - 1; i < l; i++ ) {
					callback.call(
						table ?
							root(this[i], first) :
							this[i],
						// Make sure that we do not leak memory by inadvertently discarding
						// the original fragment (which might have attached data) instead of
						// using it; in addition, use the original fragment object for the last
						// item instead of first because it can end up being emptied incorrectly
						// in certain situations (Bug #8070).
						// Fragments from the fragment cache must always be cloned and never used
						// in place.
						results.cacheable || ( l > 1 && i < lastIndex ) ?
							jQuery.clone( fragment, true, true ) :
							fragment
					);
				}
			}

			if ( scripts.length ) {
				jQuery.each( scripts, evalScript );
			}
		}

		return this;
	}
});

function root( elem, cur ) {
	return jQuery.nodeName(elem, "table") ?
		(elem.getElementsByTagName("tbody")[0] ||
		elem.appendChild(elem.ownerDocument.createElement("tbody"))) :
		elem;
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type + ( events[ type ][ i ].namespace ? "." : "" ) + events[ type ][ i ].namespace, events[ type ][ i ], events[ type ][ i ].data );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function cloneFixAttributes( src, dest ) {
	var nodeName;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	// clearAttributes removes the attributes, which we don't want,
	// but also removes the attachEvent events, which we *do* want
	if ( dest.clearAttributes ) {
		dest.clearAttributes();
	}

	// mergeAttributes, in contrast, only merges back on the
	// original attributes, not the events
	if ( dest.mergeAttributes ) {
		dest.mergeAttributes( src );
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 fail to clone children inside object elements that use
	// the proprietary classid attribute value (rather than the type
	// attribute) to identify the type of content to display
	if ( nodeName === "object" ) {
		dest.outerHTML = src.outerHTML;

	} else if ( nodeName === "input" && (src.type === "checkbox" || src.type === "radio") ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set
		if ( src.checked ) {
			dest.defaultChecked = dest.checked = src.checked;
		}

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}

	// Event data gets referenced instead of copied if the expando
	// gets copied too
	dest.removeAttribute( jQuery.expando );
}

jQuery.buildFragment = function( args, nodes, scripts ) {
	var fragment, cacheable, cacheresults, doc,
	first = args[ 0 ];

	// nodes may contain either an explicit document object,
	// a jQuery collection or context object.
	// If nodes[0] contains a valid object to assign to doc
	if ( nodes && nodes[0] ) {
		doc = nodes[0].ownerDocument || nodes[0];
	}

	// Ensure that an attr object doesn't incorrectly stand in as a document object
	// Chrome and Firefox seem to allow this to occur and will throw exception
	// Fixes #8950
	if ( !doc.createDocumentFragment ) {
		doc = document;
	}

	// Only cache "small" (1/2 KB) HTML strings that are associated with the main document
	// Cloning options loses the selected state, so don't cache them
	// IE 6 doesn't like it when you put <object> or <embed> elements in a fragment
	// Also, WebKit does not clone 'checked' attributes on cloneNode, so don't cache
	// Lastly, IE6,7,8 will not correctly reuse cached fragments that were created from unknown elems #10501
	if ( args.length === 1 && typeof first === "string" && first.length < 512 && doc === document &&
		first.charAt(0) === "<" && !rnocache.test( first ) &&
		(jQuery.support.checkClone || !rchecked.test( first )) &&
		(jQuery.support.html5Clone || !rnoshimcache.test( first )) ) {

		cacheable = true;

		cacheresults = jQuery.fragments[ first ];
		if ( cacheresults && cacheresults !== 1 ) {
			fragment = cacheresults;
		}
	}

	if ( !fragment ) {
		fragment = doc.createDocumentFragment();
		jQuery.clean( args, doc, fragment, scripts );
	}

	if ( cacheable ) {
		jQuery.fragments[ first ] = cacheresults ? fragment : 1;
	}

	return { fragment: fragment, cacheable: cacheable };
};

jQuery.fragments = {};

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var ret = [],
			insert = jQuery( selector ),
			parent = this.length === 1 && this[0].parentNode;

		if ( parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1 ) {
			insert[ original ]( this[0] );
			return this;

		} else {
			for ( var i = 0, l = insert.length; i < l; i++ ) {
				var elems = ( i > 0 ? this.clone(true) : this ).get();
				jQuery( insert[i] )[ original ]( elems );
				ret = ret.concat( elems );
			}

			return this.pushStack( ret, name, insert.selector );
		}
	};
});

function getAll( elem ) {
	if ( typeof elem.getElementsByTagName !== "undefined" ) {
		return elem.getElementsByTagName( "*" );

	} else if ( typeof elem.querySelectorAll !== "undefined" ) {
		return elem.querySelectorAll( "*" );

	} else {
		return [];
	}
}

// Used in clean, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( elem.type === "checkbox" || elem.type === "radio" ) {
		elem.defaultChecked = elem.checked;
	}
}
// Finds all inputs and passes them to fixDefaultChecked
function findInputs( elem ) {
	var nodeName = ( elem.nodeName || "" ).toLowerCase();
	if ( nodeName === "input" ) {
		fixDefaultChecked( elem );
	// Skip scripts, get other children
	} else if ( nodeName !== "script" && typeof elem.getElementsByTagName !== "undefined" ) {
		jQuery.grep( elem.getElementsByTagName("input"), fixDefaultChecked );
	}
}

// Derived From: http://www.iecss.com/shimprove/javascript/shimprove.1-0-1.js
function shimCloneNode( elem ) {
	var div = document.createElement( "div" );
	safeFragment.appendChild( div );

	div.innerHTML = elem.outerHTML;
	return div.firstChild;
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var srcElements,
			destElements,
			i,
			// IE<=8 does not properly clone detached, unknown element nodes
			clone = jQuery.support.html5Clone || !rnoshimcache.test( "<" + elem.nodeName ) ?
				elem.cloneNode( true ) :
				shimCloneNode( elem );

		if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {
			// IE copies events bound via attachEvent when using cloneNode.
			// Calling detachEvent on the clone will also remove the events
			// from the original. In order to get around this, we use some
			// proprietary methods to clear the events. Thanks to MooTools
			// guys for this hotness.

			cloneFixAttributes( elem, clone );

			// Using Sizzle here is crazy slow, so we use getElementsByTagName instead
			srcElements = getAll( elem );
			destElements = getAll( clone );

			// Weird iteration because IE will replace the length property
			// with an element if you are cloning the body and one of the
			// elements on the page has a name or id of "length"
			for ( i = 0; srcElements[i]; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					cloneFixAttributes( srcElements[i], destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			cloneCopyEvent( elem, clone );

			if ( deepDataAndEvents ) {
				srcElements = getAll( elem );
				destElements = getAll( clone );

				for ( i = 0; srcElements[i]; ++i ) {
					cloneCopyEvent( srcElements[i], destElements[i] );
				}
			}
		}

		srcElements = destElements = null;

		// Return the cloned set
		return clone;
	},

	clean: function( elems, context, fragment, scripts ) {
		var checkScriptType;

		context = context || document;

		// !context.createElement fails in IE with an error but returns typeof 'object'
		if ( typeof context.createElement === "undefined" ) {
			context = context.ownerDocument || context[0] && context[0].ownerDocument || document;
		}

		var ret = [], j;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( typeof elem === "number" ) {
				elem += "";
			}

			if ( !elem ) {
				continue;
			}

			// Convert html string into DOM nodes
			if ( typeof elem === "string" ) {
				if ( !rhtml.test( elem ) ) {
					elem = context.createTextNode( elem );
				} else {
					// Fix "XHTML"-style tags in all browsers
					elem = elem.replace(rxhtmlTag, "<$1></$2>");

					// Trim whitespace, otherwise indexOf won't work as expected
					var tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase(),
						wrap = wrapMap[ tag ] || wrapMap._default,
						depth = wrap[0],
						div = context.createElement("div");

					// Append wrapper element to unknown element safe doc fragment
					if ( context === document ) {
						// Use the fragment we've already created for this document
						safeFragment.appendChild( div );
					} else {
						// Use a fragment created with the owner document
						createSafeFragment( context ).appendChild( div );
					}

					// Go to html and back, then peel off extra wrappers
					div.innerHTML = wrap[1] + elem + wrap[2];

					// Move to the right depth
					while ( depth-- ) {
						div = div.lastChild;
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !jQuery.support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						var hasBody = rtbody.test(elem),
							tbody = tag === "table" && !hasBody ?
								div.firstChild && div.firstChild.childNodes :

								// String was a bare <thead> or <tfoot>
								wrap[1] === "<table>" && !hasBody ?
									div.childNodes :
									[];

						for ( j = tbody.length - 1; j >= 0 ; --j ) {
							if ( jQuery.nodeName( tbody[ j ], "tbody" ) && !tbody[ j ].childNodes.length ) {
								tbody[ j ].parentNode.removeChild( tbody[ j ] );
							}
						}
					}

					// IE completely kills leading whitespace when innerHTML is used
					if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						div.insertBefore( context.createTextNode( rleadingWhitespace.exec(elem)[0] ), div.firstChild );
					}

					elem = div.childNodes;
				}
			}

			// Resets defaultChecked for any radios and checkboxes
			// about to be appended to the DOM in IE 6/7 (#8060)
			var len;
			if ( !jQuery.support.appendChecked ) {
				if ( elem[0] && typeof (len = elem.length) === "number" ) {
					for ( j = 0; j < len; j++ ) {
						findInputs( elem[j] );
					}
				} else {
					findInputs( elem );
				}
			}

			if ( elem.nodeType ) {
				ret.push( elem );
			} else {
				ret = jQuery.merge( ret, elem );
			}
		}

		if ( fragment ) {
			checkScriptType = function( elem ) {
				return !elem.type || rscriptType.test( elem.type );
			};
			for ( i = 0; ret[i]; i++ ) {
				if ( scripts && jQuery.nodeName( ret[i], "script" ) && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript") ) {
					scripts.push( ret[i].parentNode ? ret[i].parentNode.removeChild( ret[i] ) : ret[i] );

				} else {
					if ( ret[i].nodeType === 1 ) {
						var jsTags = jQuery.grep( ret[i].getElementsByTagName( "script" ), checkScriptType );

						ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
					}
					fragment.appendChild( ret[i] );
				}
			}
		}

		return ret;
	},

	cleanData: function( elems ) {
		var data, id,
			cache = jQuery.cache,
			special = jQuery.event.special,
			deleteExpando = jQuery.support.deleteExpando;

		for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {
			if ( elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()] ) {
				continue;
			}

			id = elem[ jQuery.expando ];

			if ( id ) {
				data = cache[ id ];

				if ( data && data.events ) {
					for ( var type in data.events ) {
						if ( special[ type ] ) {
							jQuery.event.remove( elem, type );

						// This is a shortcut to avoid jQuery.event.remove's overhead
						} else {
							jQuery.removeEvent( elem, type, data.handle );
						}
					}

					// Null the DOM reference to avoid IE6/7/8 leak (#7054)
					if ( data.handle ) {
						data.handle.elem = null;
					}
				}

				if ( deleteExpando ) {
					delete elem[ jQuery.expando ];

				} else if ( elem.removeAttribute ) {
					elem.removeAttribute( jQuery.expando );
				}

				delete cache[ id ];
			}
		}
	}
});

function evalScript( i, elem ) {
	if ( elem.src ) {
		jQuery.ajax({
			url: elem.src,
			async: false,
			dataType: "script"
		});
	} else {
		jQuery.globalEval( ( elem.text || elem.textContent || elem.innerHTML || "" ).replace( rcleanScript, "/*$0*/" ) );
	}

	if ( elem.parentNode ) {
		elem.parentNode.removeChild( elem );
	}
}




var ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity=([^)]*)/,
	// fixed for IE9, see #8346
	rupper = /([A-Z]|^ms)/g,
	rnumpx = /^-?\d+(?:px)?$/i,
	rnum = /^-?\d/,
	rrelNum = /^([\-+])=([\-+.\de]+)/,

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssWidth = [ "Left", "Right" ],
	cssHeight = [ "Top", "Bottom" ],
	curCSS,

	getComputedStyle,
	currentStyle;

jQuery.fn.css = function( name, value ) {
	// Setting 'undefined' is a no-op
	if ( arguments.length === 2 && value === undefined ) {
		return this;
	}

	return jQuery.access( this, name, value, true, function( elem, name, value ) {
		return value !== undefined ?
			jQuery.style( elem, name, value ) :
			jQuery.css( elem, name );
	});
};

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity", "opacity" );
					return ret === "" ? "1" : ret;

				} else {
					return elem.style.opacity;
				}
			}
		}
	},

	// Exclude the following css properties to add px
	cssNumber: {
		"fillOpacity": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, origName = jQuery.camelCase( name ),
			style = elem.style, hooks = jQuery.cssHooks[ origName ];

		name = jQuery.cssProps[ origName ] || origName;

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( +( ret[1] + 1) * +ret[2] ) + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that NaN and null values aren't set. See: #7116
			if ( value == null || type === "number" && isNaN( value ) ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value )) !== undefined ) {
				// Wrapped to prevent IE from throwing errors when 'invalid' values are provided
				// Fixes bug #5509
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra ) {
		var ret, hooks;

		// Make sure that we're working with the right name
		name = jQuery.camelCase( name );
		hooks = jQuery.cssHooks[ name ];
		name = jQuery.cssProps[ name ] || name;

		// cssFloat needs a special treatment
		if ( name === "cssFloat" ) {
			name = "float";
		}

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks && (ret = hooks.get( elem, true, extra )) !== undefined ) {
			return ret;

		// Otherwise, if a way to get the computed value exists, use that
		} else if ( curCSS ) {
			return curCSS( elem, name );
		}
	},

	// A method for quickly swapping in/out CSS properties to get correct calculations
	swap: function( elem, options, callback ) {
		var old = {};

		// Remember the old values, and insert the new ones
		for ( var name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		callback.call( elem );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}
	}
});

// DEPRECATED, Use jQuery.css() instead
jQuery.curCSS = jQuery.css;

jQuery.each(["height", "width"], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			var val;

			if ( computed ) {
				if ( elem.offsetWidth !== 0 ) {
					return getWH( elem, name, extra );
				} else {
					jQuery.swap( elem, cssShow, function() {
						val = getWH( elem, name, extra );
					});
				}

				return val;
			}
		},

		set: function( elem, value ) {
			if ( rnumpx.test( value ) ) {
				// ignore negative width and height values #1599
				value = parseFloat( value );

				if ( value >= 0 ) {
					return value + "px";
				}

			} else {
				return value;
			}
		}
	};
});

if ( !jQuery.support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( parseFloat( RegExp.$1 ) / 100 ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			if ( value >= 1 && jQuery.trim( filter.replace( ralpha, "" ) ) === "" ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there there is no filter style applied in a css rule, we are done
				if ( currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery(function() {
	// This hook cannot be added until DOM ready because the support test
	// for it is not run until after DOM ready
	if ( !jQuery.support.reliableMarginRight ) {
		jQuery.cssHooks.marginRight = {
			get: function( elem, computed ) {
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// Work around by temporarily setting element display to inline-block
				var ret;
				jQuery.swap( elem, { "display": "inline-block" }, function() {
					if ( computed ) {
						ret = curCSS( elem, "margin-right", "marginRight" );
					} else {
						ret = elem.style.marginRight;
					}
				});
				return ret;
			}
		};
	}
});

if ( document.defaultView && document.defaultView.getComputedStyle ) {
	getComputedStyle = function( elem, name ) {
		var ret, defaultView, computedStyle;

		name = name.replace( rupper, "-$1" ).toLowerCase();

		if ( (defaultView = elem.ownerDocument.defaultView) &&
				(computedStyle = defaultView.getComputedStyle( elem, null )) ) {
			ret = computedStyle.getPropertyValue( name );
			if ( ret === "" && !jQuery.contains( elem.ownerDocument.documentElement, elem ) ) {
				ret = jQuery.style( elem, name );
			}
		}

		return ret;
	};
}

if ( document.documentElement.currentStyle ) {
	currentStyle = function( elem, name ) {
		var left, rsLeft, uncomputed,
			ret = elem.currentStyle && elem.currentStyle[ name ],
			style = elem.style;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret === null && style && (uncomputed = style[ name ]) ) {
			ret = uncomputed;
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		if ( !rnumpx.test( ret ) && rnum.test( ret ) ) {

			// Remember the original values
			left = style.left;
			rsLeft = elem.runtimeStyle && elem.runtimeStyle.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				elem.runtimeStyle.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ( ret || 0 );
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				elem.runtimeStyle.left = rsLeft;
			}
		}

		return ret === "" ? "auto" : ret;
	};
}

curCSS = getComputedStyle || currentStyle;

function getWH( elem, name, extra ) {

	// Start with offset property
	var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		which = name === "width" ? cssWidth : cssHeight,
		i = 0,
		len = which.length;

	if ( val > 0 ) {
		if ( extra !== "border" ) {
			for ( ; i < len; i++ ) {
				if ( !extra ) {
					val -= parseFloat( jQuery.css( elem, "padding" + which[ i ] ) ) || 0;
				}
				if ( extra === "margin" ) {
					val += parseFloat( jQuery.css( elem, extra + which[ i ] ) ) || 0;
				} else {
					val -= parseFloat( jQuery.css( elem, "border" + which[ i ] + "Width" ) ) || 0;
				}
			}
		}

		return val + "px";
	}

	// Fall back to computed then uncomputed css if necessary
	val = curCSS( elem, name, name );
	if ( val < 0 || val == null ) {
		val = elem.style[ name ] || 0;
	}
	// Normalize "", auto, and prepare for extra
	val = parseFloat( val ) || 0;

	// Add padding, border, margin
	if ( extra ) {
		for ( ; i < len; i++ ) {
			val += parseFloat( jQuery.css( elem, "padding" + which[ i ] ) ) || 0;
			if ( extra !== "padding" ) {
				val += parseFloat( jQuery.css( elem, "border" + which[ i ] + "Width" ) ) || 0;
			}
			if ( extra === "margin" ) {
				val += parseFloat( jQuery.css( elem, extra + which[ i ] ) ) || 0;
			}
		}
	}

	return val + "px";
}

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.hidden = function( elem ) {
		var width = elem.offsetWidth,
			height = elem.offsetHeight;

		return ( width === 0 && height === 0 ) || (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
	};

	jQuery.expr.filters.visible = function( elem ) {
		return !jQuery.expr.filters.hidden( elem );
	};
}




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rhash = /#.*$/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	rinput = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rquery = /\?/,
	rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	rselectTextarea = /^(?:select|textarea)/i,
	rspacesAjax = /\s+/,
	rts = /([?&])_=[^&]*/,
	rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,

	// Keep a copy of the old load method
	_load = jQuery.fn.load,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Document location
	ajaxLocation,

	// Document location segments
	ajaxLocParts,

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = ["*/"] + ["*"];

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		if ( jQuery.isFunction( func ) ) {
			var dataTypes = dataTypeExpression.toLowerCase().split( rspacesAjax ),
				i = 0,
				length = dataTypes.length,
				dataType,
				list,
				placeBefore;

			// For each dataType in the dataTypeExpression
			for ( ; i < length; i++ ) {
				dataType = dataTypes[ i ];
				// We control if we're asked to add before
				// any existing element
				placeBefore = /^\+/.test( dataType );
				if ( placeBefore ) {
					dataType = dataType.substr( 1 ) || "*";
				}
				list = structure[ dataType ] = structure[ dataType ] || [];
				// then we add to the structure accordingly
				list[ placeBefore ? "unshift" : "push" ]( func );
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR,
		dataType /* internal */, inspected /* internal */ ) {

	dataType = dataType || options.dataTypes[ 0 ];
	inspected = inspected || {};

	inspected[ dataType ] = true;

	var list = structure[ dataType ],
		i = 0,
		length = list ? list.length : 0,
		executeOnly = ( structure === prefilters ),
		selection;

	for ( ; i < length && ( executeOnly || !selection ); i++ ) {
		selection = list[ i ]( options, originalOptions, jqXHR );
		// If we got redirected to another dataType
		// we try there if executing only and not done already
		if ( typeof selection === "string" ) {
			if ( !executeOnly || inspected[ selection ] ) {
				selection = undefined;
			} else {
				options.dataTypes.unshift( selection );
				selection = inspectPrefiltersOrTransports(
						structure, options, originalOptions, jqXHR, selection, inspected );
			}
		}
	}
	// If we're only executing or nothing was selected
	// we try the catchall dataType if not done already
	if ( ( executeOnly || !selection ) && !inspected[ "*" ] ) {
		selection = inspectPrefiltersOrTransports(
				structure, options, originalOptions, jqXHR, "*", inspected );
	}
	// unnecessary when only executing (prefilters)
	// but it'll be ignored by the caller in that case
	return selection;
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};
	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}
}

jQuery.fn.extend({
	load: function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );

		// Don't do a request if no elements are being requested
		} else if ( !this.length ) {
			return this;
		}

		var off = url.indexOf( " " );
		if ( off >= 0 ) {
			var selector = url.slice( off, url.length );
			url = url.slice( 0, off );
		}

		// Default to a GET request
		var type = "GET";

		// If the second parameter was provided
		if ( params ) {
			// If it's a function
			if ( jQuery.isFunction( params ) ) {
				// We assume that it's the callback
				callback = params;
				params = undefined;

			// Otherwise, build a param string
			} else if ( typeof params === "object" ) {
				params = jQuery.param( params, jQuery.ajaxSettings.traditional );
				type = "POST";
			}
		}

		var self = this;

		// Request the remote document
		jQuery.ajax({
			url: url,
			type: type,
			dataType: "html",
			data: params,
			// Complete callback (responseText is used internally)
			complete: function( jqXHR, status, responseText ) {
				// Store the response as specified by the jqXHR object
				responseText = jqXHR.responseText;
				// If successful, inject the HTML into all the matched elements
				if ( jqXHR.isResolved() ) {
					// #4825: Get the actual response in case
					// a dataFilter is present in ajaxSettings
					jqXHR.done(function( r ) {
						responseText = r;
					});
					// See if a selector was specified
					self.html( selector ?
						// Create a dummy div to hold the results
						jQuery("<div>")
							// inject the contents of the document in, removing the scripts
							// to avoid any 'Permission Denied' errors in IE
							.append(responseText.replace(rscript, ""))

							// Locate the specified elements
							.find(selector) :

						// If not, just inject the full result
						responseText );
				}

				if ( callback ) {
					self.each( callback, [ responseText, status, jqXHR ] );
				}
			}
		});

		return this;
	},

	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},

	serializeArray: function() {
		return this.map(function(){
			return this.elements ? jQuery.makeArray( this.elements ) : this;
		})
		.filter(function(){
			return this.name && !this.disabled &&
				( this.checked || rselectTextarea.test( this.nodeName ) ||
					rinput.test( this.type ) );
		})
		.map(function( i, elem ){
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val, i ){
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( "ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split( " " ), function( i, o ){
	jQuery.fn[ o ] = function( f ){
		return this.on( o, f );
	};
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			type: method,
			url: url,
			data: data,
			success: callback,
			dataType: type
		});
	};
});

jQuery.extend({

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		if ( settings ) {
			// Building a settings object
			ajaxExtend( target, jQuery.ajaxSettings );
		} else {
			// Extending ajaxSettings
			settings = target;
			target = jQuery.ajaxSettings;
		}
		ajaxExtend( target, settings );
		return target;
	},

	ajaxSettings: {
		url: ajaxLocation,
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		type: "GET",
		contentType: "application/x-www-form-urlencoded",
		processData: true,
		async: true,
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		traditional: false,
		headers: {},
		*/

		accepts: {
			xml: "application/xml, text/xml",
			html: "text/html",
			text: "text/plain",
			json: "application/json, text/javascript",
			"*": allTypes
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText"
		},

		// List of data converters
		// 1) key format is "source_type destination_type" (a single space in-between)
		// 2) the catchall symbol "*" can be used for source_type
		converters: {

			// Convert anything to text
			"* text": window.String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			context: true,
			url: true
		}
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events
			// It's the callbackContext if one was provided in the options
			// and if it's a DOM node or a jQuery collection
			globalEventContext = callbackContext !== s &&
				( callbackContext.nodeType || callbackContext instanceof jQuery ) ?
						jQuery( callbackContext ) : jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// ifModified key
			ifModifiedKey,
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// Response headers
			responseHeadersString,
			responseHeaders,
			// transport
			transport,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// The jqXHR state
			state = 0,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Fake xhr
			jqXHR = {

				readyState: 0,

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( !state ) {
						var lname = name.toLowerCase();
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match === undefined ? null : match;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					statusText = statusText || "abort";
					if ( transport ) {
						transport.abort( statusText );
					}
					done( 0, statusText );
					return this;
				}
			};

		// Callback for when everything is done
		// It is defined here because jslint complains if it is declared
		// at the end of the function (which would be more logical and readable)
		function done( status, nativeStatusText, responses, headers ) {

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			var isSuccess,
				success,
				error,
				statusText = nativeStatusText,
				response = responses ? ajaxHandleResponses( s, jqXHR, responses ) : undefined,
				lastModified,
				etag;

			// If successful, handle type chaining
			if ( status >= 200 && status < 300 || status === 304 ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {

					if ( ( lastModified = jqXHR.getResponseHeader( "Last-Modified" ) ) ) {
						jQuery.lastModified[ ifModifiedKey ] = lastModified;
					}
					if ( ( etag = jqXHR.getResponseHeader( "Etag" ) ) ) {
						jQuery.etag[ ifModifiedKey ] = etag;
					}
				}

				// If not modified
				if ( status === 304 ) {

					statusText = "notmodified";
					isSuccess = true;

				// If we have data
				} else {

					try {
						success = ajaxConvert( s, response );
						statusText = "success";
						isSuccess = true;
					} catch(e) {
						// We have a parsererror
						statusText = "parsererror";
						error = e;
					}
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( !statusText || status ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = "" + ( nativeStatusText || statusText );

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajax" + ( isSuccess ? "Success" : "Error" ),
						[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		// Attach deferreds
		deferred.promise( jqXHR );
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;
		jqXHR.complete = completeDeferred.add;

		// Status-dependent callbacks
		jqXHR.statusCode = function( map ) {
			if ( map ) {
				var tmp;
				if ( state < 2 ) {
					for ( tmp in map ) {
						statusCode[ tmp ] = [ statusCode[tmp], map[tmp] ];
					}
				} else {
					tmp = map[ jqXHR.status ];
					jqXHR.then( tmp, tmp );
				}
			}
			return this;
		};

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// We also use the url parameter if available
		s.url = ( ( url || s.url ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().split( rspacesAjax );

		// Determine if a cross-domain request is in order
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] != ajaxLocParts[ 1 ] || parts[ 2 ] != ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? 80 : 443 ) ) !=
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? 80 : 443 ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefiler, stop there
		if ( state === 2 ) {
			return false;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.data;
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Get ifModifiedKey before adding the anti-cache parameter
			ifModifiedKey = s.url;

			// Add anti-cache in url if needed
			if ( s.cache === false ) {

				var ts = jQuery.now(),
					// try replacing _= if it is there
					ret = s.url.replace( rts, "$1_=" + ts );

				// if nothing was replaced, add timestamp to the end
				s.url = ret + ( ( ret === s.url ) ? ( rquery.test( s.url ) ? "&" : "?" ) + "_=" + ts : "" );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			ifModifiedKey = ifModifiedKey || s.url;
			if ( jQuery.lastModified[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ ifModifiedKey ] );
			}
			if ( jQuery.etag[ ifModifiedKey ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ ifModifiedKey ] );
			}
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already
				jqXHR.abort();
				return false;

		}

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;
			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout( function(){
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch (e) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		return jqXHR;
	},

	// Serialize an array of form elements or a set of
	// key/values into a query string
	param: function( a, traditional ) {
		var s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : value;
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( var prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	}
});

function buildParams( prefix, obj, traditional, add ) {
	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// If array item is non-scalar (array or object), encode its
				// numeric index to resolve deserialization ambiguity issues.
				// Note that rack (as of 1.0.0) can't currently deserialize
				// nested arrays properly, and attempting to do so may cause
				// a server error. Possible fixes are to modify rack's
				// deserialization algorithm or to provide an option or flag
				// to force array serialization to be shallow.
				buildParams( prefix + "[" + ( typeof v === "object" || jQuery.isArray(v) ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && obj != null && typeof obj === "object" ) {
		// Serialize object item.
		for ( var name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// This is still on the jQuery object... for now
// Want to move this to jQuery.ajax some day
jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {}

});

/* Handles responses to an ajax request:
 * - sets all responseXXX fields accordingly
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var contents = s.contents,
		dataTypes = s.dataTypes,
		responseFields = s.responseFields,
		ct,
		type,
		finalDataType,
		firstDataType;

	// Fill responseXXX fields
	for ( type in responseFields ) {
		if ( type in responses ) {
			jqXHR[ responseFields[type] ] = responses[ type ];
		}
	}

	// Remove auto dataType and get content-type in the process
	while( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "content-type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

// Chain conversions given the request and the original response
function ajaxConvert( s, response ) {

	// Apply the dataFilter if provided
	if ( s.dataFilter ) {
		response = s.dataFilter( response, s.dataType );
	}

	var dataTypes = s.dataTypes,
		converters = {},
		i,
		key,
		length = dataTypes.length,
		tmp,
		// Current and previous dataTypes
		current = dataTypes[ 0 ],
		prev,
		// Conversion expression
		conversion,
		// Conversion function
		conv,
		// Conversion functions (transitive conversion)
		conv1,
		conv2;

	// For each dataType in the chain
	for ( i = 1; i < length; i++ ) {

		// Create converters map
		// with lowercased keys
		if ( i === 1 ) {
			for ( key in s.converters ) {
				if ( typeof key === "string" ) {
					converters[ key.toLowerCase() ] = s.converters[ key ];
				}
			}
		}

		// Get the dataTypes
		prev = current;
		current = dataTypes[ i ];

		// If current is auto dataType, update it to prev
		if ( current === "*" ) {
			current = prev;
		// If no auto and dataTypes are actually different
		} else if ( prev !== "*" && prev !== current ) {

			// Get the converter
			conversion = prev + " " + current;
			conv = converters[ conversion ] || converters[ "* " + current ];

			// If there is no direct converter, search transitively
			if ( !conv ) {
				conv2 = undefined;
				for ( conv1 in converters ) {
					tmp = conv1.split( " " );
					if ( tmp[ 0 ] === prev || tmp[ 0 ] === "*" ) {
						conv2 = converters[ tmp[1] + " " + current ];
						if ( conv2 ) {
							conv1 = converters[ conv1 ];
							if ( conv1 === true ) {
								conv = conv2;
							} else if ( conv2 === true ) {
								conv = conv1;
							}
							break;
						}
					}
				}
			}
			// If we found no converter, dispatch an error
			if ( !( conv || conv2 ) ) {
				jQuery.error( "No conversion from " + conversion.replace(" "," to ") );
			}
			// If found converter is not an equivalence
			if ( conv !== true ) {
				// Convert with 1 or 2 converters accordingly
				response = conv ? conv( response ) : conv2( conv1(response) );
			}
		}
	}
	return response;
}




var jsc = jQuery.now(),
	jsre = /(\=)\?(&|$)|\?\?/i;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		return jQuery.expando + "_" + ( jsc++ );
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var inspectData = s.contentType === "application/x-www-form-urlencoded" &&
		( typeof s.data === "string" );

	if ( s.dataTypes[ 0 ] === "jsonp" ||
		s.jsonp !== false && ( jsre.test( s.url ) ||
				inspectData && jsre.test( s.data ) ) ) {

		var responseContainer,
			jsonpCallback = s.jsonpCallback =
				jQuery.isFunction( s.jsonpCallback ) ? s.jsonpCallback() : s.jsonpCallback,
			previous = window[ jsonpCallback ],
			url = s.url,
			data = s.data,
			replace = "$1" + jsonpCallback + "$2";

		if ( s.jsonp !== false ) {
			url = url.replace( jsre, replace );
			if ( s.url === url ) {
				if ( inspectData ) {
					data = data.replace( jsre, replace );
				}
				if ( s.data === data ) {
					// Add callback manually
					url += (/\?/.test( url ) ? "&" : "?") + s.jsonp + "=" + jsonpCallback;
				}
			}
		}

		s.url = url;
		s.data = data;

		// Install callback
		window[ jsonpCallback ] = function( response ) {
			responseContainer = [ response ];
		};

		// Clean-up function
		jqXHR.always(function() {
			// Set callback back to previous value
			window[ jsonpCallback ] = previous;
			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( previous ) ) {
				window[ jsonpCallback ]( responseContainer[ 0 ] );
			}
		});

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( jsonpCallback + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Delegate to script
		return "script";
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /javascript|ecmascript/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || document.getElementsByTagName( "head" )[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = "async";

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( head && script.parentNode ) {
							head.removeChild( script );
						}

						// Dereference the script
						script = undefined;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};
				// Use insertBefore instead of appendChild  to circumvent an IE6 bug.
				// This arises when a base node is used (#2709 and #4378).
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( 0, 1 );
				}
			}
		};
	}
});




var // #5280: Internet Explorer will keep connections alive if we don't abort on unload
	xhrOnUnloadAbort = window.ActiveXObject ? function() {
		// Abort all pending requests
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( 0, 1 );
		}
	} : false,
	xhrId = 0,
	xhrCallbacks;

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
	/* Microsoft failed to properly
	 * implement the XMLHttpRequest in IE7 (can't request local files),
	 * so we use the ActiveXObject when it is available
	 * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
	 * we need a fallback.
	 */
	function() {
		return !this.isLocal && createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

// Determine support properties
(function( xhr ) {
	jQuery.extend( jQuery.support, {
		ajax: !!xhr,
		cors: !!xhr && ( "withCredentials" in xhr )
	});
})( jQuery.ajaxSettings.xhr() );

// Create transport if the browser can provide an xhr
if ( jQuery.support.ajax ) {

	jQuery.ajaxTransport(function( s ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !s.crossDomain || jQuery.support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {

					// Get a new xhr
					var xhr = s.xhr(),
						handle,
						i;

					// Open the socket
					// Passing null username, generates a login popup on Opera (#2865)
					if ( s.username ) {
						xhr.open( s.type, s.url, s.async, s.username, s.password );
					} else {
						xhr.open( s.type, s.url, s.async );
					}

					// Apply custom fields if provided
					if ( s.xhrFields ) {
						for ( i in s.xhrFields ) {
							xhr[ i ] = s.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( s.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( s.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !s.crossDomain && !headers["X-Requested-With"] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Need an extra try/catch for cross domain requests in Firefox 3
					try {
						for ( i in headers ) {
							xhr.setRequestHeader( i, headers[ i ] );
						}
					} catch( _ ) {}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( s.hasContent && s.data ) || null );

					// Listener
					callback = function( _, isAbort ) {

						var status,
							statusText,
							responseHeaders,
							responses,
							xml;

						// Firefox throws exceptions when accessing properties
						// of an xhr when a network error occured
						// http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
						try {

							// Was never called and is aborted or complete
							if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

								// Only called once
								callback = undefined;

								// Do not keep as active anymore
								if ( handle ) {
									xhr.onreadystatechange = jQuery.noop;
									if ( xhrOnUnloadAbort ) {
										delete xhrCallbacks[ handle ];
									}
								}

								// If it's an abort
								if ( isAbort ) {
									// Abort it manually if needed
									if ( xhr.readyState !== 4 ) {
										xhr.abort();
									}
								} else {
									status = xhr.status;
									responseHeaders = xhr.getAllResponseHeaders();
									responses = {};
									xml = xhr.responseXML;

									// Construct response list
									if ( xml && xml.documentElement /* #4958 */ ) {
										responses.xml = xml;
									}
									responses.text = xhr.responseText;

									// Firefox throws an exception when accessing
									// statusText for faulty cross-domain requests
									try {
										statusText = xhr.statusText;
									} catch( e ) {
										// We normalize with Webkit giving an empty statusText
										statusText = "";
									}

									// Filter status for non standard behaviors

									// If the request is local and we have data: assume a success
									// (success with no data won't get notified, that's the best we
									// can do given current implementations)
									if ( !status && s.isLocal && !s.crossDomain ) {
										status = responses.text ? 200 : 404;
									// IE - #1450: sometimes returns 1223 when it should be 204
									} else if ( status === 1223 ) {
										status = 204;
									}
								}
							}
						} catch( firefoxAccessException ) {
							if ( !isAbort ) {
								complete( -1, firefoxAccessException );
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, responseHeaders );
						}
					};

					// if we're in sync mode or it's in cache
					// and has been retrieved directly (IE6 & IE7)
					// we need to manually fire the callback
					if ( !s.async || xhr.readyState === 4 ) {
						callback();
					} else {
						handle = ++xhrId;
						if ( xhrOnUnloadAbort ) {
							// Create the active xhrs callbacks list if needed
							// and attach the unload handler
							if ( !xhrCallbacks ) {
								xhrCallbacks = {};
								jQuery( window ).unload( xhrOnUnloadAbort );
							}
							// Add to list of active xhrs callbacks
							xhrCallbacks[ handle ] = callback;
						}
						xhr.onreadystatechange = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback(0,1);
					}
				}
			};
		}
	});
}




var elemdisplay = {},
	iframe, iframeDoc,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
	timerId,
	fxAttrs = [
		// height animations
		[ "height", "marginTop", "marginBottom", "paddingTop", "paddingBottom" ],
		// width animations
		[ "width", "marginLeft", "marginRight", "paddingLeft", "paddingRight" ],
		// opacity animations
		[ "opacity" ]
	],
	fxNow;

jQuery.fn.extend({
	show: function( speed, easing, callback ) {
		var elem, display;

		if ( speed || speed === 0 ) {
			return this.animate( genFx("show", 3), speed, easing, callback );

		} else {
			for ( var i = 0, j = this.length; i < j; i++ ) {
				elem = this[ i ];

				if ( elem.style ) {
					display = elem.style.display;

					// Reset the inline display of this element to learn if it is
					// being hidden by cascaded rules or not
					if ( !jQuery._data(elem, "olddisplay") && display === "none" ) {
						display = elem.style.display = "";
					}

					// Set elements which have been overridden with display: none
					// in a stylesheet to whatever the default browser style is
					// for such an element
					if ( display === "" && jQuery.css(elem, "display") === "none" ) {
						jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
					}
				}
			}

			// Set the display of most of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				elem = this[ i ];

				if ( elem.style ) {
					display = elem.style.display;

					if ( display === "" || display === "none" ) {
						elem.style.display = jQuery._data( elem, "olddisplay" ) || "";
					}
				}
			}

			return this;
		}
	},

	hide: function( speed, easing, callback ) {
		if ( speed || speed === 0 ) {
			return this.animate( genFx("hide", 3), speed, easing, callback);

		} else {
			var elem, display,
				i = 0,
				j = this.length;

			for ( ; i < j; i++ ) {
				elem = this[i];
				if ( elem.style ) {
					display = jQuery.css( elem, "display" );

					if ( display !== "none" && !jQuery._data( elem, "olddisplay" ) ) {
						jQuery._data( elem, "olddisplay", display );
					}
				}
			}

			// Set the display of the elements in a second loop
			// to avoid the constant reflow
			for ( i = 0; i < j; i++ ) {
				if ( this[i].style ) {
					this[i].style.display = "none";
				}
			}

			return this;
		}
	},

	// Save the old toggle function
	_toggle: jQuery.fn.toggle,

	toggle: function( fn, fn2, callback ) {
		var bool = typeof fn === "boolean";

		if ( jQuery.isFunction(fn) && jQuery.isFunction(fn2) ) {
			this._toggle.apply( this, arguments );

		} else if ( fn == null || bool ) {
			this.each(function() {
				var state = bool ? fn : jQuery(this).is(":hidden");
				jQuery(this)[ state ? "show" : "hide" ]();
			});

		} else {
			this.animate(genFx("toggle", 3), fn, fn2, callback);
		}

		return this;
	},

	fadeTo: function( speed, to, easing, callback ) {
		return this.filter(":hidden").css("opacity", 0).show().end()
					.animate({opacity: to}, speed, easing, callback);
	},

	animate: function( prop, speed, easing, callback ) {
		var optall = jQuery.speed( speed, easing, callback );

		if ( jQuery.isEmptyObject( prop ) ) {
			return this.each( optall.complete, [ false ] );
		}

		// Do not change referenced properties as per-property easing will be lost
		prop = jQuery.extend( {}, prop );

		function doAnimation() {
			// XXX 'this' does not always have a nodeName when running the
			// test suite

			if ( optall.queue === false ) {
				jQuery._mark( this );
			}

			var opt = jQuery.extend( {}, optall ),
				isElement = this.nodeType === 1,
				hidden = isElement && jQuery(this).is(":hidden"),
				name, val, p, e,
				parts, start, end, unit,
				method;

			// will store per property easing and be used to determine when an animation is complete
			opt.animatedProperties = {};

			for ( p in prop ) {

				// property name normalization
				name = jQuery.camelCase( p );
				if ( p !== name ) {
					prop[ name ] = prop[ p ];
					delete prop[ p ];
				}

				val = prop[ name ];

				// easing resolution: per property > opt.specialEasing > opt.easing > 'swing' (default)
				if ( jQuery.isArray( val ) ) {
					opt.animatedProperties[ name ] = val[ 1 ];
					val = prop[ name ] = val[ 0 ];
				} else {
					opt.animatedProperties[ name ] = opt.specialEasing && opt.specialEasing[ name ] || opt.easing || 'swing';
				}

				if ( val === "hide" && hidden || val === "show" && !hidden ) {
					return opt.complete.call( this );
				}

				if ( isElement && ( name === "height" || name === "width" ) ) {
					// Make sure that nothing sneaks out
					// Record all 3 overflow attributes because IE does not
					// change the overflow attribute when overflowX and
					// overflowY are set to the same value
					opt.overflow = [ this.style.overflow, this.style.overflowX, this.style.overflowY ];

					// Set display property to inline-block for height/width
					// animations on inline elements that are having width/height animated
					if ( jQuery.css( this, "display" ) === "inline" &&
							jQuery.css( this, "float" ) === "none" ) {

						// inline-level elements accept inline-block;
						// block-level elements need to be inline with layout
						if ( !jQuery.support.inlineBlockNeedsLayout || defaultDisplay( this.nodeName ) === "inline" ) {
							this.style.display = "inline-block";

						} else {
							this.style.zoom = 1;
						}
					}
				}
			}

			if ( opt.overflow != null ) {
				this.style.overflow = "hidden";
			}

			for ( p in prop ) {
				e = new jQuery.fx( this, opt, p );
				val = prop[ p ];

				if ( rfxtypes.test( val ) ) {

					// Tracks whether to show or hide based on private
					// data attached to the element
					method = jQuery._data( this, "toggle" + p ) || ( val === "toggle" ? hidden ? "show" : "hide" : 0 );
					if ( method ) {
						jQuery._data( this, "toggle" + p, method === "show" ? "hide" : "show" );
						e[ method ]();
					} else {
						e[ val ]();
					}

				} else {
					parts = rfxnum.exec( val );
					start = e.cur();

					if ( parts ) {
						end = parseFloat( parts[2] );
						unit = parts[3] || ( jQuery.cssNumber[ p ] ? "" : "px" );

						// We need to compute starting value
						if ( unit !== "px" ) {
							jQuery.style( this, p, (end || 1) + unit);
							start = ( (end || 1) / e.cur() ) * start;
							jQuery.style( this, p, start + unit);
						}

						// If a +=/-= token was provided, we're doing a relative animation
						if ( parts[1] ) {
							end = ( (parts[ 1 ] === "-=" ? -1 : 1) * end ) + start;
						}

						e.custom( start, end, unit );

					} else {
						e.custom( start, val, "" );
					}
				}
			}

			// For JS strict compliance
			return true;
		}

		return optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},

	stop: function( type, clearQueue, gotoEnd ) {
		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var index,
				hadTimers = false,
				timers = jQuery.timers,
				data = jQuery._data( this );

			// clear marker counters if we know they won't be
			if ( !gotoEnd ) {
				jQuery._unmark( true, this );
			}

			function stopQueue( elem, data, index ) {
				var hooks = data[ index ];
				jQuery.removeData( elem, index, true );
				hooks.stop( gotoEnd );
			}

			if ( type == null ) {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && index.indexOf(".run") === index.length - 4 ) {
						stopQueue( this, data, index );
					}
				}
			} else if ( data[ index = type + ".run" ] && data[ index ].stop ){
				stopQueue( this, data, index );
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					if ( gotoEnd ) {

						// force the next step to be the last
						timers[ index ]( true );
					} else {
						timers[ index ].saveState();
					}
					hadTimers = true;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( !( gotoEnd && hadTimers ) ) {
				jQuery.dequeue( this, type );
			}
		});
	}

});

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout( clearFxNow, 0 );
	return ( fxNow = jQuery.now() );
}

function clearFxNow() {
	fxNow = undefined;
}

// Generate parameters to create a standard animation
function genFx( type, num ) {
	var obj = {};

	jQuery.each( fxAttrs.concat.apply([], fxAttrs.slice( 0, num )), function() {
		obj[ this ] = type;
	});

	return obj;
}

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx( "show", 1 ),
	slideUp: genFx( "hide", 1 ),
	slideToggle: genFx( "toggle", 1 ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.extend({
	speed: function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function( noUnmark ) {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			} else if ( noUnmark !== false ) {
				jQuery._unmark( this );
			}
		};

		return opt;
	},

	easing: {
		linear: function( p, n, firstNum, diff ) {
			return firstNum + diff * p;
		},
		swing: function( p, n, firstNum, diff ) {
			return ( ( -Math.cos( p*Math.PI ) / 2 ) + 0.5 ) * diff + firstNum;
		}
	},

	timers: [],

	fx: function( elem, options, prop ) {
		this.options = options;
		this.elem = elem;
		this.prop = prop;

		options.orig = options.orig || {};
	}

});

jQuery.fx.prototype = {
	// Simple function for setting a style value
	update: function() {
		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		( jQuery.fx.step[ this.prop ] || jQuery.fx.step._default )( this );
	},

	// Get the current size
	cur: function() {
		if ( this.elem[ this.prop ] != null && (!this.elem.style || this.elem.style[ this.prop ] == null) ) {
			return this.elem[ this.prop ];
		}

		var parsed,
			r = jQuery.css( this.elem, this.prop );
		// Empty strings, null, undefined and "auto" are converted to 0,
		// complex values such as "rotate(1rad)" are returned as is,
		// simple values such as "10px" are parsed to Float.
		return isNaN( parsed = parseFloat( r ) ) ? !r || r === "auto" ? 0 : r : parsed;
	},

	// Start an animation from one number to another
	custom: function( from, to, unit ) {
		var self = this,
			fx = jQuery.fx;

		this.startTime = fxNow || createFxNow();
		this.end = to;
		this.now = this.start = from;
		this.pos = this.state = 0;
		this.unit = unit || this.unit || ( jQuery.cssNumber[ this.prop ] ? "" : "px" );

		function t( gotoEnd ) {
			return self.step( gotoEnd );
		}

		t.queue = this.options.queue;
		t.elem = this.elem;
		t.saveState = function() {
			if ( self.options.hide && jQuery._data( self.elem, "fxshow" + self.prop ) === undefined ) {
				jQuery._data( self.elem, "fxshow" + self.prop, self.start );
			}
		};

		if ( t() && jQuery.timers.push(t) && !timerId ) {
			timerId = setInterval( fx.tick, fx.interval );
		}
	},

	// Simple 'show' function
	show: function() {
		var dataShow = jQuery._data( this.elem, "fxshow" + this.prop );

		// Remember where we started, so that we can go back to it later
		this.options.orig[ this.prop ] = dataShow || jQuery.style( this.elem, this.prop );
		this.options.show = true;

		// Begin the animation
		// Make sure that we start at a small width/height to avoid any flash of content
		if ( dataShow !== undefined ) {
			// This show is picking up where a previous hide or show left off
			this.custom( this.cur(), dataShow );
		} else {
			this.custom( this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur() );
		}

		// Start by showing the element
		jQuery( this.elem ).show();
	},

	// Simple 'hide' function
	hide: function() {
		// Remember where we started, so that we can go back to it later
		this.options.orig[ this.prop ] = jQuery._data( this.elem, "fxshow" + this.prop ) || jQuery.style( this.elem, this.prop );
		this.options.hide = true;

		// Begin the animation
		this.custom( this.cur(), 0 );
	},

	// Each step of an animation
	step: function( gotoEnd ) {
		var p, n, complete,
			t = fxNow || createFxNow(),
			done = true,
			elem = this.elem,
			options = this.options;

		if ( gotoEnd || t >= options.duration + this.startTime ) {
			this.now = this.end;
			this.pos = this.state = 1;
			this.update();

			options.animatedProperties[ this.prop ] = true;

			for ( p in options.animatedProperties ) {
				if ( options.animatedProperties[ p ] !== true ) {
					done = false;
				}
			}

			if ( done ) {
				// Reset the overflow
				if ( options.overflow != null && !jQuery.support.shrinkWrapBlocks ) {

					jQuery.each( [ "", "X", "Y" ], function( index, value ) {
						elem.style[ "overflow" + value ] = options.overflow[ index ];
					});
				}

				// Hide the element if the "hide" operation was done
				if ( options.hide ) {
					jQuery( elem ).hide();
				}

				// Reset the properties, if the item has been hidden or shown
				if ( options.hide || options.show ) {
					for ( p in options.animatedProperties ) {
						jQuery.style( elem, p, options.orig[ p ] );
						jQuery.removeData( elem, "fxshow" + p, true );
						// Toggle data is no longer needed
						jQuery.removeData( elem, "toggle" + p, true );
					}
				}

				// Execute the complete function
				// in the event that the complete function throws an exception
				// we must ensure it won't be called twice. #5684

				complete = options.complete;
				if ( complete ) {

					options.complete = false;
					complete.call( elem );
				}
			}

			return false;

		} else {
			// classical easing cannot be used with an Infinity duration
			if ( options.duration == Infinity ) {
				this.now = t;
			} else {
				n = t - this.startTime;
				this.state = n / options.duration;

				// Perform the easing function, defaults to swing
				this.pos = jQuery.easing[ options.animatedProperties[this.prop] ]( this.state, n, 0, 1, options.duration );
				this.now = this.start + ( (this.end - this.start) * this.pos );
			}
			// Perform the next step of the animation
			this.update();
		}

		return true;
	}
};

jQuery.extend( jQuery.fx, {
	tick: function() {
		var timer,
			timers = jQuery.timers,
			i = 0;

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
	},

	interval: 13,

	stop: function() {
		clearInterval( timerId );
		timerId = null;
	},

	speeds: {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	},

	step: {
		opacity: function( fx ) {
			jQuery.style( fx.elem, "opacity", fx.now );
		},

		_default: function( fx ) {
			if ( fx.elem.style && fx.elem.style[ fx.prop ] != null ) {
				fx.elem.style[ fx.prop ] = fx.now + fx.unit;
			} else {
				fx.elem[ fx.prop ] = fx.now;
			}
		}
	}
});

// Adds width/height step functions
// Do not set anything below 0
jQuery.each([ "width", "height" ], function( i, prop ) {
	jQuery.fx.step[ prop ] = function( fx ) {
		jQuery.style( fx.elem, prop, Math.max(0, fx.now) + fx.unit );
	};
});

if ( jQuery.expr && jQuery.expr.filters ) {
	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep(jQuery.timers, function( fn ) {
			return elem === fn.elem;
		}).length;
	};
}

// Try to restore the default display value of an element
function defaultDisplay( nodeName ) {

	if ( !elemdisplay[ nodeName ] ) {

		var body = document.body,
			elem = jQuery( "<" + nodeName + ">" ).appendTo( body ),
			display = elem.css( "display" );
		elem.remove();

		// If the simple way fails,
		// get element's real default display by attaching it to a temp iframe
		if ( display === "none" || display === "" ) {
			// No iframe to use yet, so create it
			if ( !iframe ) {
				iframe = document.createElement( "iframe" );
				iframe.frameBorder = iframe.width = iframe.height = 0;
			}

			body.appendChild( iframe );

			// Create a cacheable copy of the iframe document on first call.
			// IE and Opera will allow us to reuse the iframeDoc without re-writing the fake HTML
			// document to it; WebKit & Firefox won't allow reusing the iframe document.
			if ( !iframeDoc || !iframe.createElement ) {
				iframeDoc = ( iframe.contentWindow || iframe.contentDocument ).document;
				iframeDoc.write( ( document.compatMode === "CSS1Compat" ? "<!doctype html>" : "" ) + "<html><body>" );
				iframeDoc.close();
			}

			elem = iframeDoc.createElement( nodeName );

			iframeDoc.body.appendChild( elem );

			display = jQuery.css( elem, "display" );
			body.removeChild( iframe );
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return elemdisplay[ nodeName ];
}




var rtable = /^t(?:able|d|h)$/i,
	rroot = /^(?:body|html)$/i;

if ( "getBoundingClientRect" in document.documentElement ) {
	jQuery.fn.offset = function( options ) {
		var elem = this[0], box;

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		try {
			box = elem.getBoundingClientRect();
		} catch(e) {}

		var doc = elem.ownerDocument,
			docElem = doc.documentElement;

		// Make sure we're not dealing with a disconnected DOM node
		if ( !box || !jQuery.contains( docElem, elem ) ) {
			return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };
		}

		var body = doc.body,
			win = getWindow(doc),
			clientTop  = docElem.clientTop  || body.clientTop  || 0,
			clientLeft = docElem.clientLeft || body.clientLeft || 0,
			scrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,
			scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
			top  = box.top  + scrollTop  - clientTop,
			left = box.left + scrollLeft - clientLeft;

		return { top: top, left: left };
	};

} else {
	jQuery.fn.offset = function( options ) {
		var elem = this[0];

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		var computedStyle,
			offsetParent = elem.offsetParent,
			prevOffsetParent = elem,
			doc = elem.ownerDocument,
			docElem = doc.documentElement,
			body = doc.body,
			defaultView = doc.defaultView,
			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
			top = elem.offsetTop,
			left = elem.offsetLeft;

		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
			if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
				break;
			}

			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
			top  -= elem.scrollTop;
			left -= elem.scrollLeft;

			if ( elem === offsetParent ) {
				top  += elem.offsetTop;
				left += elem.offsetLeft;

				if ( jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
					left += parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent = offsetParent;
				offsetParent = elem.offsetParent;
			}

			if ( jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
				left += parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle = computedStyle;
		}

		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
			top  += body.offsetTop;
			left += body.offsetLeft;
		}

		if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
			top  += Math.max( docElem.scrollTop, body.scrollTop );
			left += Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ["Left", "Top"], function( i, name ) {
	var method = "scroll" + name;

	jQuery.fn[ method ] = function( val ) {
		var elem, win;

		if ( val === undefined ) {
			elem = this[ 0 ];

			if ( !elem ) {
				return null;
			}

			win = getWindow( elem );

			// Return the scroll offset
			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : "pageXOffset" ] :
				jQuery.support.boxModel && win.document.documentElement[ method ] ||
					win.document.body[ method ] :
				elem[ method ];
		}

		// Set the scroll offset
		return this.each(function() {
			win = getWindow( this );

			if ( win ) {
				win.scrollTo(
					!i ? val : jQuery( win ).scrollLeft(),
					 i ? val : jQuery( win ).scrollTop()
				);

			} else {
				this[ method ] = val;
			}
		});
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}




// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function( i, name ) {

	var type = name.toLowerCase();

	// innerHeight and innerWidth
	jQuery.fn[ "inner" + name ] = function() {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, "padding" ) ) :
			this[ type ]() :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn[ "outer" + name ] = function( margin ) {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :
			this[ type ]() :
			null;
	};

	jQuery.fn[ type ] = function( size ) {
		// Get window width or height
		var elem = this[0];
		if ( !elem ) {
			return size == null ? null : this;
		}

		if ( jQuery.isFunction( size ) ) {
			return this.each(function( i ) {
				var self = jQuery( this );
				self[ type ]( size.call( this, i, self[ type ]() ) );
			});
		}

		if ( jQuery.isWindow( elem ) ) {
			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
			// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat
			var docElemProp = elem.document.documentElement[ "client" + name ],
				body = elem.document.body;
			return elem.document.compatMode === "CSS1Compat" && docElemProp ||
				body && body[ "client" + name ] || docElemProp;

		// Get document width or height
		} else if ( elem.nodeType === 9 ) {
			// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
			return Math.max(
				elem.documentElement["client" + name],
				elem.body["scroll" + name], elem.documentElement["scroll" + name],
				elem.body["offset" + name], elem.documentElement["offset" + name]
			);

		// Get or set width or height on the element
		} else if ( size === undefined ) {
			var orig = jQuery.css( elem, type ),
				ret = parseFloat( orig );

			return jQuery.isNumeric( ret ) ? ret : orig;

		// Set the width or height on the element (default to pixels if value is unitless)
		} else {
			return this.css( type, typeof size === "string" ? size : size + "px" );
		}
	};

});




// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}



})( window );

]]></script>
<script type="text/javascript"><![CDATA[
﻿/* http://keith-wood.name/svg.html
   SVG for jQuery v1.4.4.
   Written by Keith Wood (kbwood{at}iinet.com.au) August 2007.
   Dual licensed under the GPL (http://dev.jquery.com/browser/trunk/jquery/GPL-LICENSE.txt) and 
   MIT (http://dev.jquery.com/browser/trunk/jquery/MIT-LICENSE.txt) licenses. 
   Please attribute the author if you use it. */

(function($) { // Hide scope, no $ conflict

/* SVG manager.
   Use the singleton instance of this class, $.svg, 
   to interact with the SVG functionality. */
function SVGManager() {
	this._settings = []; // Settings to be remembered per SVG object
	this._extensions = []; // List of SVG extensions added to SVGWrapper
		// for each entry [0] is extension name, [1] is extension class (function)
		// the function takes one parameter - the SVGWrapper instance
	this.regional = []; // Localisations, indexed by language, '' for default (English)
	this.regional[''] = {errorLoadingText: 'Error loading',
		notSupportedText: 'This browser does not support SVG'};
	this.local = this.regional['']; // Current localisation
	this._uuid = new Date().getTime();
	this._renesis = detectActiveX('RenesisX.RenesisCtrl');
}

/* Determine whether a given ActiveX control is available.
   @param  classId  (string) the ID for the ActiveX control
   @return  (boolean) true if found, false if not */
function detectActiveX(classId) {
	try {
		return !!(window.ActiveXObject && new ActiveXObject(classId));
	}
	catch (e) {
		return false;
	}
}

var PROP_NAME = 'svgwrapper';

$.extend(SVGManager.prototype, {
	/* Class name added to elements to indicate already configured with SVG. */
	markerClassName: 'hasSVG',

	/* SVG namespace. */
	svgNS: 'http://www.w3.org/2000/svg',
	/* XLink namespace. */
	xlinkNS: 'http://www.w3.org/1999/xlink',

	/* SVG wrapper class. */
	_wrapperClass: SVGWrapper,

	/* Camel-case versions of attribute names containing dashes or are reserved words. */
	_attrNames: {class_: 'class', in_: 'in',
		alignmentBaseline: 'alignment-baseline', baselineShift: 'baseline-shift',
		clipPath: 'clip-path', clipRule: 'clip-rule',
		colorInterpolation: 'color-interpolation',
		colorInterpolationFilters: 'color-interpolation-filters',
		colorRendering: 'color-rendering', dominantBaseline: 'dominant-baseline',
		enableBackground: 'enable-background', fillOpacity: 'fill-opacity',
		fillRule: 'fill-rule', floodColor: 'flood-color',
		floodOpacity: 'flood-opacity', fontFamily: 'font-family',
		fontSize: 'font-size', fontSizeAdjust: 'font-size-adjust',
		fontStretch: 'font-stretch', fontStyle: 'font-style',
		fontVariant: 'font-variant', fontWeight: 'font-weight',
		glyphOrientationHorizontal: 'glyph-orientation-horizontal',
		glyphOrientationVertical: 'glyph-orientation-vertical',
		horizAdvX: 'horiz-adv-x', horizOriginX: 'horiz-origin-x',
		imageRendering: 'image-rendering', letterSpacing: 'letter-spacing',
		lightingColor: 'lighting-color', markerEnd: 'marker-end',
		markerMid: 'marker-mid', markerStart: 'marker-start',
		stopColor: 'stop-color', stopOpacity: 'stop-opacity',
		strikethroughPosition: 'strikethrough-position',
		strikethroughThickness: 'strikethrough-thickness',
		strokeDashArray: 'stroke-dasharray', strokeDashOffset: 'stroke-dashoffset',
		strokeLineCap: 'stroke-linecap', strokeLineJoin: 'stroke-linejoin',
		strokeMiterLimit: 'stroke-miterlimit', strokeOpacity: 'stroke-opacity',
		strokeWidth: 'stroke-width', textAnchor: 'text-anchor',
		textDecoration: 'text-decoration', textRendering: 'text-rendering',
		underlinePosition: 'underline-position', underlineThickness: 'underline-thickness',
		vertAdvY: 'vert-adv-y', vertOriginY: 'vert-origin-y',
		wordSpacing: 'word-spacing', writingMode: 'writing-mode'},

	/* Add the SVG object to its container. */
	_attachSVG: function(container, settings) {
		var svg = (container.namespaceURI == this.svgNS ? container : null);
		var container = (svg ? null : container);
		if ($(container || svg).hasClass(this.markerClassName)) {
			return;
		}
		if (typeof settings == 'string') {
			settings = {loadURL: settings};
		}
		else if (typeof settings == 'function') {
			settings = {onLoad: settings};
		}
		$(container || svg).addClass(this.markerClassName);
		try {
			if (!svg) {
				svg = document.createElementNS(this.svgNS, 'svg');
				svg.setAttribute('version', '1.1');
				if (container.clientWidth > 0) {
					svg.setAttribute('width', container.clientWidth);
				}
				if (container.clientHeight > 0) {
					svg.setAttribute('height', container.clientHeight);
				}
				container.appendChild(svg);
			}
			this._afterLoad(container, svg, settings || {});
		}
		catch (e) {
			if ($.browser.msie) {
				if (!container.id) {
					container.id = 'svg' + (this._uuid++);
				}
				this._settings[container.id] = settings;
				container.innerHTML = '<embed type="image/svg+xml" width="100%" ' +
					'height="100%" src="' + (settings.initPath || '') + 'blank.svg" ' +
					'pluginspage="http://www.adobe.com/svg/viewer/install/main.html"/>';
			}
			else {
				container.innerHTML = '<p class="svg_error">' +
					this.local.notSupportedText + '</p>';
			}
		}
	},

	/* SVG callback after loading - register SVG root. */
	_registerSVG: function() {
		for (var i = 0; i < document.embeds.length; i++) { // Check all
			var container = document.embeds[i].parentNode;
			if (!$(container).hasClass($.svg.markerClassName) || // Not SVG
					$.data(container, PROP_NAME)) { // Already done
				continue;
			}
			var svg = null;
			try {
				svg = document.embeds[i].getSVGDocument();
			}
			catch(e) {
				setTimeout($.svg._registerSVG, 250); // Renesis takes longer to load
				return;
			}
			svg = (svg ? svg.documentElement : null);
			if (svg) {
				$.svg._afterLoad(container, svg);
			}
		}
	},

	/* Post-processing once loaded. */
	_afterLoad: function(container, svg, settings) {
		var settings = settings || this._settings[container.id];
		this._settings[container ? container.id : ''] = null;
		var wrapper = new this._wrapperClass(svg, container);
		$.data(container || svg, PROP_NAME, wrapper);
		try {
			if (settings.loadURL) { // Load URL
				wrapper.load(settings.loadURL, settings);
			}
			if (settings.settings) { // Additional settings
				wrapper.configure(settings.settings);
			}
			if (settings.onLoad && !settings.loadURL) { // Onload callback
				settings.onLoad.apply(container || svg, [wrapper]);
			}
		}
		catch (e) {
			alert(e);
		}
	},

	/* Return the SVG wrapper created for a given container.
	   @param  container  (string) selector for the container or
	                      (element) the container for the SVG object or
	                      jQuery collection - first entry is the container
	   @return  (SVGWrapper) the corresponding SVG wrapper element, or null if not attached */
	_getSVG: function(container) {
		container = (typeof container == 'string' ? $(container)[0] :
			(container.jquery ? container[0] : container));
		return $.data(container, PROP_NAME);
	},

	/* Remove the SVG functionality from a div.
	   @param  container  (element) the container for the SVG object */
	_destroySVG: function(container) {
		var $container = $(container);
		if (!$container.hasClass(this.markerClassName)) {
			return;
		}
		$container.removeClass(this.markerClassName);
		if (container.namespaceURI != this.svgNS) {
			$container.empty();
		}
		$.removeData(container, PROP_NAME);
	},

	/* Extend the SVGWrapper object with an embedded class.
	   The constructor function must take a single parameter that is
	   a reference to the owning SVG root object. This allows the 
	   extension to access the basic SVG functionality.
	   @param  name      (string) the name of the SVGWrapper attribute to access the new class
	   @param  extClass  (function) the extension class constructor */
	addExtension: function(name, extClass) {
		this._extensions.push([name, extClass]);
	},

	/* Does this node belong to SVG?
	   @param  node  (element) the node to be tested
	   @return  (boolean) true if an SVG node, false if not */
	isSVGElem: function(node) {
		return (node.nodeType == 1 && node.namespaceURI == $.svg.svgNS);
	}
});

/* The main SVG interface, which encapsulates the SVG element.
   Obtain a reference from $().svg('get') */
function SVGWrapper(svg, container) {
	this._svg = svg; // The SVG root node
	this._container = container; // The containing div
	for (var i = 0; i < $.svg._extensions.length; i++) {
		var extension = $.svg._extensions[i];
		this[extension[0]] = new extension[1](this);
	}
}

$.extend(SVGWrapper.prototype, {

	/* Retrieve the width of the SVG object. */
	_width: function() {
		return (this._container ? this._container.clientWidth : this._svg.width);
	},

	/* Retrieve the height of the SVG object. */
	_height: function() {
		return (this._container ? this._container.clientHeight : this._svg.height);
	},

	/* Retrieve the root SVG element.
	   @return  the top-level SVG element */
	root: function() {
		return this._svg;
	},

	/* Configure a SVG node.
	   @param  node      (element, optional) the node to configure
	   @param  settings  (object) additional settings for the root
	   @param  clear     (boolean) true to remove existing attributes first,
	                     false to add to what is already there (optional)
	   @return  (SVGWrapper) this root */
	configure: function(node, settings, clear) {
		if (!node.nodeName) {
			clear = settings;
			settings = node;
			node = this._svg;
		}
		if (clear) {
			for (var i = node.attributes.length - 1; i >= 0; i--) {
				var attr = node.attributes.item(i);
				if (!(attr.nodeName == 'onload' || attr.nodeName == 'version' || 
						attr.nodeName.substring(0, 5) == 'xmlns')) {
					node.attributes.removeNamedItem(attr.nodeName);
				}
			}
		}
		for (var attrName in settings) {
			node.setAttribute($.svg._attrNames[attrName] || attrName, settings[attrName]);
		}
		return this;
	},

	/* Locate a specific element in the SVG document.
	   @param  id  (string) the element's identifier
	   @return  (element) the element reference, or null if not found */
	getElementById: function(id) {
		return this._svg.ownerDocument.getElementById(id);
	},

	/* Change the attributes for a SVG node.
	   @param  element   (SVG element) the node to change
	   @param  settings  (object) the new settings
	   @return  (SVGWrapper) this root */
	change: function(element, settings) {
		if (element) {
			for (var name in settings) {
				if (settings[name] == null) {
					element.removeAttribute($.svg._attrNames[name] || name);
				}
				else {
					element.setAttribute($.svg._attrNames[name] || name, settings[name]);
				}
			}
		}
		return this;
	},

	/* Check for parent being absent and adjust arguments accordingly. */
	_args: function(values, names, optSettings) {
		names.splice(0, 0, 'parent');
		names.splice(names.length, 0, 'settings');
		var args = {};
		var offset = 0;
		if (values[0] != null && values[0].jquery) {
			values[0] = values[0][0];
		}
		if (values[0] != null && !(typeof values[0] == 'object' && values[0].nodeName)) {
			args['parent'] = null;
			offset = 1;
		}
		for (var i = 0; i < values.length; i++) {
			args[names[i + offset]] = values[i];
		}
		if (optSettings) {
			$.each(optSettings, function(i, value) {
				if (typeof args[value] == 'object') {
					args.settings = args[value];
					args[value] = null;
				}
			});
		}
		return args;
	},

	/* Add a title.
	   @param  parent    (element or jQuery) the parent node for the new title (optional)
	   @param  text      (string) the text of the title
	   @param  settings  (object) additional settings for the title (optional)
	   @return  (element) the new title node */
	title: function(parent, text, settings) {
		var args = this._args(arguments, ['text']);
		var node = this._makeNode(args.parent, 'title', args.settings || {});
		node.appendChild(this._svg.ownerDocument.createTextNode(args.text));
		return node;
	},

	/* Add a description.
	   @param  parent    (element or jQuery) the parent node for the new description (optional)
	   @param  text      (string) the text of the description
	   @param  settings  (object) additional settings for the description (optional)
	   @return  (element) the new description node */
	describe: function(parent, text, settings) {
		var args = this._args(arguments, ['text']);
		var node = this._makeNode(args.parent, 'desc', args.settings || {});
		node.appendChild(this._svg.ownerDocument.createTextNode(args.text));
		return node;
	},

	/* Add a definitions node.
	   @param  parent    (element or jQuery) the parent node for the new definitions (optional)
	   @param  id        (string) the ID of this definitions (optional)
	   @param  settings  (object) additional settings for the definitions (optional)
	   @return  (element) the new definitions node */
	defs: function(parent, id, settings) {
		var args = this._args(arguments, ['id'], ['id']);
		return this._makeNode(args.parent, 'defs', $.extend(
			(args.id ? {id: args.id} : {}), args.settings || {}));
	},

	/* Add a symbol definition.
	   @param  parent    (element or jQuery) the parent node for the new symbol (optional)
	   @param  id        (string) the ID of this symbol
	   @param  x1        (number) the left coordinate for this symbol
	   @param  y1        (number) the top coordinate for this symbol
	   @param  width     (number) the width of this symbol
	   @param  height    (number) the height of this symbol
	   @param  settings  (object) additional settings for the symbol (optional)
	   @return  (element) the new symbol node */
	symbol: function(parent, id, x1, y1, width, height, settings) {
		var args = this._args(arguments, ['id', 'x1', 'y1', 'width', 'height']);
		return this._makeNode(args.parent, 'symbol', $.extend({id: args.id,
			viewBox: args.x1 + ' ' + args.y1 + ' ' + args.width + ' ' + args.height},
			args.settings || {}));
	},

	/* Add a marker definition.
	   @param  parent    (element or jQuery) the parent node for the new marker (optional)
	   @param  id        (string) the ID of this marker
	   @param  refX      (number) the x-coordinate for the reference point
	   @param  refY      (number) the y-coordinate for the reference point
	   @param  mWidth    (number) the marker viewport width
	   @param  mHeight   (number) the marker viewport height
	   @param  orient    (string or int) 'auto' or angle (degrees) (optional)
	   @param  settings  (object) additional settings for the marker (optional)
	   @return  (element) the new marker node */
	marker: function(parent, id, refX, refY, mWidth, mHeight, orient, settings) {
		var args = this._args(arguments, ['id', 'refX', 'refY',
			'mWidth', 'mHeight', 'orient'], ['orient']);
		return this._makeNode(args.parent, 'marker', $.extend(
			{id: args.id, refX: args.refX, refY: args.refY, markerWidth: args.mWidth, 
			markerHeight: args.mHeight, orient: args.orient || 'auto'}, args.settings || {}));
	},

	/* Add a style node.
	   @param  parent    (element or jQuery) the parent node for the new node (optional)
	   @param  styles    (string) the CSS styles
	   @param  settings  (object) additional settings for the node (optional)
	   @return  (element) the new style node */
	style: function(parent, styles, settings) {
		var args = this._args(arguments, ['styles']);
		var node = this._makeNode(args.parent, 'style', $.extend(
			{type: 'text/css'}, args.settings || {}));
		node.appendChild(this._svg.ownerDocument.createTextNode(args.styles));
		if ($.browser.opera) {
			$('head').append('<style type="text/css">' + args.styles + '</style>');
		}
		return node;
	},

	/* Add a script node.
	   @param  parent    (element or jQuery) the parent node for the new node (optional)
	   @param  script    (string) the JavaScript code
	   @param  type      (string) the MIME type for the code (optional, default 'text/javascript')
	   @param  settings  (object) additional settings for the node (optional)
	   @return  (element) the new script node */
	script: function(parent, script, type, settings) {
		var args = this._args(arguments, ['script', 'type'], ['type']);
		var node = this._makeNode(args.parent, 'script', $.extend(
			{type: args.type || 'text/javascript'}, args.settings || {}));
		node.appendChild(this._svg.ownerDocument.createTextNode(args.script));
		if (!$.browser.mozilla) {
			$.globalEval(args.script);
		}
		return node;
	},

	/* Add a linear gradient definition.
	   Specify all of x1, y1, x2, y2 or none of them.
	   @param  parent    (element or jQuery) the parent node for the new gradient (optional)
	   @param  id        (string) the ID for this gradient
	   @param  stops     (string[][]) the gradient stops, each entry is
	                     [0] is offset (0.0-1.0 or 0%-100%), [1] is colour, 
						 [2] is opacity (optional)
	   @param  x1        (number) the x-coordinate of the gradient start (optional)
	   @param  y1        (number) the y-coordinate of the gradient start (optional)
	   @param  x2        (number) the x-coordinate of the gradient end (optional)
	   @param  y2        (number) the y-coordinate of the gradient end (optional)
	   @param  settings  (object) additional settings for the gradient (optional)
	   @return  (element) the new gradient node */
	linearGradient: function(parent, id, stops, x1, y1, x2, y2, settings) {
		var args = this._args(arguments,
			['id', 'stops', 'x1', 'y1', 'x2', 'y2'], ['x1']);
		var sets = $.extend({id: args.id}, 
			(args.x1 != null ? {x1: args.x1, y1: args.y1, x2: args.x2, y2: args.y2} : {}));
		return this._gradient(args.parent, 'linearGradient', 
			$.extend(sets, args.settings || {}), args.stops);
	},

	/* Add a radial gradient definition.
	   Specify all of cx, cy, r, fx, fy or none of them.
	   @param  parent    (element or jQuery) the parent node for the new gradient (optional)
	   @param  id        (string) the ID for this gradient
	   @param  stops     (string[][]) the gradient stops, each entry
	                     [0] is offset, [1] is colour, [2] is opacity (optional)
	   @param  cx        (number) the x-coordinate of the largest circle centre (optional)
	   @param  cy        (number) the y-coordinate of the largest circle centre (optional)
	   @param  r         (number) the radius of the largest circle (optional)
	   @param  fx        (number) the x-coordinate of the gradient focus (optional)
	   @param  fy        (number) the y-coordinate of the gradient focus (optional)
	   @param  settings  (object) additional settings for the gradient (optional)
	   @return  (element) the new gradient node */
	radialGradient: function(parent, id, stops, cx, cy, r, fx, fy, settings) {
		var args = this._args(arguments,
			['id', 'stops', 'cx', 'cy', 'r', 'fx', 'fy'], ['cx']);
		var sets = $.extend({id: args.id}, (args.cx != null ?
			{cx: args.cx, cy: args.cy, r: args.r, fx: args.fx, fy: args.fy} : {}));
		return this._gradient(args.parent, 'radialGradient', 
			$.extend(sets, args.settings || {}), args.stops);
	},

	/* Add a gradient node. */
	_gradient: function(parent, name, settings, stops) {
		var node = this._makeNode(parent, name, settings);
		for (var i = 0; i < stops.length; i++) {
			var stop = stops[i];
			this._makeNode(node, 'stop', $.extend(
				{offset: stop[0], stopColor: stop[1]}, 
				(stop[2] != null ? {stopOpacity: stop[2]} : {})));
		}
		return node;
	},

	/* Add a pattern definition.
	   Specify all of vx, vy, xwidth, vheight or none of them.
	   @param  parent    (element or jQuery) the parent node for the new pattern (optional)
	   @param  id        (string) the ID for this pattern
	   @param  x         (number) the x-coordinate for the left edge of the pattern
	   @param  y         (number) the y-coordinate for the top edge of the pattern
	   @param  width     (number) the width of the pattern
	   @param  height    (number) the height of the pattern
	   @param  vx        (number) the minimum x-coordinate for view box (optional)
	   @param  vy        (number) the minimum y-coordinate for the view box (optional)
	   @param  vwidth    (number) the width of the view box (optional)
	   @param  vheight   (number) the height of the view box (optional)
	   @param  settings  (object) additional settings for the pattern (optional)
	   @return  (element) the new pattern node */
	pattern: function(parent, id, x, y, width, height, vx, vy, vwidth, vheight, settings) {
		var args = this._args(arguments, ['id', 'x', 'y', 'width', 'height',
			'vx', 'vy', 'vwidth', 'vheight'], ['vx']);
		var sets = $.extend({id: args.id, x: args.x, y: args.y,
			width: args.width, height: args.height}, (args.vx != null ?
			{viewBox: args.vx + ' ' + args.vy + ' ' + args.vwidth + ' ' + args.vheight} : {}));
		return this._makeNode(args.parent, 'pattern', $.extend(sets, args.settings || {}));
	},

	/* Add a clip path definition.
	   @param  parent  (element) the parent node for the new element (optional)
	   @param  id      (string) the ID for this path
	   @param  units   (string) either 'userSpaceOnUse' (default) or 'objectBoundingBox' (optional)
	   @return  (element) the new clipPath node */
	clipPath: function(parent, id, units, settings) {
		var args = this._args(arguments, ['id', 'units']);
		args.units = args.units || 'userSpaceOnUse';
		return this._makeNode(args.parent, 'clipPath', $.extend(
			{id: args.id, clipPathUnits: args.units}, args.settings || {}));
	},

	/* Add a mask definition.
	   @param  parent    (element or jQuery) the parent node for the new mask (optional)
	   @param  id        (string) the ID for this mask
	   @param  x         (number) the x-coordinate for the left edge of the mask
	   @param  y         (number) the y-coordinate for the top edge of the mask
	   @param  width     (number) the width of the mask
	   @param  height    (number) the height of the mask
	   @param  settings  (object) additional settings for the mask (optional)
	   @return  (element) the new mask node */
	mask: function(parent, id, x, y, width, height, settings) {
		var args = this._args(arguments, ['id', 'x', 'y', 'width', 'height']);
		return this._makeNode(args.parent, 'mask', $.extend(
			{id: args.id, x: args.x, y: args.y, width: args.width, height: args.height},
			args.settings || {}));
	},

	/* Create a new path object.
	   @return  (SVGPath) a new path object */
	createPath: function() {
		return new SVGPath();
	},

	/* Create a new text object.
	   @return  (SVGText) a new text object */
	createText: function() {
		return new SVGText();
	},

	/* Add an embedded SVG element.
	   Specify all of vx, vy, vwidth, vheight or none of them.
	   @param  parent    (element or jQuery) the parent node for the new node (optional)
	   @param  x         (number) the x-coordinate for the left edge of the node
	   @param  y         (number) the y-coordinate for the top edge of the node
	   @param  width     (number) the width of the node
	   @param  height    (number) the height of the node
	   @param  vx        (number) the minimum x-coordinate for view box (optional)
	   @param  vy        (number) the minimum y-coordinate for the view box (optional)
	   @param  vwidth    (number) the width of the view box (optional)
	   @param  vheight   (number) the height of the view box (optional)
	   @param  settings  (object) additional settings for the node (optional)
	   @return  (element) the new node */
	svg: function(parent, x, y, width, height, vx, vy, vwidth, vheight, settings) {
		var args = this._args(arguments, ['x', 'y', 'width', 'height',
			'vx', 'vy', 'vwidth', 'vheight'], ['vx']);
		var sets = $.extend({x: args.x, y: args.y, width: args.width, height: args.height}, 
			(args.vx != null ? {viewBox: args.vx + ' ' + args.vy + ' ' +
			args.vwidth + ' ' + args.vheight} : {}));
		return this._makeNode(args.parent, 'svg', $.extend(sets, args.settings || {}));
	},

	/* Create a group.
	   @param  parent    (element or jQuery) the parent node for the new group (optional)
	   @param  id        (string) the ID of this group (optional)
	   @param  settings  (object) additional settings for the group (optional)
	   @return  (element) the new group node */
	group: function(parent, id, settings) {
		var args = this._args(arguments, ['id'], ['id']);
		return this._makeNode(args.parent, 'g', $.extend({id: args.id}, args.settings || {}));
	},

	/* Add a usage reference.
	   Specify all of x, y, width, height or none of them.
	   @param  parent    (element or jQuery) the parent node for the new node (optional)
	   @param  x         (number) the x-coordinate for the left edge of the node (optional)
	   @param  y         (number) the y-coordinate for the top edge of the node (optional)
	   @param  width     (number) the width of the node (optional)
	   @param  height    (number) the height of the node (optional)
	   @param  ref       (string) the ID of the definition node
	   @param  settings  (object) additional settings for the node (optional)
	   @return  (element) the new node */
	use: function(parent, x, y, width, height, ref, settings) {
		var args = this._args(arguments, ['x', 'y', 'width', 'height', 'ref']);
		if (typeof args.x == 'string') {
			args.ref = args.x;
			args.settings = args.y;
			args.x = args.y = args.width = args.height = null;
		}
		var node = this._makeNode(args.parent, 'use', $.extend(
			{x: args.x, y: args.y, width: args.width, height: args.height},
			args.settings || {}));
		node.setAttributeNS($.svg.xlinkNS, 'href', args.ref);
		return node;
	},

	/* Add a link, which applies to all child elements.
	   @param  parent    (element or jQuery) the parent node for the new link (optional)
	   @param  ref       (string) the target URL
	   @param  settings  (object) additional settings for the link (optional)
	   @return  (element) the new link node */
	link: function(parent, ref, settings) {
		var args = this._args(arguments, ['ref']);
		var node = this._makeNode(args.parent, 'a', args.settings);
		node.setAttributeNS($.svg.xlinkNS, 'href', args.ref);
		return node;
	},

	/* Add an image.
	   @param  parent    (element or jQuery) the parent node for the new image (optional)
	   @param  x         (number) the x-coordinate for the left edge of the image
	   @param  y         (number) the y-coordinate for the top edge of the image
	   @param  width     (number) the width of the image
	   @param  height    (number) the height of the image
	   @param  ref       (string) the path to the image
	   @param  settings  (object) additional settings for the image (optional)
	   @return  (element) the new image node */
	image: function(parent, x, y, width, height, ref, settings) {
		var args = this._args(arguments, ['x', 'y', 'width', 'height', 'ref']);
		var node = this._makeNode(args.parent, 'image', $.extend(
			{x: args.x, y: args.y, width: args.width, height: args.height},
			args.settings || {}));
		node.setAttributeNS($.svg.xlinkNS, 'href', args.ref);
		return node;
	},

	/* Draw a path.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  path      (string or SVGPath) the path to draw
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	path: function(parent, path, settings) {
		var args = this._args(arguments, ['path']);
		return this._makeNode(args.parent, 'path', $.extend(
			{d: (args.path.path ? args.path.path() : args.path)}, args.settings || {}));
	},

	/* Draw a rectangle.
	   Specify both of rx and ry or neither.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  x         (number) the x-coordinate for the left edge of the rectangle
	   @param  y         (number) the y-coordinate for the top edge of the rectangle
	   @param  width     (number) the width of the rectangle
	   @param  height    (number) the height of the rectangle
	   @param  rx        (number) the x-radius of the ellipse for the rounded corners (optional)
	   @param  ry        (number) the y-radius of the ellipse for the rounded corners (optional)
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	rect: function(parent, x, y, width, height, rx, ry, settings) {
		var args = this._args(arguments, ['x', 'y', 'width', 'height', 'rx', 'ry'], ['rx']);
		return this._makeNode(args.parent, 'rect', $.extend(
			{x: args.x, y: args.y, width: args.width, height: args.height},
			(args.rx ? {rx: args.rx, ry: args.ry} : {}), args.settings || {}));
	},

	/* Draw a circle.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  cx        (number) the x-coordinate for the centre of the circle
	   @param  cy        (number) the y-coordinate for the centre of the circle
	   @param  r         (number) the radius of the circle
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	circle: function(parent, cx, cy, r, settings) {
		var args = this._args(arguments, ['cx', 'cy', 'r']);
		return this._makeNode(args.parent, 'circle', $.extend(
			{cx: args.cx, cy: args.cy, r: args.r}, args.settings || {}));
	},

	/* Draw an ellipse.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  cx        (number) the x-coordinate for the centre of the ellipse
	   @param  cy        (number) the y-coordinate for the centre of the ellipse
	   @param  rx        (number) the x-radius of the ellipse
	   @param  ry        (number) the y-radius of the ellipse
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	ellipse: function(parent, cx, cy, rx, ry, settings) {
		var args = this._args(arguments, ['cx', 'cy', 'rx', 'ry']);
		return this._makeNode(args.parent, 'ellipse', $.extend(
			{cx: args.cx, cy: args.cy, rx: args.rx, ry: args.ry}, args.settings || {}));
	},

	/* Draw a line.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  x1        (number) the x-coordinate for the start of the line
	   @param  y1        (number) the y-coordinate for the start of the line
	   @param  x2        (number) the x-coordinate for the end of the line
	   @param  y2        (number) the y-coordinate for the end of the line
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	line: function(parent, x1, y1, x2, y2, settings) {
		var args = this._args(arguments, ['x1', 'y1', 'x2', 'y2']);
		return this._makeNode(args.parent, 'line', $.extend(
			{x1: args.x1, y1: args.y1, x2: args.x2, y2: args.y2}, args.settings || {}));
	},

	/* Draw a polygonal line.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  points    (number[][]) the x-/y-coordinates for the points on the line
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	polyline: function(parent, points, settings) {
		var args = this._args(arguments, ['points']);
		return this._poly(args.parent, 'polyline', args.points, args.settings);
	},

	/* Draw a polygonal shape.
	   @param  parent    (element or jQuery) the parent node for the new shape (optional)
	   @param  points    (number[][]) the x-/y-coordinates for the points on the shape
	   @param  settings  (object) additional settings for the shape (optional)
	   @return  (element) the new shape node */
	polygon: function(parent, points, settings) {
		var args = this._args(arguments, ['points']);
		return this._poly(args.parent, 'polygon', args.points, args.settings);
	},

	/* Draw a polygonal line or shape. */
	_poly: function(parent, name, points, settings) {
		var ps = '';
		for (var i = 0; i < points.length; i++) {
			ps += points[i].join() + ' ';
		}
		return this._makeNode(parent, name, $.extend(
			{points: $.trim(ps)}, settings || {}));
	},

	/* Draw text.
	   Specify both of x and y or neither of them.
	   @param  parent    (element or jQuery) the parent node for the text (optional)
	   @param  x         (number or number[]) the x-coordinate(s) for the text (optional)
	   @param  y         (number or number[]) the y-coordinate(s) for the text (optional)
	   @param  value     (string) the text content or
	                     (SVGText) text with spans and references
	   @param  settings  (object) additional settings for the text (optional)
	   @return  (element) the new text node */
	text: function(parent, x, y, value, settings) {
		var args = this._args(arguments, ['x', 'y', 'value']);
		if (typeof args.x == 'string' && arguments.length < 4) {
			args.value = args.x;
			args.settings = args.y;
			args.x = args.y = null;
		}
		return this._text(args.parent, 'text', args.value, $.extend(
			{x: (args.x && isArray(args.x) ? args.x.join(' ') : args.x),
			y: (args.y && isArray(args.y) ? args.y.join(' ') : args.y)}, 
			args.settings || {}));
	},

	/* Draw text along a path.
	   @param  parent    (element or jQuery) the parent node for the text (optional)
	   @param  path      (string) the ID of the path
	   @param  value     (string) the text content or
	                     (SVGText) text with spans and references
	   @param  settings  (object) additional settings for the text (optional)
	   @return  (element) the new text node */
	textpath: function(parent, path, value, settings) {
		var args = this._args(arguments, ['path', 'value']);
		var node = this._text(args.parent, 'textPath', args.value, args.settings || {});
		node.setAttributeNS($.svg.xlinkNS, 'href', args.path);
		return node;
	},

	/* Draw text. */
	_text: function(parent, name, value, settings) {
		var node = this._makeNode(parent, name, settings);
		if (typeof value == 'string') {
			node.appendChild(node.ownerDocument.createTextNode(value));
		}
		else {
			for (var i = 0; i < value._parts.length; i++) {
				var part = value._parts[i];
				if (part[0] == 'tspan') {
					var child = this._makeNode(node, part[0], part[2]);
					child.appendChild(node.ownerDocument.createTextNode(part[1]));
					node.appendChild(child);
				}
				else if (part[0] == 'tref') {
					var child = this._makeNode(node, part[0], part[2]);
					child.setAttributeNS($.svg.xlinkNS, 'href', part[1]);
					node.appendChild(child);
				}
				else if (part[0] == 'textpath') {
					var set = $.extend({}, part[2]);
					set.href = null;
					var child = this._makeNode(node, part[0], set);
					child.setAttributeNS($.svg.xlinkNS, 'href', part[2].href);
					child.appendChild(node.ownerDocument.createTextNode(part[1]));
					node.appendChild(child);
				}
				else { // straight text
					node.appendChild(node.ownerDocument.createTextNode(part[1]));
				}
			}
		}
		return node;
	},

	/* Add a custom SVG element.
	   @param  parent    (element or jQuery) the parent node for the new element (optional)
	   @param  name      (string) the name of the element
	   @param  settings  (object) additional settings for the element (optional)
	   @return  (element) the new custom node */
	other: function(parent, name, settings) {
		var args = this._args(arguments, ['name']);
		return this._makeNode(args.parent, args.name, args.settings || {});
	},

	/* Create a shape node with the given settings. */
	_makeNode: function(parent, name, settings) {
		parent = parent || this._svg;
		var node = this._svg.ownerDocument.createElementNS($.svg.svgNS, name);
		for (var name in settings) {
			var value = settings[name];
			if (value != null && value != null && 
					(typeof value != 'string' || value != '')) {
				node.setAttribute($.svg._attrNames[name] || name, value);
			}
		}
		parent.appendChild(node);
		return node;
	},

	/* Add an existing SVG node to the diagram.
	   @param  parent  (element or jQuery) the parent node for the new node (optional)
	   @param  node    (element) the new node to add or
	                   (string) the jQuery selector for the node or
	                   (jQuery collection) set of nodes to add
	   @return  (SVGWrapper) this wrapper */
	add: function(parent, node) {
		var args = this._args((arguments.length == 1 ? [null, parent] : arguments), ['node']);
		var svg = this;
		args.parent = args.parent || this._svg;
		args.node = (args.node.jquery ? args.node : $(args.node));
		try {
			if ($.svg._renesis) {
				throw 'Force traversal';
			}
			args.parent.appendChild(args.node.cloneNode(true));
		}
		catch (e) {
			args.node.each(function() {
				var child = svg._cloneAsSVG(this);
				if (child) {
					args.parent.appendChild(child);
				}
			});
		}
		return this;
	},

	/* Clone an existing SVG node and add it to the diagram.
	   @param  parent  (element or jQuery) the parent node for the new node (optional)
	   @param  node    (element) the new node to add or
	                   (string) the jQuery selector for the node or
	                   (jQuery collection) set of nodes to add
	   @return  (element[]) collection of new nodes */
	clone: function(parent, node) {
		var svg = this;
		var args = this._args((arguments.length == 1 ? [null, parent] : arguments), ['node']);
		args.parent = args.parent || this._svg;
		args.node = (args.node.jquery ? args.node : $(args.node));
		var newNodes = [];
		args.node.each(function() {
			var child = svg._cloneAsSVG(this);
			if (child) {
				child.id = '';
				args.parent.appendChild(child);
				newNodes.push(child);
			}
		});
		return newNodes;
	},

	/* SVG nodes must belong to the SVG namespace, so clone and ensure this is so.
	   @param  node  (element) the SVG node to clone
	   @return  (element) the cloned node */
	_cloneAsSVG: function(node) {
		var newNode = null;
		if (node.nodeType == 1) { // element
			newNode = this._svg.ownerDocument.createElementNS(
				$.svg.svgNS, this._checkName(node.nodeName));
			for (var i = 0; i < node.attributes.length; i++) {
				var attr = node.attributes.item(i);
				if (attr.nodeName != 'xmlns' && attr.nodeValue) {
					if (attr.prefix == 'xlink') {
						newNode.setAttributeNS($.svg.xlinkNS,
							attr.localName || attr.baseName, attr.nodeValue);
					}
					else {
						newNode.setAttribute(this._checkName(attr.nodeName), attr.nodeValue);
					}
				}
			}
			for (var i = 0; i < node.childNodes.length; i++) {
				var child = this._cloneAsSVG(node.childNodes[i]);
				if (child) {
					newNode.appendChild(child);
				}
			}
		}
		else if (node.nodeType == 3) { // text
			if ($.trim(node.nodeValue)) {
				newNode = this._svg.ownerDocument.createTextNode(node.nodeValue);
			}
		}
		else if (node.nodeType == 4) { // CDATA
			if ($.trim(node.nodeValue)) {
				try {
					newNode = this._svg.ownerDocument.createCDATASection(node.nodeValue);
				}
				catch (e) {
					newNode = this._svg.ownerDocument.createTextNode(
						node.nodeValue.replace(/&/g, '&amp;').
						replace(/</g, '&lt;').replace(/>/g, '&gt;'));
				}
			}
		}
		return newNode;
	},

	/* Node names must be lower case and without SVG namespace prefix. */
	_checkName: function(name) {
		name = (name.substring(0, 1) >= 'A' && name.substring(0, 1) <= 'Z' ?
			name.toLowerCase() : name);
		return (name.substring(0, 4) == 'svg:' ? name.substring(4) : name);
	},

	/* Load an external SVG document.
	   @param  url       (string) the location of the SVG document or
	                     the actual SVG content
	   @param  settings  (boolean) see addTo below or
	                     (function) see onLoad below or
	                     (object) additional settings for the load with attributes below:
	                       addTo       (boolean) true to add to what's already there,
	                                   or false to clear the canvas first
						   changeSize  (boolean) true to allow the canvas size to change,
	                                   or false to retain the original
	                       onLoad      (function) callback after the document has loaded,
	                                   'this' is the container, receives SVG object and
	                                   optional error message as a parameter
	                       parent      (string or element or jQuery) the parent to load
	                                   into, defaults to top-level svg element
	   @return  (SVGWrapper) this root */
	load: function(url, settings) {
		settings = (typeof settings == 'boolean' ? {addTo: settings} :
			(typeof settings == 'function' ? {onLoad: settings} :
			(typeof settings == 'string' ? {parent: settings} : 
			(typeof settings == 'object' && settings.nodeName ? {parent: settings} :
			(typeof settings == 'object' && settings.jquery ? {parent: settings} :
			settings || {})))));
		if (!settings.parent && !settings.addTo) {
			this.clear(false);
		}
		var size = [this._svg.getAttribute('width'), this._svg.getAttribute('height')];
		var wrapper = this;
		// Report a problem with the load
		var reportError = function(message) {
			message = $.svg.local.errorLoadingText + ': ' + message;
			if (settings.onLoad) {
				settings.onLoad.apply(wrapper._container || wrapper._svg, [wrapper, message]);
			}
			else {
				wrapper.text(null, 10, 20, message);
			}
		};
		// Create a DOM from SVG content
		var loadXML4IE = function(data) {
			var xml = new ActiveXObject('Microsoft.XMLDOM');
			xml.validateOnParse = false;
			xml.resolveExternals = false;
			xml.async = false;
			xml.loadXML(data);
			if (xml.parseError.errorCode != 0) {
				reportError(xml.parseError.reason);
				return null;
			}
			return xml;
		};
		// Load the SVG DOM
		var loadSVG = function(data) {
			if (!data) {
				return;
			}
			if (data.documentElement.nodeName != 'svg') {
				var errors = data.getElementsByTagName('parsererror');
				var messages = (errors.length ? errors[0].getElementsByTagName('div') : []); // Safari
				reportError(!errors.length ? '???' :
					(messages.length ? messages[0] : errors[0]).firstChild.nodeValue);
				return;
			}
			var parent = (settings.parent ? $(settings.parent)[0] : wrapper._svg);
			var attrs = {};
			for (var i = 0; i < data.documentElement.attributes.length; i++) {
				var attr = data.documentElement.attributes.item(i);
				if (!(attr.nodeName == 'version' || attr.nodeName.substring(0, 5) == 'xmlns')) {
					attrs[attr.nodeName] = attr.nodeValue;
				}
			}
			wrapper.configure(parent, attrs, !settings.parent);
			var nodes = data.documentElement.childNodes;
			for (var i = 0; i < nodes.length; i++) {
				try {
					if ($.svg._renesis) {
						throw 'Force traversal';
					}
					parent.appendChild(wrapper._svg.ownerDocument.importNode(nodes[i], true));
					if (nodes[i].nodeName == 'script') {
						$.globalEval(nodes[i].textContent);
					}
				}
				catch (e) {
					wrapper.add(parent, nodes[i]);
				}
			}
			if (!settings.changeSize) {
				wrapper.configure(parent, {width: size[0], height: size[1]});
			}
			if (settings.onLoad) {
				settings.onLoad.apply(wrapper._container || wrapper._svg, [wrapper]);
			}
		};
		if (url.match('<svg')) { // Inline SVG
			loadSVG($.browser.msie ? loadXML4IE(url) :
				new DOMParser().parseFromString(url, 'text/xml'));
		}
		else { // Remote SVG
			$.ajax({url: url, dataType: ($.browser.msie ? 'text' : 'xml'),
				success: function(xml) {
					loadSVG($.browser.msie ? loadXML4IE(xml) : xml);
				}, error: function(http, message, exc) {
					reportError(message + (exc ? ' ' + exc.message : ''));
				}});
		}
		return this;
	},

	/* Delete a specified node.
	   @param  node  (element or jQuery) the drawing node to remove
	   @return  (SVGWrapper) this root */
	remove: function(node) {
		node = (node.jquery ? node[0] : node);
		node.parentNode.removeChild(node);
		return this;
	},

	/* Delete everything in the current document.
	   @param  attrsToo  (boolean) true to clear any root attributes as well,
	                     false to leave them (optional)
	   @return  (SVGWrapper) this root */
	clear: function(attrsToo) {
		if (attrsToo) {
			this.configure({}, true);
		}
		while (this._svg.firstChild) {
			this._svg.removeChild(this._svg.firstChild);
		}
		return this;
	},

	/* Serialise the current diagram into an SVG text document.
	   @param  node  (SVG element) the starting node (optional)
	   @return  (string) the SVG as text */
	toSVG: function(node) {
		node = node || this._svg;
		return (typeof XMLSerializer == 'undefined' ? this._toSVG(node) :
			new XMLSerializer().serializeToString(node));
	},

	/* Serialise one node in the SVG hierarchy. */
	_toSVG: function(node) {
		var svgDoc = '';
		if (!node) {
			return svgDoc;
		}
		if (node.nodeType == 3) { // Text
			svgDoc = node.nodeValue;
		}
		else if (node.nodeType == 4) { // CDATA
			svgDoc = '<![CDATA[' + node.nodeValue + ']' + ']>';
		}
		else { // Element
			svgDoc = '<' + node.nodeName;
			if (node.attributes) {
				for (var i = 0; i < node.attributes.length; i++) {
					var attr = node.attributes.item(i);
					if (!($.trim(attr.nodeValue) == '' || attr.nodeValue.match(/^\[object/) ||
							attr.nodeValue.match(/^function/))) {
						svgDoc += ' ' + (attr.namespaceURI == $.svg.xlinkNS ? 'xlink:' : '') + 
							attr.nodeName + '="' + attr.nodeValue + '"';
					}
				}
			}	
			if (node.firstChild) {
				svgDoc += '>';
				var child = node.firstChild;
				while (child) {
					svgDoc += this._toSVG(child);
					child = child.nextSibling;
				}
				svgDoc += '</' + node.nodeName + '>';
			}
				else {
				svgDoc += '/>';
			}
		}
		return svgDoc;
	}
});

/* Helper to generate an SVG path.
   Obtain an instance from the SVGWrapper object.
   String calls together to generate the path and use its value:
   var path = root.createPath();
   root.path(null, path.move(100, 100).line(300, 100).line(200, 300).close(), {fill: 'red'});
   or
   root.path(null, path.move(100, 100).line([[300, 100], [200, 300]]).close(), {fill: 'red'}); */
function SVGPath() {
	this._path = '';
}

$.extend(SVGPath.prototype, {
	/* Prepare to create a new path.
	   @return  (SVGPath) this path */
	reset: function() {
		this._path = '';
		return this;
	},

	/* Move the pointer to a position.
	   @param  x         (number) x-coordinate to move to or
	                     (number[][]) x-/y-coordinates to move to
	   @param  y         (number) y-coordinate to move to (omitted if x is array)
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	move: function(x, y, relative) {
		relative = (isArray(x) ? y : relative);
		return this._coords((relative ? 'm' : 'M'), x, y);
	},

	/* Draw a line to a position.
	   @param  x         (number) x-coordinate to move to or
	                     (number[][]) x-/y-coordinates to move to
	   @param  y         (number) y-coordinate to move to (omitted if x is array)
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	line: function(x, y, relative) {
		relative = (isArray(x) ? y : relative);
		return this._coords((relative ? 'l' : 'L'), x, y);
	},

	/* Draw a horizontal line to a position.
	   @param  x         (number) x-coordinate to draw to or
	                     (number[]) x-coordinates to draw to
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	horiz: function(x, relative) {
		this._path += (relative ? 'h' : 'H') + (isArray(x) ? x.join(' ') : x);
		return this;
	},

	/* Draw a vertical line to a position.
	   @param  y         (number) y-coordinate to draw to or
	                     (number[]) y-coordinates to draw to
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	vert: function(y, relative) {
		this._path += (relative ? 'v' : 'V') + (isArray(y) ? y.join(' ') : y);
		return this;
	},

	/* Draw a cubic Bézier curve.
	   @param  x1        (number) x-coordinate of beginning control point or
	                     (number[][]) x-/y-coordinates of control and end points to draw to
	   @param  y1        (number) y-coordinate of beginning control point (omitted if x1 is array)
	   @param  x2        (number) x-coordinate of ending control point (omitted if x1 is array)
	   @param  y2        (number) y-coordinate of ending control point (omitted if x1 is array)
	   @param  x         (number) x-coordinate of curve end (omitted if x1 is array)
	   @param  y         (number) y-coordinate of curve end (omitted if x1 is array)
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	curveC: function(x1, y1, x2, y2, x, y, relative) {
		relative = (isArray(x1) ? y1 : relative);
		return this._coords((relative ? 'c' : 'C'), x1, y1, x2, y2, x, y);
	},

	/* Continue a cubic Bézier curve.
	   Starting control point is the reflection of the previous end control point.
	   @param  x2        (number) x-coordinate of ending control point or
	                     (number[][]) x-/y-coordinates of control and end points to draw to
	   @param  y2        (number) y-coordinate of ending control point (omitted if x2 is array)
	   @param  x         (number) x-coordinate of curve end (omitted if x2 is array)
	   @param  y         (number) y-coordinate of curve end (omitted if x2 is array)
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	smoothC: function(x2, y2, x, y, relative) {
		relative = (isArray(x2) ? y2 : relative);
		return this._coords((relative ? 's' : 'S'), x2, y2, x, y);
	},

	/* Draw a quadratic Bézier curve.
	   @param  x1        (number) x-coordinate of control point or
	                     (number[][]) x-/y-coordinates of control and end points to draw to
	   @param  y1        (number) y-coordinate of control point (omitted if x1 is array)
	   @param  x         (number) x-coordinate of curve end (omitted if x1 is array)
	   @param  y         (number) y-coordinate of curve end (omitted if x1 is array)
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	curveQ: function(x1, y1, x, y, relative) {
		relative = (isArray(x1) ? y1 : relative);
		return this._coords((relative ? 'q' : 'Q'), x1, y1, x, y);
	},

	/* Continue a quadratic Bézier curve.
	   Control point is the reflection of the previous control point.
	   @param  x         (number) x-coordinate of curve end or
	                     (number[][]) x-/y-coordinates of points to draw to
	   @param  y         (number) y-coordinate of curve end (omitted if x is array)
	   @param  relative  (boolean) true for coordinates relative to the current point,
	                     false for coordinates being absolute
	   @return  (SVGPath) this path */
	smoothQ: function(x, y, relative) {
		relative = (isArray(x) ? y : relative);
		return this._coords((relative ? 't' : 'T'), x, y);
	},

	/* Generate a path command with (a list of) coordinates. */
	_coords: function(cmd, x1, y1, x2, y2, x3, y3) {
		if (isArray(x1)) {
			for (var i = 0; i < x1.length; i++) {
				var cs = x1[i];
				this._path += (i == 0 ? cmd : ' ') + cs[0] + ',' + cs[1] +
					(cs.length < 4 ? '' : ' ' + cs[2] + ',' + cs[3] +
					(cs.length < 6 ? '': ' ' + cs[4] + ',' + cs[5]));
			}
		}
		else {
			this._path += cmd + x1 + ',' + y1 + 
				(x2 == null ? '' : ' ' + x2 + ',' + y2 +
				(x3 == null ? '' : ' ' + x3 + ',' + y3));
		}
		return this;
	},

	/* Draw an arc to a position.
	   @param  rx         (number) x-radius of arc or
	                      (number/boolean[][]) x-/y-coordinates and flags for points to draw to
	   @param  ry         (number) y-radius of arc (omitted if rx is array)
	   @param  xRotate    (number) x-axis rotation (degrees, clockwise) (omitted if rx is array)
	   @param  large      (boolean) true to draw the large part of the arc,
	                      false to draw the small part (omitted if rx is array)
	   @param  clockwise  (boolean) true to draw the clockwise arc,
	                      false to draw the anti-clockwise arc (omitted if rx is array)
	   @param  x          (number) x-coordinate of arc end (omitted if rx is array)
	   @param  y          (number) y-coordinate of arc end (omitted if rx is array)
	   @param  relative   (boolean) true for coordinates relative to the current point,
	                      false for coordinates being absolute
	   @return  (SVGPath) this path */
	arc: function(rx, ry, xRotate, large, clockwise, x, y, relative) {
		relative = (isArray(rx) ? ry : relative);
		this._path += (relative ? 'a' : 'A');
		if (isArray(rx)) {
			for (var i = 0; i < rx.length; i++) {
				var cs = rx[i];
				this._path += (i == 0 ? '' : ' ') + cs[0] + ',' + cs[1] + ' ' +
					cs[2] + ' ' + (cs[3] ? '1' : '0') + ',' +
					(cs[4] ? '1' : '0') + ' ' + cs[5] + ',' + cs[6];
			}
		}
		else {
			this._path += rx + ',' + ry + ' ' + xRotate + ' ' +
				(large ? '1' : '0') + ',' + (clockwise ? '1' : '0') + ' ' + x + ',' + y;
		}
		return this;
	},

	/* Close the current path.
	   @return  (SVGPath) this path */
	close: function() {
		this._path += 'z';
		return this;
	},

	/* Return the string rendering of the specified path.
	   @return  (string) stringified path */
	path: function() {
		return this._path;
	}
});

SVGPath.prototype.moveTo = SVGPath.prototype.move;
SVGPath.prototype.lineTo = SVGPath.prototype.line;
SVGPath.prototype.horizTo = SVGPath.prototype.horiz;
SVGPath.prototype.vertTo = SVGPath.prototype.vert;
SVGPath.prototype.curveCTo = SVGPath.prototype.curveC;
SVGPath.prototype.smoothCTo = SVGPath.prototype.smoothC;
SVGPath.prototype.curveQTo = SVGPath.prototype.curveQ;
SVGPath.prototype.smoothQTo = SVGPath.prototype.smoothQ;
SVGPath.prototype.arcTo = SVGPath.prototype.arc;

/* Helper to generate an SVG text object.
   Obtain an instance from the SVGWrapper object.
   String calls together to generate the text and use its value:
   var text = root.createText();
   root.text(null, x, y, text.string('This is ').
     span('red', {fill: 'red'}).string('!'), {fill: 'blue'}); */
function SVGText() {
	this._parts = []; // The components of the text object
}

$.extend(SVGText.prototype, {
	/* Prepare to create a new text object.
	   @return  (SVGText) this text */
	reset: function() {
		this._parts = [];
		return this;
	},

	/* Add a straight string value.
	   @param  value  (string) the actual text
	   @return  (SVGText) this text object */
	string: function(value) {
		this._parts[this._parts.length] = ['text', value];
		return this;
	},

	/* Add a separate text span that has its own settings.
	   @param  value     (string) the actual text
	   @param  settings  (object) the settings for this text
	   @return  (SVGText) this text object */
	span: function(value, settings) {
		this._parts[this._parts.length] = ['tspan', value, settings];
		return this;
	},

	/* Add a reference to a previously defined text string.
	   @param  id        (string) the ID of the actual text
	   @param  settings  (object) the settings for this text
	   @return  (SVGText) this text object */
	ref: function(id, settings) {
		this._parts[this._parts.length] = ['tref', id, settings];
		return this;
	},

	/* Add text drawn along a path.
	   @param  id        (string) the ID of the path
	   @param  value     (string) the actual text
	   @param  settings  (object) the settings for this text
	   @return  (SVGText) this text object */
	path: function(id, value, settings) {
		this._parts[this._parts.length] = ['textpath', value, 
			$.extend({href: id}, settings || {})];
		return this;
	}
});

/* Attach the SVG functionality to a jQuery selection.
   @param  command  (string) the command to run (optional, default 'attach')
   @param  options  (object) the new settings to use for these SVG instances
   @return jQuery (object) for chaining further calls */
$.fn.svg = function(options) {
	var otherArgs = Array.prototype.slice.call(arguments, 1);
	if (typeof options == 'string' && options == 'get') {
		return $.svg['_' + options + 'SVG'].apply($.svg, [this[0]].concat(otherArgs));
	}
	return this.each(function() {
		if (typeof options == 'string') {
			$.svg['_' + options + 'SVG'].apply($.svg, [this].concat(otherArgs));
		}
		else {
			$.svg._attachSVG(this, options || {});
		} 
	});
};

/* Determine whether an object is an array. */
function isArray(a) {
	return (a && a.constructor == Array);
}

// Singleton primary SVG interface
$.svg = new SVGManager();

})(jQuery);

]]></script>
<script type="text/javascript"><![CDATA[
﻿/* http://keith-wood.name/svg.html
   jQuery DOM compatibility for jQuery SVG v1.4.4.
   Written by Keith Wood (kbwood{at}iinet.com.au) April 2009.
   Dual licensed under the GPL (http://dev.jquery.com/browser/trunk/jquery/GPL-LICENSE.txt) and 
   MIT (http://dev.jquery.com/browser/trunk/jquery/MIT-LICENSE.txt) licenses. 
   Please attribute the author if you use it. */

(function($) { // Hide scope, no $ conflict

/* Support adding class names to SVG nodes. */
$.fn.addClass = function(origAddClass) {
	return function(classNames) {
		classNames = classNames || '';
		return this.each(function() {
			if ($.svg.isSVGElem(this)) {
				var node = this;
				$.each(classNames.split(/\s+/), function(i, className) {
					var classes = (node.className ? node.className.baseVal : node.getAttribute('class'));
					if ($.inArray(className, classes.split(/\s+/)) == -1) {
						classes += (classes ? ' ' : '') + className;
						(node.className ? node.className.baseVal = classes :
							node.setAttribute('class',  classes));
					}
				});
			}
			else {
				origAddClass.apply($(this), [classNames]);
			}
		});
	};
}($.fn.addClass);

/* Support removing class names from SVG nodes. */
$.fn.removeClass = function(origRemoveClass) {
	return function(classNames) {
		classNames = classNames || '';
		return this.each(function() {
			if ($.svg.isSVGElem(this)) {
				var node = this;
				$.each(classNames.split(/\s+/), function(i, className) {
					var classes = (node.className ? node.className.baseVal : node.getAttribute('class'));
					classes = $.grep(classes.split(/\s+/), function(n, i) { return n != className; }).
						join(' ');
					(node.className ? node.className.baseVal = classes :
						node.setAttribute('class', classes));
				});
			}
			else {
				origRemoveClass.apply($(this), [classNames]);
			}
		});
	};
}($.fn.removeClass);

/* Support toggling class names on SVG nodes. */
$.fn.toggleClass = function(origToggleClass) {
	return function(className, state) {
		return this.each(function() {
			if ($.svg.isSVGElem(this)) {
				if (typeof state !== 'boolean') {
					state = !$(this).hasClass(className);
				}
				$(this)[(state ? 'add' : 'remove') + 'Class'](className);
			}
			else {
				origToggleClass.apply($(this), [className, state]);
			}
		});
	};
}($.fn.toggleClass);

/* Support checking class names on SVG nodes. */
$.fn.hasClass = function(origHasClass) {
	return function(className) {
		className = className || '';
		var found = false;
		this.each(function() {
			if ($.svg.isSVGElem(this)) {
				var classes = (this.className ? this.className.baseVal :
					this.getAttribute('class')).split(/\s+/);
				found = ($.inArray(className, classes) > -1);
			}
			else {
				found = (origHasClass.apply($(this), [className]));
			}
			return !found;
		});
		return found;
	};
}($.fn.hasClass);

/* Support attributes on SVG nodes. */
$.fn.attr = function(origAttr) {
	return function(name, value, type) {
		if (typeof name === 'string' && value === undefined) {
			var val = origAttr.apply(this, [name, value, type]);
			if (val && val.baseVal && val.baseVal.numberOfItems != null) { // Multiple values
				value = '';
				val = val.baseVal;
				if (name == 'transform') {
					for (var i = 0; i < val.numberOfItems; i++) {
						var item = val.getItem(i);
						switch (item.type) {
							case 1: value += ' matrix(' + item.matrix.a + ',' + item.matrix.b + ',' +
										item.matrix.c + ',' + item.matrix.d + ',' +
										item.matrix.e + ',' + item.matrix.f + ')';
									break;
							case 2: value += ' translate(' + item.matrix.e + ',' + item.matrix.f + ')'; break;
							case 3: value += ' scale(' + item.matrix.a + ',' + item.matrix.d + ')'; break;
							case 4: value += ' rotate(' + item.angle + ')'; break; // Doesn't handle new origin
							case 5: value += ' skewX(' + item.angle + ')'; break;
							case 6: value += ' skewY(' + item.angle + ')'; break;
						}
					}
					val = value.substring(1);
				}
				else {
					val = val.getItem(0).valueAsString;
				}
			}
			return (val && val.baseVal ? val.baseVal.valueAsString : val);
		}

		var options = name;
		if (typeof name === 'string') {
			options = {};
			options[name] = value;
		}
		return this.each(function() {
			if ($.svg.isSVGElem(this)) {
				for (var n in options) {
					var val = ($.isFunction(options[n]) ? options[n]() : options[n]);
					(type ? this.style[n] = val : this.setAttribute(n, val));
				}
			}
			else {
				origAttr.apply($(this), [name, value, type]);
			}
		});
	};
}($.fn.attr);

/* Support removing attributes on SVG nodes. */
$.fn.removeAttr = function(origRemoveAttr) {
	return function(name) {
		return this.each(function() {
			if ($.svg.isSVGElem(this)) {
				(this[name] && this[name].baseVal ? this[name].baseVal.value = '' :
					this.setAttribute(name, ''));
			}
			else {
				origRemoveAttr.apply($(this), [name]);
			}
		});
	};
}($.fn.removeAttr);

/* Add numeric only properties. */
$.extend($.cssNumber, {
	'stopOpacity': true,
	'strokeMitrelimit': true,
	'strokeOpacity': true
});

/* Support retrieving CSS/attribute values on SVG nodes. */
if ($.cssProps) {
	$.css = function(origCSS) {
		return function(elem, name) {
			var value = (name.match(/^svg.*/) ? $(elem).attr($.cssProps[name] || name) : '');
			return value || origCSS(elem, name);
		};
	}($.css);
}
  
/* Determine if any nodes are SVG nodes. */
function anySVG(checkSet) {
	for (var i = 0; i < checkSet.length; i++) {
		if (checkSet[i].nodeType == 1 && checkSet[i].namespaceURI == $.svg.svgNS) {
			return true;
		}
	}
	return false;
}

/* Update Sizzle selectors. */

$.expr.relative['+'] = function(origRelativeNext) {
	return function(checkSet, part, isXML) {
		origRelativeNext(checkSet, part, isXML || anySVG(checkSet));
	};
}($.expr.relative['+']);

$.expr.relative['>'] = function(origRelativeChild) {
	return function(checkSet, part, isXML) {
		origRelativeChild(checkSet, part, isXML || anySVG(checkSet));
	};
}($.expr.relative['>']);

$.expr.relative[''] = function(origRelativeDescendant) {
	return function(checkSet, part, isXML) {
		origRelativeDescendant(checkSet, part, isXML || anySVG(checkSet));
	};
}($.expr.relative['']);

$.expr.relative['~'] = function(origRelativeSiblings) {
	return function(checkSet, part, isXML) {
		origRelativeSiblings(checkSet, part, isXML || anySVG(checkSet));
	};
}($.expr.relative['~']);

$.expr.find.ID = function(origFindId) {
	return function(match, context, isXML) {
		return ($.svg.isSVGElem(context) ?
			[context.ownerDocument.getElementById(match[1])] :
			origFindId(match, context, isXML));
	};
}($.expr.find.ID);

var div = document.createElement('div');
div.appendChild(document.createComment(''));
if (div.getElementsByTagName('*').length > 0) { // Make sure no comments are found
	$.expr.find.TAG = function(match, context) {
		var results = context.getElementsByTagName(match[1]);
		if (match[1] === '*') { // Filter out possible comments
			var tmp = [];
			for (var i = 0; results[i] || results.item(i); i++) {
				if ((results[i] || results.item(i)).nodeType === 1) {
					tmp.push(results[i] || results.item(i));
				}
			}
			results = tmp;
		}
		return results;
	};
}

$.expr.preFilter.CLASS = function(match, curLoop, inplace, result, not, isXML) {
	match = ' ' + match[1].replace(/\\/g, '') + ' ';
	if (isXML) {
		return match;
	}
	for (var i = 0, elem = {}; elem != null; i++) {
		elem = curLoop[i];
		if (!elem) {
			try {
				elem = curLoop.item(i);
			}
			catch (e) {
				// Ignore
			}
		}
		if (elem) {
			var className = (!$.svg.isSVGElem(elem) ? elem.className :
				(elem.className ? elem.className.baseVal : '') || elem.getAttribute('class'));
			if (not ^ (className && (' ' + className + ' ').indexOf(match) > -1)) {
				if (!inplace)
					result.push(elem);
			}
			else if (inplace) {
				curLoop[i] = false;
			}
		}
	}
	return false;
};

$.expr.filter.CLASS = function(elem, match) {
	var className = (!$.svg.isSVGElem(elem) ? elem.className :
		(elem.className ? elem.className.baseVal : elem.getAttribute('class')));
	return (' ' + className + ' ').indexOf(match) > -1;
};

$.expr.filter.ATTR = function(origFilterAttr) {
	return function(elem, match) {
		var handler = null;
		if ($.svg.isSVGElem(elem)) {
			handler = match[1];
			$.expr.attrHandle[handler] = function(elem){
				var attr = elem.getAttribute(handler);
				return attr && attr.baseVal || attr;
			};
		}
		var filter = origFilterAttr(elem, match);
		if (handler) {
			$.expr.attrHandle[handler] = null;
		}
		return filter;
	};
}($.expr.filter.ATTR);

/*
	In the event.add function (line 2646, v1.6.2):

				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					try { // SVG
						elem.addEventListener( type, eventHandle, false );

					} catch(e) {
						if (elem.attachEvent)
							elem.attachEvent( "on" + type, eventHandle );
					}
				}

	In the event.remove function (line 2776, v1.6.2):

				if ( !special.teardown || special.teardown.call( elem, namespaces ) === false ) {
					try { // SVG
						elem.removeEventListener(type, elemData.handle, false);
					}
					catch (e) {
						if (elem.detachEvent)
							elem.detachEvent("on" + type, elemData.handle);
					}
				}

	In the event.fix function (line 3036, v.1.6.2)

		if (event.target.namespaceURI == 'http://www.w3.org/2000/svg') { // SVG
			event.button = [1, 4, 2][event.button];
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		// Note: button is not normalized, so don't use it
		if ( !event.which && event.button !== undefined ) {
			event.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));
		}

	In the Sizzle function (line 3873, v1.6.2):

	if ( toString.call(checkSet) === "[object Array]" ) {
		if ( !prune ) {
			results.push.apply( results, checkSet );

		} else if ( context && context.nodeType === 1 ) {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i])) ) {
					results.push( set[i] || set.item(i) ); // SVG
				}
			}

		} else {
			for ( i = 0; checkSet[i] != null; i++ ) {
				if ( checkSet[i] && checkSet[i].nodeType === 1 ) {
					results.push( set[i] || set.item(i) ); // SVG
				}
			}
		}

	} else {

	In the fallback for the Sizzle makeArray function (line 4617, v1.6.2):

		if ( toString.call(array) === "[object Array]" ) {
			Array.prototype.push.apply( ret, array );

		} else {
			if ( typeof array.length === "number" ) {
				for ( var l = array.length; i < l; i++ ) {
					ret.push( array[i] || array.item(i) ); // SVG
				}

			} else {
				for ( ; array[i]; i++ ) {
					ret.push( array[i] );
				}
			}
		}

	In the jQuery.cleanData function (line 6220, v1.6.2)

				if ( deleteExpando ) {
					delete elem[ jQuery.expando ];

				} else {
					try { // SVG
						elem.removeAttribute( jQuery.expando );
					} catch (e) {
						// Ignore
					}
				}

	In the fallback getComputedStyle function (line 6509, v.1.6.2)

		defaultView = (elem.ownerDocument ? elem.ownerDocument.defaultView : elem.defaultView); // SVG
		if ( !defaultView ) {
			return undefined;
		}

*/

})(jQuery);

]]></script>
<script type="text/javascript"><![CDATA[
const SVG = "http://www.w3.org/2000/svg";
const XLINK = "http://www.w3.org/1999/xlink";

var main_trans = null, cur_trans = null;
var everything = null, marker = null;
var zoom_value = 0;
var ex = 0, ey = 0, mouse_position_in_lumispace = 0;


var viewdata = null;
var eventdata = null;
var ui = null;
var particle_selector = null;

function mcviz_init(event) {
    // Performed on script load

    c = $("#whole_document")[0];
    c.addEventListener("mousemove", on_mouse_move, false);
    c.addEventListener("mouseup", on_mouse_up, false);
    c.addEventListener("mousedown", on_mouse_down, false);
    
    window.addEventListener("DOMMouseScroll", on_mouse_scroll, false);  
    window.addEventListener("mousewheel", on_mouse_scroll, false);        
    window.onmousewheel = document.onmousewheel = on_mouse_scroll;
    
    everything = $("#everything")[0];
    
    doc = everything.getBBox();
    winw = window.innerWidth; winh = window.innerHeight;
    
    // Set the scale 
    if (winw / winh > doc.width / doc.height)
    {
        everything.vScale = 0.9 * window.innerHeight / doc.height;
    } else
    {
        everything.vScale = 0.9 * window.innerWidth / doc.width;
    }
    
    zoom_value = Math.log(everything.vScale)*20;
    
    // Center the document!
    doc_window_w = everything.vScale * doc.width;
    doc_window_h = everything.vScale * doc.height;
    y = window.innerHeight / 2 - doc_window_h / 2;
    x = window.innerWidth  / 2 - doc_window_w / 2;
    main_trans = everything.vTranslate = [x, y];
    
    update_transform();
       
    viewdata = get_mcvizns("viewdata");
    eventdata = get_mcvizns("eventdata");
    ui = $("#interface");
    particle_selector = $("#selected-particle");
    
    function get_x(element) {
        if (element.x)  return element.x.baseVal.value;
        if (element.cx) return element.cx.baseVal.value;
    }
    
    function get_y(element) {
        if (element.y)  return element.y.baseVal.value;
        if (element.cy) return element.cy.baseVal.value;
    }
    
    function hover_particle(event) {
        use_element = get_element(event);
        
        // Get interesting references
        reference = $(use_element).attr("mcviz:r").split("_");
        particle_ref = reference[0];
        
        // selector_positioning_element = $("ellipse[mcviz\\:r=" + particle_ref + "]");
        // if (selector_positioning_element) use_element = selector_positioning_element[0];
        
        particle_selector.attr("cx", get_x(use_element));
        particle_selector.attr("cy", get_y(use_element));
        particle_selector.attr("transform", $(use_element).attr("transform"));
        
        
        particle_element = viewdata.find("particle[id=" + particle_ref + "]");
        vertex_in  = viewdata.find("vertex[id=" + particle_element.attr("vin") + "]");
        vertex_out = viewdata.find("vertex[id=" + particle_element.attr("vout") + "]");
        
        ui.find("#id")  .text(particle_element.attr("id"));
        ui.find("#vin") .text(particle_element.attr("vout"));
        ui.find("#vout").text(particle_element.attr("vin"));
        
        represented_particles = particle_element.attr("event").split(" ");
        represented_particles = $.map(represented_particles, 
            function(value) { 
                return eventdata.find("particle[id=" + value + "]"); 
            });
        
        
        ui.find("#contents").text("Eta: " + represented_particles[0].attr("eta"));
        
        return;
        items = ["id", "pdgid", "pt", "phi", "e", "m"];
        for (var i = 0; i < items.length; i++) {
            var value = items[i];
            ui.find("#" + value).text(particle_element.attr(value));
        }
        
    }
    
    // pt: eventdata.find("particle").map(function(i, p) { return $(p).attr(""); })
    
    $("use").hover(hover_particle);
    //$("ellipse[mcviz\\:r]").hover(hover_particle);
    
    $("button.#reset").click(function(event) {
        $("[mcviz\\:r]").attr("opacity", null);
    });
    
    function filter_particles(func) {
        $("[mcviz\\:r]").attr("opacity", 0.25);
        
        good_ids = eventdata.find("particle")
            .filter(func)
            .map(function(i, p) { return $(p).attr("id"); });
        
        for (var i = 0; i < good_ids.length; i++) {
            $("[mcviz\\:r=P" + good_ids[i] + "]").attr("opacity", null);
        }
    }
    
    $("button.#hidelowpt").click(function(event) {
        //viewdata.find("particle").filter(function(p) { return p.attr(pt) < 
        filter_particles(function(i, p) { return $(p).attr("pt") > 10; });
    });
    $("button.#hidehieta").click(function(event) {
        //viewdata.find("particle").filter(function(p) { return p.attr(pt) < 
        filter_particles(function(i, p) { return Math.abs($(p).attr("eta")) < 2; });
    });
}

function get_mcvizns(what) {
    var result = null;
    result = $(what);
    if (result.size()) return result;
    result = $("mcviz\\:" + what);
    return result;
}

function get_element(evt) {
    var el = null;
    if (evt.target.correspondingUseElement)
        el = evt.target.correspondingUseElement;
    else
        el = evt.target;
    return el
}

function update_transform() 
{
    trans = everything.vTranslate; scale = everything.vScale;
    everything.setAttribute(
        "transform", 
        "translate(" + trans[0] + ", " + trans[1] + ") " +
        "scale(" + scale + ", " + scale + ")");
}

function on_mouse_scroll(ev) 
{
    if (ev.wheelDelta) delta = ev.wheelDelta / 120 * 3;
    if (ev.detail) delta = -ev.detail;
    update_zoom(delta, ev.clientX, ev.clientY);
    
    // Prevent usual window scrolling
    ev.preventDefault();
}

function update_zoom(scroll, ex, ey) 
{
    s_before = s = everything.vScale;
    new_zoom = zoom_value+scroll;
    
    //if (new_zoom > 55) return; // too far zoomed in
    
    s = Math.exp(new_zoom / 20);
    if (s < 0.01) return; // Too far zoomed out (primitive)
    
    zoom_value += scroll;
    everything.vScale = s;
    
    // Translate canvas to keep mouse stationary with respect to image
    main_trans[0] += (s / s_before - 1)*(main_trans[0] - ex);
    main_trans[1] += (s / s_before - 1)*(main_trans[1] - ey);
    
    update_transform();
}

function on_mouse_down(ev) 
{
    // ignore if something else is already going on
    if (cur_trans != null)
        return;

    cur_trans = { s: everything.vScale, t: everything.vTranslate,
                  x: ev.clientX, y: ev.clientY };
       
    ev.preventDefault();
}

function on_mouse_move(ev) 
{
    if (ev.button != 0)
        alert(ev.button);
    ex = ev.clientX; ey = ev.clientY;
    
    if (!("cur_trans" in window) || cur_trans == null)
    {
        return;
    }

    // If we get here, the mouse is held down.

    main_trans[0] += ex - cur_trans.x; cur_trans.x = ex;
    main_trans[1] += ey - cur_trans.y; cur_trans.y = ey;

    update_transform();
    ev.preventDefault();
}

function on_mouse_up(ev) 
{
    // Transform complete
    cur_trans = null;
    ev.preventDefault();
}

]]></script>


</svg>